code,name,lecturer,description,ects
CS1003,Mathematics,Hugh Gibbons,"Learning Outcomes:
When students have successfully completed this module they should be able to:

·     Produce coherent, convincing mathematical arguments that are precise in terms of both technical description and computation

·     Assimilate complex mathematical ideas and arguments.

·     Derive, formulate and apply solutions for linear systems

·     Recognise and employ the main ideas and techniques of basic calculus

·     Create mathematical proofs using formal symbol manipulation

·     Articulate the logic behind formal proofs

             Construct rigorous proofs in discrete mathematics and logic
Module Learning Aims:
The module aims to provide students with an introduction to the mathematics, both continuous and discrete, which lies at the foundation of many real-world applications in Computer Science, Engineering and the Social Sciences.

Mathematics is of interest to computer scientists due to the fact that it is both practical and theoretical in nature. Not only does it have a myriad of applications (e.g. in wireless communications and computer graphics), it is also of intrinsic interest to theoretical computer scientists. The mathematical techniques learned as part of this module have wider applications in areas as diverse as Business (e.g. for modelling volatility and risk), Economics and Engineering (e.g. for structural monitoring).

This module aims to develop the students’ skills and abilities in the mathematical methods necessary for solving practical problems. In the first semester students will encounter some of the key mathematical structures at the heart of computer science including the representation of data using matrices. They will gain a greater appreciation of the relationships between calculus and the graphs of functions, including the representation of functions using Taylor Series. During Semester 2 students will be introduced to discrete mathematics and mathematical logic along with their applications to computer science. In particular, the module will introduce set operations, discrete maths functions in Number Theory and Logic calculation. This part of the module is influenced by the approaches of Backhouse, Dijkstra and Gries.

One of the key objectives for this module is to introduce students to the learning styles needed for university level mathematics. Students will be encouraged to develop the independent, reflective learning skills needed for success at University level. It is expected that students will adapt their learning style to become more independent, self-motivated learners.
Module Content:
Specific topics addressed in this module include:

·     Linear algebra

·     Calculus and its applications

·     Set Theory

·     Logic

        ·   Number Theory 
",10
CS1010,Introduction To Programming,Kenneth Dawson-Howe,"Learning Outcomes:
When students have successfully completed this module they should be able to:

1.    Solve introductory programming problems in Java.

2.    Break problems into sub-problems, which can then be solved using simple algorithms.

3.    Design algorithms using sequence, selection, and iteration.

4.    Build object-based (i.e., not using inheritance) programs using class-based decomposition.

5.    Use an Interactive Development Environment (IDE) to write, compile, test, and debug a computer program.

6.    Recognise the software engineering concerns that give rise to the use of classes and other abstraction mechanisms.

 
Module Learning Aims:
This module provides an introductory course in computer programming. This course takes a practical approach to teaching the fundamental concepts of computer programming with a strong emphasis on tutorial and laboratory work and is an important vehicle for developing students’ analytical and problem-solving skills.

This module aims to give students an understanding of how computers can be employed to solve real-world problems. Specifically, this course introduces students to the object-oriented approach to program design and teaches them how to write programs in an object-oriented language (in this case Java). 

Students also have the opportunity to reinforce their problem solving and programming skills by developing solutions to programming problems and implementing those solutions as object-based programs.

 
Module Content:
Specific topics addressed in this module include:

·    Types and variables including integer and floating-point types.

·    Assignment and expressions. 

·    Boolean expressions.

·    Selection in Java: if, if-else, nested if and switch-case statements.

·    Iteration in Java: while, do-while and for statements.

·    Design of simple algorithms using sequence, selection, and iteration.

·    Introduction to classes and objects including attributes and methods.

·    Abstraction and encapsulation.

·    Recursive methods.

·    Characters and strings.

Arrays including 2-dimensional arrays.
",10
CS1013,Programming Project I,Gavin Doherty,"Learning Outcomes:
When students have successfully completed this module they should be able to: Write programs which produce graphical output. Write programs which respond to user input from mouse and keyboard. Write programs which are structured in a way which makes them easier to develop and maintain. Write programs collaboratively as part of a larger team.
Module Learning Aims:
CS1013 is a course which concentrates on development of practical programming ability through example-based lecturing coupled with intensive laboratory sessions. The emphasis throughout is on producing working programs, starting with interactive graphical applications and moving on to construction of a larger group project involving a data visualisation task
Module Content:
Specific topics addressed in this module include: Drawing basic shapes / program co-ordinates
Displaying fonts in applications. Mouse-based visual application control Collision Detection. Code-conventions, getters/setters Using images in application development. Arrays of objects. Moving and over-lapping visualisations Widget/button based program control. Text-collection and usage in applications. Group based project ethos. Project planning / implementation Writing good quality code
",5
CS1021,Introduction To Computing I,Rebekah Clarke,"Learning Outcomes:
When students have successfully completed this module they should be able to:

describe the basic characteristics, structure and operation of a computer system;

represent and interpret basic information (integers, text) in binary form;

translate between simple high-level programming language constructs and their

assembly language equivalents;

design, construct, document and test small-scale assembly language programs to

solve simple problems;

reason about the cost of executing instructions and the efficiency of simple programs;

Make use of appropriate documentation and reference material.

 
Module Learning Aims:
This module provides students with an introduction to the basic structure and operation of a computer system, focussing on the processor (CPU), memory and the execution of software.

Students gain an insight into the execution of programs on a computer system by designing, implementing and executing simple assembly language programs. Students are also introduced to concepts that are fundamental to the study of Computer Science, including the binary numeral system and the representation of basic information such as signed integers and strings (text).

Students are encouraged to consider the relationship between high-level programming language constructs – from simple assignments and arithmetic expressions to conditional (if) and iterative (while) execution – and the realisation of these constructs as sequences of machine instructions.

Students are also given opportunities to develop their problem solving, programming and written communication skills by designing solutions to programming problems, implementing those solutions, first in the form of high-level pseudo-code programs and then as assembly language programs, which must be documented and tested.

 
Module Content:
Specific topics addressed in this module include:

 

number systems, memory and data representation;

basic computer architecture (CPU, memory, registers, fetch-decode-execute loop);

assembly language and machine code;

binary arithmetic and bit-wise operations;

program flow control using branch instructions;

memory accesses (using load and store instructions).


 
",5
CS1022,Introduction To Computing Ii,Jonathan Dukes,"Learning Outcomes:
This module continues directly from CS1021 (which is a prerequisite) and examines the structure and behaviour of computer systems in greater depth. In particular, this module introduces students to the implementation of simple data structures (stacks, multi-dimensional arrays, composite data types), subroutines, exceptions, interrupts and basic I/O at the machine level.

The relationship between high-level programming language constructs and their realisation as executed instructions is explored further by developing pseudo-code solutions to programming problems in the first instance, before translating those solutions into assembly language programs. Particular attention is paid to the implementation of subroutines, the system stack and parameter passing conventions.

Students are given opportunities throughout the module to reinforce their problem solving, programming and written communication skills by designing, implementing, documenting and testing solutions to programming problems of increasing complexity. Problem decomposition is strongly encouraged.

 
Module Learning Aims:
When students have successfully completed this module they should be able to:

·     Describe the characteristics, structure and operation of a computer system, including the execution of subroutines and the interface between the processor and external devices;

·     Translate between high-level programming language constructs, including fundamental data structures and subroutines, and their assembly language equivalents;

·     Design, construct, document and test assembly language programs to solve small-scale problems of moderate complexity by decomposing the problems into smaller parts and implementing solutions consisting of one or more assembly language subroutines;

·     Construct assembly language programs that can interact with simple external devices.

 
Module Content:
Specific topics addressed in this module include:

 
·     Stacks;

·     Subroutines;

·     Parameter passing conventions;

·     Single- and multi-dimensional arrays;

·     Floating-point number representation;

·     Exceptions and interrupts;

Basic I/O using memory-mapped peripherals.

 
",5
CS1025,Electrotechnology,Eamonn O'Nuallain,"Learning Outcomes:
When students have successfully completed this course they should be able to:

 
(i)   State and apply the fundamental operating principles of electronic circuitry and electromagnetism.

(ii)  Describe the characteristics and analyse the behavior of basic circuit elements (resistors, capacitors, inductors, semiconductor diodes. transistors and AD and DC supplies).

(iii)  Construct and analyze basic analog and digital circuits. 

 
Module Learning Aims:
The Electrotechnology course is intended as an introductory course. The course examines the structure of matter from an electrical perspective dealing with conductors, dielectrics and semiconductors. Concepts of electrical charge, Electric and Magnetic fields are also examined. With this material concepts of voltage, current, impedance in electrical circuits are explored. Circuit elements such as the resistor, capacitor, inductor, the semiconductor diode and transistors are examined as well as ideal and practical ac and dc supplies. Methods of analyzing electrical circuits consisting of the above components are examined. In the lab sessions students are expected to build electronic circuits and explain their operation.
Module Content:
(i)       The basic structure of matter. Conductors, insulators and Semiconductors.

(ii)      Electric and Magnetic fields. Coulomb’s Law, The Lorentz Force law, Faraday’s law.

(iii)      Semiconductor doping, the semiconductor diode, transistors.

(iv)      Voltage and current. The resistor, capacitor and the inductor.
            (v)      Series and parallel resistors, the potential divider. Electric Power. Basic circuit analysis.

 
",5
CS1026,Digital Logic Design,John Waldron,"Learning Outcomes:
When students have successfully completed this module they should be able to:

 
● State and apply the laws and standard methods of Boolean algebra to the manipulation of logic functions

● Analyze and design combinatorial logic functions.

● Implement digital logic designs in hardware.

● Conduct and describe experiments to verify the correct behaviour of a digital logic circuit and, where necessary, locate and correct faults

● Synchronous / Asynchronous logic

● Flip Flops and Storage Elements

● Algorithmic State Machines

● Introduction Advanced Digital Logic topics
Module Learning Aims:
The lectures do not assume any prior knowledge of the subject, and build gradually in difficulty towards the end of the course. Starting with the theoretical foundations of logic, the students learn about combinatorial logic and synchronous logic, and how it can be used to construct logic functions that are useful in computing systems. The focus is on laying the groundwork for the hardware courses in the second year. Care is taken that the students realize the subject applies to both computer software and hardware. Laboratory experiments reinforce the concepts as well as adding variety and introducing practical elements.
Module Content:
Shannon’s switching algebra, Boolean functions, other logic operators, simplification of Boolean functions, Karnaugh maps, combinatorial rule, exceptions to rule, don't care outputs & inputs, arithmetic logic, MUXes/deMUXes, decoders, programmable logic, ROMS, PALs, PLAs.

 
Edge triggering, master/slave and edge-triggered flip-flops, characteristic equations, synchronous sequential logic, finite state machines, machine classes, state tables & diagrams, FSM design, state equivalence, minimization, state equations, algorithmic state machines, ASM design, control paths, data paths, counters and sequencers, ASM design examples
",10
CS1031,Telecommunications I,Marco Ruffini,"Learning Outcomes:
Describe the relevance of information in our society

Explain how information is measuered in telecommunicaiotns

Illustrate properties of analogue and digital signals, and translate between time and frequency domain.

Explain why and how analogue and digital signals are modulated, illustrate the characteristics of modulated signals.

Explain why and how are signal multiplexed both in time and frequency, the difference between these two multiplexing schemes, and their main characteristics.

Design a transmission system, and calculate its performance.

Illustrate the main characteristics of modern telecommunications networks.


 
Module Learning Aims:
The Telecommunications course is intended as an introductory course. It begins with an overview of the concept of information and its significance in todays society. The aim of the course is to then shows how such information is transmitted over links and networks. The course gives particular focus on the understanding of time domain, frequency domain and bandwidth of signals. It introduces some basic operations, such as modulation and multiplexing, and will introduce some general concept of data transmission and transmission media. Course work will consists on laboratories that will put in practice most of the theory explained during the lectures.
Module Content:
Introduction to modern telecommunications

Protocol stacks, OSI, TCP/IP layers

Definition of signal, periodic and aperiodic signals

Time domain and frequency domain concepts

 Fourier Series analysis and decomposition

Analog and digital modulation

Multiplexing

Signal propagation

Concepts of information theory


 
",5
CS1081,Computers And Society,Brendan Tangney,"Learning Outcomes:
When students have successfully completed this module they should be able to:

demonstrate a deeper awareness of the ways in which information technology and society interact and influence each other

communicate effectively in written form and in presentations

critique their own involvement in a project team


 
Module Learning Aims:
When students have successfully completed this module they should be able to:

demonstrate a deeper awareness of the ways in which information technology and society interact and influence each other

communicate effectively in written form and in presentations

critique their own involvement in a project team


 
Module Content:
IT and its “impact” on society; models for assessing technological “impact”; history of IT; ethics; writing, presenting and argumentation; other topics.
",5
CS1E03,1E3 Computer Engineering I,Lucy Hederman,"Learning Outcomes:
Upon completion of this module, students will be able to:

Analyse simple programming problems;

Specify and design an algorithm to solve simple programming problems;

Write C++ programmes to solve simple programming problems;

Compile, run, test and debug C++ programmes;

Select and use correctly appropriate control structures for specific programming sub-problems;

Recognise the value of procedural abstraction and be able to use procedures to simplify programme design, hide detail and allow reuse of code;

Use arrays where appropriate in the design and implementation of a programme;

Predict the behaviour of a given C++ program that uses the concepts and constructs covered by the course

 
Module Learning Aims:
This module aims to equip students with the skills to design and develop simple imperative programs. It provides a solid grounding in algorithm design and programming techniques, in preparation for later courses that require programming.

 
Module Content:
Introduction to computers and computing;

Programming, compiling and running programmes;

Basic C++ programmes; expressions, variables and data types, assignment;

Selection and the IF-ELSE statement;

Iteration, WHILE loops and FOR loops;

Programme design process, algorithms and pseudocode;

Advanced control flow: nested loops, nested IFs, the switch statement;

Procedural abstraction, functions in C/li>
File input/output;

Testing and debugging strategies;
Arrays and array algorithms.

 
",5
CS2010,Algorithms And Data Structures,Vasileios Koutavas,"Learning Outcomes:
Having successfully completed this module students will:

1.   Have gained significant knowledge on algorithms and data structures, and the mathematical theory and techniques to evaluate their efficiency and effectiveness.

2.   Have the ability to evaluate algorithms in terms of their running time and memory space requirements and classify those algorithms in the major complexity classes using appropriate performance models.

3.   Be able to efficiently implement the operations of the main data structures used in most programming.

4.   Gain experience through experiments in implementing effective new and existing algorithms.

5.   Be able to identify the most suitable data structures and algorithms for each programming problem based on the parameters of the problem, the advantages and limitations of each data structura and algorithm, the resources avaliable, the desired performance criteria etc.

6.   Be able to design and implement robust, effective and well-structured Java programs using industry standards such as Abstract Data Types and the approaches of unit testing, test coverage, Design by Contract, and pre-/post-conditions. Students will be able to use the last two approaches to avoid defensive programming.
Module Learning Aims:
The aim of the module is threefold:

1.   To teach effective programming and problem solving, using a core toolset of classical algorithms and data structures.

2.   To introduce the methods for evaluating the performance and requirements of programs written by the students

        3.   To promote effective software engineering by using well-established techniques for code modularity, structuring, debugging and readablity, such as Design by Contract, and unit testing.
Module Content:
Theory:

·     Asymptotic growth functions and analysis of source code to derive running time and space requirements

·     Amortised running time analysis of algorithms

·     Permutations, Combinations and Sets

Data structures:

·     Array and linked list implementations of stacks and queues.

·     Doubly linked lists

·     Union-find

·     Binary trees, binary search trees, balanced search trees, B-trees

·     Hash tables

·     Undirected, directed and weighted graph implementations using adjacency lists

·     Special topics

Algorithms:

·     Recursion vs iteration; tree traversals

·     Greedy algorithms

·     Divide and conquer

·     Graph algorithms

·     Searching and Sorting algorithms

·     Special topics

Programming:

·     Java generics

·     Iterators

·     JUnit testing

Design by Contract
",10
CS2010E,Algorithms And Data Structures,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",5
CS2013,Programming Project Ii,Inmaculada Arnedillo-Sánchez,"Learning Outcomes:
Upon successful completion of the module students will be able to:

1.    analyse, specify, design, write and test a complete software solution to a complex problem;

2.    apply industry standard methodologies and tools to complex projects;

3.    formulate and schedule intermediate goals and activities in the context of a large group project;

4.    recognise the challenges and opportunities posed by working in project groups;

5.    contribute to the design and analysis of software by means of UML diagrams;
6.    contribute to the production of a requirements document for a substantial software engineering project;

 
Module Learning Aims:
This course introduces students to the discipline of software engineering and requires them to work in groups to complete a complex software project. Groups will be managed in conjunction with more senior students taking the course CS3013. For the duration of this course, students are divided into groups, each of which is closely supervised by the course lecturer and a separate project customer. The course provides students with their first formal experience of group work. They are required to follow a rigorous process consisting initially of requirements gathering, analysis and system design. Thereafter they are required to implement a complex software product using industry standard software engineering tools and methodologies.

The principal aim of this course is to provide students with experience of working together in groups to complete a complex software project. Upon completion of the course students will have gained experience of analysing, specifying, designing and implementing a complete software system. They will also have been exposed to the challenges posed by working in teams and the need to communicate e effectively both within their respective groups and to their project supervisor. 


 
Module Content:
Introduction to Software Engineering

·     Software project life-cycle

·     Requirements analysis for software projects using the Unified Modeling Language

·     System specification and design for software projects using the Unified Modeling Language

·     Theory and practice of project group organisation including group management, communication strategies and problem resolution

·     Programming models for software projects

·     Strategies for source code management

·     Strategies for test-driven development

     Industry standard software development methodologies and tools


 
",5
CS2014,Systems Programming I,Stephen Farrell.,"Learning Outcomes:
When students have successfully completed this module they should be able to:

design and construct clear, maintainable, correctly structured programs in C to solve a variety of practical problems;

develop programs using UNIX development tools such as vi, regular expressions, gcc, gdb and make;

appraise the quality of programming style in existing programs;

distinguish between good, questionable and bad programming style;

assess alternative program design decisions;


 
Module Learning Aims:
Students taking this module have already successfully completed courses in object-oriented Java programming and ARM assembly language programming. This module starts with a new perspective on program construction, with structured programming in C. This part of the module deals with the features of C, sound design principles for structured programming, and the necessary self-discipline required to program in a low-level language like C. Students also learn the basics of how programs are commonly implemented, with special emphasis on the layout of program data in memory. In parallel to learning C programming, the students learn the basics of the Unix Operating System.
Module Content:
*    The C programming language

*    Pointers and dynamic memory allocation/de-allocation

*    Principles of structured programming

*    Abstract data types in structured programming

*    The UNIX operating system

*    UNIX programming tools

*    Programming style appreciation and criticism

 
",5
CS2016,Concurrent Systems And Operating Systems,Mike Brady,"Learning Outcomes:
When students have successfully completed this module they should be able to:

·     recognise standard concurrent programming problems;

·     solve concurrent programming problems using standard techniques;

·     design and implement concurrent programs using standard threading techniques;

·     develop models of concurrent programs using the Promela modelling language;

·     verify the correctness of simple concurrent programs using SPIN;

·     describe algorithms, data structures and policies used in modern operating systems for thread scheduling, memory management, disk I/O and file management;

·     evaluate, compare and reason about the relative performance of algorithms used by operating systems (e.g. page replacement policies);

apply a knowledge of operating system behaviour when developing user-level programs.
Module Learning Aims:
The first part of this module introduces students to concurrency and concurrent programming. The aim is to provide students with the ability to develop concurrent software systems using standard techniques and constructs.

To achieve this aim, students must have a thorough understanding of common problems that arise in concurrent systems and how those problems can be avoided. This module will teach the use of tools and techniques for modelling and verifying the correctness of concurrent systems, applying this through practical laboratory exercises in which small concurrent software systems are developed.

The second part of the module addresses various aspects of the design of modern operating systems. The main aim is to explore how programmers can apply a knowledge of operating system features to the design of efficient applications. This is achieved by examining common algorithms and policies used by modern operating systems, as well as the facilities provided to application programmers. This knowledge is then applied in laboratory exercises.
Module Content:
Concurrency

·     introduction to concurrency;

·     simple multi-threaded programs in Java and C;

·     modelling concurrent systems;

·     interference;

·     mutual exclusion;

·     critical sections;

·     verification of concurrent programs;

·     semaphores;

·     monitors.

Operating Systems

·     operating system architectures;

·     memory management;

·     processor scheduling;

        ·    disk I/O, file systems.
",5
CS2021,Microprocessor Systems,Mike Brady,"Learning Outcomes:
When students have successfully completed this module they will be able to

·     Analyse design requirements to produce a combined hardware and software design for simple systems, selecting peripherals and software architectures most suited to implementing each project.

·     Develop implementation strategies for commissioning simple hardware and software systems.

·     Visualise complex exception and interrupt-handling sequences to recognise potential problem sources and to develop appropriate debugging strategies.

·     Analyse the characteristics of various processor architectures and the standard memory hierarchy.
Work in small teams to design and implement the hardware and software aspects of their projects by dividing the tasks and responsibilities among the group members.

 
Module Learning Aims:
Students bring the knowledge and expertise of programming, digital logic and a small amount of digital electronics to the development of small system integration projects combining program design and implementation with simple interface interfacing and breadboarding.

Each team is provided with a small ARM-based computer, a PC-based integrated development system, some electronic components and breadboarding facilities.

Students have to design, build and test integrated hardware and software systems to provide a certain required functionality.
Students also study processor and memory architectural techniques such as pipelining, superscalar architectures and caches.

 
Module Content:
·     Microprocessor system overview

·     Microprocessor architecture overview

·     Memory hierarchy

·     Interfacing with peripheral devices

·     Device programming
        .     Interrupt and Exception Handling

 
",5
CS2022,Computer Architecture I,Michael Manzke,"Learning Outcomes:
Students will be able to

design substantial logic circuits using register transfer descriptions;

test and verify their design using an industry standard hardware description language (VHDL);

understand the organisation and execution behaviour of general-purpose processor systems;
Module Learning Aims:
The lectures and tutorials treat the detailed design and organisation of microprocessor.

Course Work: Two projects using VHDL and ModelSim to simulate and test their design.

A processor unit (ALU + shifter + fast registers) design and simulation,

An instruction processor design and simulation.

Contents: Digital Logic, Register transfer definition, micro-operations, bus transfers, ALU design, shifter design, hardwired control design, microprogrammed processor control, design of an instruction processor.

The aims of the course are to learn register-transfer specification and design and learn the fundamentals of an instruction processor.
Module Content:
Specific topics addressed in this module include:

•        Digital Logic

•        Register transfer language

•        ALU and shifter design

•        Multiplexer and tristate busses.

•        Datapath design

•        Instruction fetch-decode-execute cycle
",5
CS2031,Telecommunications Ii,Stefan Weber,"Learning Outcomes:
When students have successfully completed this module they should be able to

·    explain the key concepts of networking technologies.

·    describe different mechanisms for error detection and correction.

·    illustrate the communication between networked applications.

analyse communication problems between devices connected by various media.

 
Module Learning Aims:
The module is structured following the Open Systems Interconnect (OSI) model and consists of two parts.

 
The first part of the module focuses on the concepts and mechanisms that are employed in Layer 2 of the OSI model, the Data Link layer. This layer is concerned with the delivery of data between two immediately connected devices i.e. devices that share a common physical medium. The layer coordinates the access to the physical medium and attempts to detect and correct errors introduced by the transfer of signals over the physical medium. The concepts that are employed in this layer are discussed and the students are given exercises that demonstrate the application of these concepts.

 
The second part of the course focuses on Layer 3 of the OSI model. Layer 3, the Network layer, focuses on the interconnection of individual local networks. This layer employs concepts that hide the communication through a LANs and provide an abstraction that allows the communication across various interconnected LANs. The understanding of the mechanisms employed in this layer is essential to the understanding of the implementations and performance of current network technology.


 
Module Content:
Specific topics addressed in this module include:

Introduction

·     Internet Applications – HTTP Case Study (Top Down Approach)

·     Open Systems Interconnect (OSI) model

Data Communications Interface

·     Introduction into Link Layer Issues

·     Asynchronous and Synchronous Transmission

·     Line Configurations – Simplex, Duplex, Point-to-Point and Multipoint Links

Error Detection and Correction

·     Types of Errors – Single-bit Errors, Burst Errors

·     Parity, Block Sum Check/LRC

·     Cyclic Redundancy Check (CRC)

·     Hamming Code

Error and Flow Control

·     Idle RQ, Continuous RQ, Selective Repeat, Go-Back-N

·     X-ON/X-OFF, Sliding Window Protocol

Data Link Protocol

·     Bit Oriented Protocols – PPP

·     High-level Data Link Control (HDLC)

Local Area Networks (10 Mbps)

·     Network Topologies

·     IEEE 802.3 Ethernet Networks

·     IEEE 802.5 Token Ring Networks

·     Layer-2 Switching

Introduction to IP

·     Internet Protocol and Addressing

·     Address Resolution Protocol (ARP)

·     UDP / Multicast

Routing Protocols

·     Circuit and Packet Switching

Link State and Distance Vector Routing Protocols

 
",5
CS2041,Information Management I,Declan O’Sullivan,"Learning Outcomes:
When students have successfully completed this module they should be able to:

Describe and use UML for information modeling

Describe and use XML techniques for data modeling and querying

Describe techniques for exposing and retrieving information on the web using semantic web/linked data approaches


 
Module Learning Aims:
This module focuses on the methods and techniques for efficient management (modelling, manipulation and retrieval) of data and information. It provides a foundation for later modules in database management and advanced information management.

The module explores the fundamental issues related to information management in a system: how information and its exhange is modeled through UML; how data is organised within files, and effectively searched through indexing. Concepts are exercised through the examination of XML as an example file format used to both store and process information. Accompanying technologies for structuring, manipulating and querying XML will be studied and practiced.

The module also explores information on the web, in particular semantic web/linked data techniques.

 
Module Content:
Specific topics addressed in this module include:

Information Modelling

UML for systems modeling

Files and Indexing of Files

XML Fundamentals

XML querying (e.g. Xpath, Xquery)

Semantic Web and Linked Data (e.g. RDF, SPARQL)


 
",5
CS2BC1,Systems Analysis And Design I,Dave Lewis,"Learning Outcomes:
Upon completion of the module, the student will:

 

Be familiar with the concepts of a system and what it means to design, develop and implement a large information system in an organization;

Appreciate the problems facing the systems analyst developing information systems in demanding and changing environments;

Become familiar with the major phases of the system development lifecycle;

Understand the typical organizational structure of large software development projects, including management issues, the roles of key stakeholders, notably those of the business and systems analysts;

Be able to elicit, organize and document the functional requirements and constraints of information systems;

Be able to produce structured specifications of basic systems from systems analysis;

Produce representations of system designs using diagrammatic modeling tools;

Be able to appropriately choose and correctly discriminate between the available tools for software projects having a range of characteristics;
Module Learning Aims:
This module introduces students to the theory and practice of designing, creating and maintaining large software systems within demanding and changing business environments. Modern enterprises are critically reliant on information systems to support their business needs. The module covers the standard business and engineering processes, approaches and disciplines applied in industry today.

 
Module Content:
·     Introduction to systems thinking.

·     Fundamentals of traditional and modern system development lifecycle (SDLC) methodologies;

·     Initiating and planning software development projects;

·     Requirements elicitation and specification techniques;

·     Systems analysis through functional and data modelling tools;

·     Design of database, interactive, distributed and internet systems;

·     Implementing and maintaining a system;

·     Supporting case studies;

 
",5
CS2E03,2E3 Computer Engineering Ii,Research Fellow,"Learning Outcomes:
Upon completion of this module, students will be able to:

·    understand and apply object oriented programming principles to solve real problems

·    write and debug C++ object-oriented programmes identify and apply standard data structures and algorithms;

·    describe how C++ programmes are represented at runtime;

 
Module Learning Aims:
  ·   to build on the Junior Freshman Engineering 1E3 Computer Engineering I module and to give students the ability to understand and apply object oriented programming principles to solve real problems;

·   to teach students to develop and debug programs using an advanced integrated development environment (Microsoft Visual Studio VC++);

·   to introduce students to standard data structures and algorithms and show how and when they can best be applied;

·   to introduce students to both core and advanced programming skills
Module Content:
·   Number systems, data representation and basic computer architecture;

·   Migrating from C to C+

·   Principles of Object Oriented Programming: Encapsulation, Inheritance, Polymorphism, Abstraction.C++ classes, constructors, destructors, overloading, inheritance;

·   Dynamic and stack based memory allocation (e.g. malloc, free, new and delete);

·   File I/O;

·   String, list, stack, queue and tree data structures;

·   Simple 2D graphics;

·   Multi-core programming.


 
",5
CS2LL3,Intermediate Programming And Natural Language,Martin Emms,"Learning Outcomes:
When students have successfully completed this module they should be able to:

·     write, compile and debug C++ code, using command-line tools rather than an integrated development enviroment

·     write code to handle recursive, dynamically allocated data structures, such as syntax trees or the transition graph of a finite state automaton

·     use inheritance to exploit third-party libraries such as for implementing GUIs

·     understand and work with implementations of Finite State Automata and regular languages appreciating both their strengths and weakness and the areas of language processing to which they might be applied

·     understand and work with implementations of context-free grammars and parsers, including stack-based and chart parsers.
·     understand and work with implementations of probabilistic methods in language processing such as statistical parsers, the use of Hidden Markov Models for speech recognition or statistical machine translation

 
Module Learning Aims:
To engender a mastery of the fundamentals of programming in C++, both building on, and differentiating from, prior experience with Java, should the students have that
To likewise provide a solid grounding in the major concepts and algorithms used in Natural Language Processing, exploring many of these through implementations in C+/div>
 
Module Content:
·     Fundamentals of C++ including

1.    built-in types and coercion

2.    pointers, arrays, reference parameters

3.    STL containers string and vector

4.    structs, classes, inheritance (illustrated by Qt library for GUIs)

5.    dynamic memory allocation and recursive data structures

·     Regular languages

1.    notion of finite state automaton and transducer and areas of application

2.    properties and limitations of finite state methods - centre-embedding

3.    C++ implementation of finite state automata

·     Context Free languages

1.    illustration of applications to natural language and potential limitations – crossed dependencies

2.    bottom-up and top-down stack-based parsers, including backtracking. chart-based parsers. Properties of these parsers and their implementation in C+/p>
3.    long-distance dependencies and slash-grammars

·     Feature structures

1.    untyped and typed features structures with their associated unification algorithms and areas of possible application in language description

2.    C++ implementation via the LilFes library

  o Brief intro to Probabilistic Methods in NLP, topic varying year to year, examples being the use of Hidden Markov models in speech recognition, or statistical machine translation

 
",10
CS2LL3E,Intermediate Programming And Natural Language,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",5
CS3011,Symbolic Programming,Tim Fernando,"Learning Outcomes:
On successful completion of this module, students should be able to:

Describe the basic characteristics of declarative programming in general and Prolog in particular.

Compare declarative and imperative programming

Design, construct and analyze Prolog programs of moderate complexity

Evaluate the suitability of Prolog for simple tasks

Identify and use the different forms of recursion


 
Module Learning Aims:
Acquire competence in Prolog
Module Content:
Basic introduction to Prolog including recursion, definite clause grammars, cuts and negation
",5
CS3012,Software Engineering,Stephen Barrett,"Learning Outcomes:
This course provides students with a solid grounding in various aspects related to building large software systems.

 
The overall aim of this course is for students to learn the fundamental skills for building large, software systems. This entails (i) to recognise the general software lifecycle and its stages from domain analysis to maintenance, (ii) to analyse software in the problem domain, (iii) to identify the fundamental approaches to managing software projects and teams, (iv) to distinguish the roles of stakeholders in a software project in general and in software teams in particular, (v) to recognise architectures for building large-scale distributed software systems.

 
This course covers various aspects related to building software systems ranging from the use of software lifecycle models, to project management, to large-scale software architectures. Specifically, software lifecycle models, including variations of the waterfall and spiral models as well as extreme programming and agile, are introduced along with concepts that are relevant to the specific model stages. These concepts include O-O software design, and domain analysis, requirements and specification analysis, testing and debugging, and version control. Moreover, strategies for managing large software projects and their contracts as well as project teams are presented and contrasted.

 
Module Learning Aims:
When students have successfully completed this module they will be able to:

 
•        explain and compare the key concepts of the waterfall, spiral, and agile/extreme    

        programming lifecycle models.

•        apply strategies for the gathering of software requirements and the generation of 

        software specification.

•        analyse software by means of a set of UML diagrams.

•        compare and apply techniques for managing software projects and teams.

•        explain the philosophy for designing architectures for software systems.

•        collaborate with large open-source software systems.

•    Introduction

•    Software lifecycles

•    Software Processes & Project Management

•    O-O Analysis and UML

•    Domain Analysis

•    Requirements and Specification

•    Design Issues

•    Software maintainability

•    Mining

•    Small and Larger Scale Design

•    Debugging and Testing


 
Module Content:
•    Introduction

•    Software lifecycles

•    Software Processes & Project Management

•    O-O Analysis and UML

•    Domain Analysis

•    Requirements and Specification

•    Design Issues

•    Software maintainability

•    Mining

•    Small and Larger Scale Design

•   Debugging and Testing

 

 
",5
CS3013,Software Engineering Group Project,Inmaculada Arnedillo-Sánchez,"Learning Outcomes:
Upon successful completion of the module students will be able to:

1.    differentiate, apply and exploit the key concepts of software lifecycle models;

2.    compare and apply strategies for the gathering of software requirements and the generation of software specifications;

3.    analyse and design software by means of UML diagrams;

4.    compare and apply concepts for software testing, software debugging and software version management;

5.    compare and apply techniques for managing software projects and teams,

6.    recognise the challenges and opportunities posed by working in project groups and apply best-practice solutions to group management issues;
produce a requirements document for a substantial software engineering project;

 
Module Learning Aims:
This course follows on directly from CS3012 (Software Engineering) and focuses on the practical application of the various concepts and tools related to building software systems studied in third year software engineering. This practical application takes the form of a large ""hands-on"" group project that covers numerous aspects of building object-oriented software systems including problem analysis, usage of development environments, project management, team management, design, implementation, testing and documentation. Students will take a leadership role within these groups which are combined with students taking course CS2013.

The overall aim of this course is for students to further develop their skills for building large, important object-oriented software systems. This entails (i) the application of the general software lifecycle and its stages from domain analysis to maintenance, (ii) to differentiate and apply appropriate models for analysing, designing and testing object-oriented software, (iii) to differentiate and apply appropriate approaches for managing software projects and teams, (iv) to distinguish and assume specific roles in a software project in general and in software teams in particular, (v) to have exposure to working as a member of a group.
Module Content:
 Problem statement and working model


Project management plan, work plan and testing pla


Theory and practice of project group organisation including group management, communication strategies and problem resolution


Requirements and specification


Object-oriented analysis and design


Progress report


Test report


Product demonstration


Project presentation and evaluation


Project team self-assessment


 
",5
CS3014,Concurrent Systems I,David Gregg,"Learning Outcomes:
When students have successfully completed this module they should be able to:

Explain trends in computer architecture (power wall, memory wall, diminishing returns from ILP) that have led to the development of multi-core processors

Explain and compare the major categories of parallel architecture that have appeared over the last 40 years from instruction level parallelism to distributed memory machines

Classify new, previously unseen architectures into these categories

Evaluate the suitability of parallel architectures for efficiently running a given piece of code

Design and construct efficient parallel programs in C/C++ using OpenMP

Design and construct routines using vector instructions sets, such as Intel SSE
Module Learning Aims:
The goal of this module is to provide students with a deep understanding of parallel and multi-core architectures and to provide students with necessary architecture background for careers in professional software development and/or further research on these emerging platforms.
Module Content:
Specific topics addressed in this module include:

State of technology driving the architecture

Memory Hierarchy

Instruction-level Parallelism

Superscalar processors

VLIW architectures

Multithreaded architectures

Vector architectures and programming in SSE

SIMD multimedia instructions

Design and implementation of programs using OpenMP

Bus multiprocessors

Network multiprocessors and multi-computers , and an introduction to MPI
",5
CS3016,Introduction To Functional Programming,Andrew Butterfield,"Learning Outcomes:
On successful completion of this module students will be able to:

●   Develop programs in a high level functional language

●   Analyse and structure program designs in terms of functional concepts

●   Understand the concept of higher-order programming inherent in functional languages

●   Improve software modularity and reusability by applying higher-order principles to refactor code

Apply a number of functional programming techniques and tools to develop effective functional systems

 
Module Learning Aims:
Functional programming languages present a powerful, abstract, and important direction in programming languages. The high level of abstraction and the expressive syntax makes program decomposition and composition unusually easy, while the close connections to the underlying semantics make formal reasoning tractable. Systems such as Google’s “Map/Reduce” framework demonstrate the influence of this approach, and the importance to a computer scientist of understanding it.

On this course students will learn to apply the techniques of functional programming in a practical context. The focus is on software design and programming in the functional style, and students will “learn by doing”, through regular weekly programming assignments and case studies.

The course draws on the programming and mathematics background the students have acquired in the first two years of the degree and extends it by teaching new approaches to program design and implementation. 


 
Module Content:
Course content covers both techniques and technologies. Topics will include:

●   First-order functions

●   Type systems for functional languages; data types; recursive types

●   Lazy evaluation, infinite data structures

●   Referential transparency

●   Higher order functions

●   I/O and State handling

●   Functional debugging
Efficiency considerations

 
",5
CS3021,Computer Architecture Ii,Jeremy Jones,"Learning Outcomes:
Students who have successfully completed this module should be able to:

 
·     Write simple IA32 and x64 assembly language functions

 
·     Explain the IA32 and x64 procedure calling conventions

 
·     Write programs that mix C/C++ and IA32 or x64 assembly language functions
 
·     Describe the RISC design philosophy and translate simple high level language programs into RISC-I assembly language

 
·     Explain the key concepts behind instruction level pipelining and know how to apply a number of techniques to overcome data, load and control hazards

 
·     Explain the advantages of using virtual memory, show how virtual addresses are mapped to physical addresses and demonstrate how the functionality of a MMU is integrated into an operating system

 
·     Explain the use of a memory hierarchy to reduce effective memory access times, describe the organisation and operation of a cache, evaluate the hit rate of a cache given an address trace, develop a C/C++ cache model and know how to apply address trace analysis optimisations

 
·     Discuss the problems of using caches in a multiprocessor, analyse the operation of several cache coherency protocols and be able to predict the bus traffic given a sequence of CPU ""memory"" accesses


 
Module Learning Aims:
This module focuses on the architecture of modern high performance microprocessor systems. Topics covered are basic IA32 and x64 assembly language, procedure calling conventions, the architecture of RISC CPUs, instruction level pipelining, techniques to overcome data, load and control hazards, virtual memory, caches, multiprocessors and cache coherency. This module pays particular attention to issues that improve performance and the close relationship between the hardware and the needs of the software
Module Content:
TTopics covered in this module are:

 
·     Basic IA32 and x64 assembly language

 
·     Procedure calling conventions (IA32 and x64)

 
·     Mixing C/C++ and assembly language

 
·     RISC vs CISC, RISC-1 design criteria and architecture, register windows and delayed jumps

 
·     Instruction level pipelining, DLX/MIPS pipeline, resolving data, load and control hazards

 
·     Virtual Memory, memory management units (MMUs), multi-level page tables, TLBs, integration of a MMU into an operating system

 
·     Cache organisation (L, K and N), operation, performance, address trace analysis, cache coherency

 
·     Multiprocessor architectures, cache coherency protocols (write-through, write-once, Firefly and MESI) 

 
",5
CS3031,Advanced Telecommunications,Hitesh Tewari,"Learning Outcomes:
When students have successfully completed this module they should be able to:

Demonstrate an in-depth knowledge of the Transport and Application Layers;

Have a good understanding of cryptography, network security, electronic payments

Analyze the requirements for a given organizational structure and select the most appropriate networking architecture and technologies;

Have a working knowledge of network programming using sockets and the use of a cryptographic library, both of which the students must use as part of their continuous assessment tasks.

 
Module Learning Aims:
This option concentrates on building upon the students JF and SF years knowledge and introduces them to advanced topics in the areas of data communications and telecoms networks. A detail study is made of the TCP protocols in terms of multiplexing, flow and congestion control to understand the effects congestion in a large distributed network such as the Internet. A number of Application Layer protocols such as HTTP, SMTP, DNS and AJAX are studied to understand how Web Applications are designed today. The students are given an in-depth Network Security/Cryptography module which gives them an appreciation of how to secure communications over an open network such as the Internet. They are also introduced to the topic of Electronic Payments.
Module Content:
Specific topics addressed in this module include:

Transport Layer Issues – Multiplexing, UDP, TCP, Flow Control, Congestion Control

Application Layer Issues – HTTP, DNS, Web Applications

Network Security – Symmetric & Asymmetric Key Cryptography, Key Agreement Protocols, Authentication, Digital Signatures, X.509 & Public Key Infrastructure (PKI), Elliptic Curve Cryptography, Authentication Protocols, DNSSEC and Secure Protocols.

Electronic Payment Systems – Ecash, Bitcoin, Micropayments

 
",5
CS3041,Information Management Ii,Séamus Lawless,"Learning Outcomes:
Having completed the course the student will be able to:

·     Define and comprehend the theoretical and practical issues in the management, retrieval, organisation, indexing and storage of large quantities of data

·     Model data and analyse data relationships for exploitation within database management systems

·     Program a database management system for database creation, information retrieval and database management

·     Analyse and assess various database concurrency protocols and algorithms to assess their performance and relative appropriateness in differing operating environments.

·     Evaluate existing concurrency control algorithms and appropriate data structures for data management.

·     Understand data integrity and security and the approaches used to manage and maintain both.

·     Compare and contrast different Database management paradigms such as relational, NoSQL, in-memory and native web/linked data stores.

 
Module Learning Aims:
This course is focused on the modelling of information and database system technology. More specifically, it focuses on state-of-the-art database technology, from both the user and systems perspectives.

From a system engineering perspective, the course examines the concepts and algorithms for: transaction processing, concurrency control, metadata representation, database security policies, integration of databases on the web and emerging database technologies.

From an information designer’s perspective, the course examines the theoretical model underpinning relational databases, functional dependency theory and normalisation (for information modelling), functional dependency modelling, implementation of databases and database applications.

Thus the course is intended to enable the students to design information models and implement these models in state of the art databases (relational and native web databases), as well as be able to analyse and evaluate approaches to information organisation, storage, transaction support and management.

 
Module Content:
Specific topics addressed in this module include:

·     Overview of database systems and users

·     Database system concepts and architecture

·     Relational database management

·     Relational model

·     Functional dependency theory and normalisation

·     On-line module on SQL (relational database query language)

·     SQL/PL (SQL as a programming language)

·     Transaction processing

·     Query processing

·     Concurrency control

·     Database recovery

·     Security and authorisation

·     Software engineering for database applications and database development

·     Web databases

·     NoSQL and In-Memory Databases


 
",5
CS3061,Artificial Intelligence I,Tim Fernando,"Learning Outcomes:
After successfully completing this module, students should be able to:

Describe the basic aims and achievements of artificial intelligence, as well as the challenges facing it

Assess notions of computability as they relate to artificial intelligence

Reason about the suitability of and trade-offs between basic search strategies

Design simple knowledge representation systems for various knowledge-intensive problems

Appreciate the possibilities opened up by probabilistic reasoning
Module Learning Aims:
An introduction to Artificial Intelligence covering basic topics search and knowledge representation, including an introduction to probabilistic reasoning
Module Content:
Search, Q-learning and Markov decision processes, constraint satisfaction, knowledge representation, abduction, introduction to probabilistic reasoning
",5
CS3071,Compiler Design I,David Abrahamson,"Learning Outcomes:
On successful completion of this module students should be able to:

• design lexical analysers based on finite---state automata;

• design top---down parsers based on push---down machines;

• design l---attributed translation grammars to specify the semantic

processing of high---level programming language constructs;

• design a recursive---descent parser for any given LL(1) grammar;

• use Coco/R—a compiler generator tool—to construct lexical

analysers and recursive descent parsers for high---level

programming languages.
Module Learning Aims:
To teach the principles of compiler design.
Module Content:
After a brief introduction to the subject, the first few classes will be devoted to

the study of finite---state automata and their use in the design of efficient lexical

analysers based on reduced (minimal) machines. This will be followed by an in---

depth study of syntax analysis (with an emphasis on top---down parsing methods)

based primarily on principles of attributed translation. The final few classes will

be devoted to the study of some basic code generation techniques along with a

selection of associated run---time implementation issues.

Tutorial exercises will be incorporated into lecture periods throughout the

course, and students will be introduced to the more practical side of compiler

construction during the weekly laboratory sessions.

There will be three significant pieces of graded coursework, each of which will

involve aspects of compiler design and implementation.
",5
CS3081,Computational Mathematics,Eamonn O,"Learning Outcomes:
To be able to choose mathematical concepts and methods appropriate to the solution of application problems. To be able to implement solution methods using appropriate computer programming languages, libraries, and techniques.

 
Module Learning Aims:
To understand, in sufficient detail for practical implementation, the mathematical concepts and methods appropriate to writing computer programs for science and engineering applications in general.
Module Content:
Floating point number systems; Numerical methods; Signal processing; Plotting and visualisation; Programming techniques and libraries supporting the aforementioned.
",5
CS3101,E-Business,Anthony Nil,"Learning Outcomes:
After successfully completing this module, students will be able to:

' Develop and propose a roadmap for creating an e-business/ecommerce venture.

' Identify and select key strategic considerations for an organisation's e-business development with relevant and appropriate use of business models and measurement tools.

' Propose appropriate development and implementation strategies linked to an overall justification case, having reviewed a range of development options from diverse sectors and direct and indirect competitors including local, national and international players.

' Identify the differences between business, consumer, e-government and e-learning environments and market spaces and devise appropriate marketing plans for each different sector.

' Apply an understanding of supply chain issues to specific sectors and devise appropriate operational proposals.

' Explain and describe an e-business value proposition and related security, ethical, legal, organisational and inter-organisational issues to a senior management audience. 
Module Learning Aims:
Students learn to apply techniques and technologies in support of electronic business and electronic commerce across a range of market sectors and functional areas. Business drivers and alternative models are explored from a management perspective. The business cycle and related issues such as marketing, security, ethical and legal considerations and payment processing options are explored in local, national and international contexts.
Module Content:
The commercial environment
Business models
Creativity
Marketing
Supply chain issues
Strategic considerations
The justification case and issues arising
Successful launch of a business
Innovative eCommerce
B2B, B2C, C2C
eGovernment
eLearning
Mobile commerce
Support services
Payments
Security payment systems
Legal and ethical issues
Social networks 
Project presentations
Senior-level presentations for decision makers
Review and feedback
",10
CS3102,Information Systems Development Ii,Paula Roberts,"Learning Outcomes:
After successfully completing this module, students will be able to:

Write, compile, deploy and test complete Java applications to meet business requirements
Understand and use

Classes, Objects, Methods and Instance variables
Algorithms and Control statements
Arrays and ArrayLists
Industry-standard Java development tools
Module Learning Aims:
In this module students learn how to program in Java concentrating on good software engineering and program clarity.
Module Content:
Java Environment Familiarisation
Algorithms & Problem Solving
Fundamental Data Types
Decisions
Loops
Methods
Arrays
Objects & Classes
I/O and Exception Handling
Inheritance
Collections
Course Review
",10
CS3103,"Business, Management And It",Diana Wilson,"Learning Outcomes:
After completing this module, students will be able to:

Recognise and define different organisational models and apply this understanding in work involving leadership, teamwork and negotiation
Apply critical thinking skills to challenge organisational models and to synthesise new models
Discuss and debate issues that affect the modern organisation and assess the viability of solutions e.g. teleworking, outsourcing, globalisation
Understand and question the role of IS in the modern organisation, and apply this thinking in the preparation of technology audits and impact statements
Predict and justify possible future scenarios of the nature of work, extrapolating realistically from events and contexts through problem assessment and problem-solving
Apply project management, negotiation, problem resolution, presentation and interpersonal communication skills in a team setting
Write for different audiences in a variety of formats including white paper, report, semi-formal and academic styles.
Module Learning Aims:
This module covers organisational theories with an emphasis on the role of Information Systems within the workplace and its relationship with workers. Although conventional and classic organisation theory is studied, the perspective is from an unorthodox and radical perspective in order to encourage critical (social) analysis.
Module Content:
Topics

Systems Theory, Cybernetic Theory, Information Theory, Classic Organizational Theories and their applicability to the modern

Contemporary IS Issues affecting Organisations: political, economic, social and technical issues driven by current factors within the Irish context

READING WEEK

Potential Organisational Models: PoMo,Post-Bureaucracy, Post-Industrial, Radical Organisational Theory, Organizational Democracy and how IT can shape/be shaped by them


 
",10
CS3104,Information Systems Strategy,,"Learning Outcomes:
After completing this module, students will be able to:
' Apply strategic planning frameworks and methodologies to IT management problems
' Plan, analyse, implement and review IT strategies
' Implement processes typically employed to produce effective alignment of IT and business strategies
' Evaluate the importance of industry and technology trends in strategy development
' Apply current methodologies to evaluate IT performance
' Critique an organisation's management approach with regard to IT strategy and its alignment with business strategy
Module Learning Aims:
This module addresses the concept of strategy and the skills of strategic information systems planning. Students analyse business and IS strategies and explore the relationships between them. Via case studies, students develop expertise in formulating IS strategy and in quantifying its implications for business operations.
Module Content:
Business Strategy in the Digital World
Business Exploitation of Information and Communication Technology Systems
Information Systems Development Approaches
Disruptive Technologies and Applications
Business IT/IS Alignment
Strategic IS/IM in Context
Global Issues in Information Management
Strategic Knowledge Management
Organisational Change, Culture and Strategic IS/IT Led Change
IS/IT Benefits Management and Realisation
Module review
",10
CS3105,Law And It,Tricia Sheehy-Skeffington,"Learning Outcomes:
After successfully completing this module, students will be able to:

Devise policies to ensure satisfactory protection and access to third parties’ data held by a company;

Identify appropriate means of protecting and exploiting various products’ intellectual property in an IT context (with particular emphasis on how much knowledge a former member of staff may exploit);

Articulate lucid guidelines to enable a company to operate ethically and within the law when trading products (including website content) online;

Negotiate heads of terms of contracts such as software development agreements; 

Critique the short-comings of the current legal framework
Module Learning Aims:
This module offers an overview of legal principles relevant to business ICT practitioners. Students learn to set workplace policy appropriately, with awareness of legal obligations stemming from contracts and governing legislation. Exploration of the interaction the law with commonplace ICT business scenarios will enable students to positively use law as part of the toolkit of business interactions.
Module Content:
 
 
 
",10
CS3106,Information Systems Practice Ii,Tony Lyons,"Learning Outcomes:
After successfully completing this module, students will be able to:

Use advanced communication and business problem-solving skills to examine business problem situations

Apply analysis and design skills to state business needs and design suitable web based IT-based solutions

Design architecture and user interface for web applications to meet stated business needs

Use an agile approach to build, test and deploy a secure Java web-based e-commerce prototype application

Explain the processes involved in building e-commerce applications, and identify key platform-dependent design and performance considerations
Module Learning Aims:
Bringing together work done to date, this module helps to build professional excellence through continued acquisition and integration of practical skills and theoretical knowledge. Students work individually and in teams of 2-3 on lab and classroom-based exercises designed to extend and integrate their prior learning.
Module Content:
Topics

Introduction to Java Applications

Introduction to Objects and Object Oriented Concepts

Use Case Development

Java Application Development, Test and Deploy

 
",10
CS3107,Social Computing,Shawn Day,"Learning Outcomes:
After completing this module, students will be able to:

 

Identify social computing technologies and techniques, and describe associated principles and modes of operation;

Critically evaluate, discuss and debate the current and future impact on society, business and government of the propagation and use of social computing technologies and techniques;

Apply theories from reference disciplines including sociology, psychology, political science, anthropology and economics, to address issues such as individual motivation, community formation and sustainability, and corporate vs. community control.

Consider, specify and be able to critically appreciate selected social computing technologies and techniques to address real-world chalelnges.


 
Module Learning Aims:
This module provides an overview of social computing and its evolving impacts on society and business processes and practice. Students will gain experience of the ways in which social computing technologies can be applied by individuals, communities and organisations. 

Students will gain first-hand experience of the ways in which social computing technologies can be applied by individuals, communities and organisations. 
Social computing encompasses such phenomena as social networking, Enterprise 2.0, internet activism/advocacy, crowdsourcing, e-Government/Government 2.0, social/viral marketing, social information processing, social network analysis and the use of blogging, podcasts, wikis and other collaborative tools. 
Social computing has altered the ways in which individuals and organisations interact with information systems as well as with each other. New and emerging platforms and services raise new issues that provide new avenues of engagement but come with pitfalls that challenge if smooth embraced by enterprise.

New and emerging platforms and services raise new issues that provide new avenues of engagement but also challenge smooth adoption and operation by enterprise.
The growing embrace of OPEN frames of reference whether in Data, Government, and knowledge creation and transfer further emphasise the changing paradigms and underlie the discussion and module trajectory

 
Module Content:
Introduction to Social Computing
Technology
Behaviour
Culture
Policy
Conclusion and Review
",10
CS3421,Computer Architecture Ii,Jeremy Jones,"Learning Outcomes:
Students who have successfully completed this module should be able to:

1.    Write simple IA32 and x64 assembly language functions

2.    Explain the IA32 and x64 procedure calling conventions

3.    Write programs that mix C/C++ and IA32 or x64 assembly language functions

4.    Describe the RISC design philosophy and translate simple high level language programs into RISC-I assembly language

5.    Explain the key concepts behind instruction level pipelining and know how to apply a number of techniques to overcome data, load and control hazards

6.    Explain the advantages of using virtual memory, show how virtual addresses are mapped to physical addresses and demonstrate how the functionality of a MMU is integrated into an operating system

7.    Explain the use of a memory hierarchy to reduce effective memory access times, describe the organisation and operation of a cache, evaluate the hit rate of a cache given an address trace, develop a C/C++ cache model and know how to apply address trace analysis optimisations

8.    Discuss the problems of using caches in a multiprocessor, analyse the operation of several cache coherency protocols and be able to predict the bus traffic given a sequence of CPU ""memory"" accesses
Module Learning Aims:
This module focuses on the architecture of modern high performance microprocessor systems. Topics covered are basic IA32 and x64 assembly language, procedure calling conventions, the architecture of RISC CPUs, instruction level pipelining, techniques to overcome data, load and control hazards, virtual memory, caches, multiprocessors and cache coherency. This module pays particular attention to issues that improve performance and the close relationship between the hardware and the needs of the software
Module Content:
Topics covered in this module are:

Basic IA32 and x64 assembly language

Procedure calling conventions (IA32 and x64)

Mixing C/C++ and assembly language

RISC vs CISC, RISC-1 design criteria and architecture, register windows and delayed jumps

Instruction level pipelining, DLX/MIPS pipeline, resolving data, load and control hazards

Virtual Memory, memory management units (MMUs), multi-level page tables, TLBs, integration of a MMU into an operating system

Cache organisation (L, K and N), operation, performance, address trace analysis, cache coherency

Multiprocessor architectures, cache coherency protocols (write-through, write-once, Firefly and MESI) 
",5
CS3BC1,E-Business I,Maria Moloney,"Learning Outcomes:
After successfully completing this module, students will be able to:

Identify key strategic considerations for an organisation’s e-business development with relevant and appropriate use of business models.

Propose appropriate development and implementation strategies for an e-commerce function through use of case studies, which allow students to understand a range of development options from diverse sectors.

Identify the differences between business, consumer, e-government and e-learning environments and identify appropriate business models for each sector.

Define and understand e-commerce, e-business, m-commerce, m-cloud computing and understand how, not only companies but entire industries can benefit from the development and use of these new commercials channels

Understand how traditional business models have evolved to accommodate the e-commerce function of a business.

Identify and understand the benefit of two-sided markets for e-businesses.

Investigate new technologies currently being used for e-commerce, i.e cloud computing, Near Field Communication, Artificial Intelligence, 4th Generation networks, Robotics, Internet of Things (i.e. ubiquitous computing, smart homes and cities and wearable technologies)

Explain and describe an e-business’ value proposition and related security, ethical, legal, organisational and inter-organisational issues. 


 
Module Learning Aims:
Students learn to apply techniques and technologies in support of electronic business and electronic commerce across a range of market sectors and functional areas. Business drivers and alternative models are explored from a management perspective. The business cycle and related issues such as marketing, security, ethical and legal considerations are explored in local, national and international contexts.
Module Content:
 

Weeks

Given by

Topics

Relevant

Readings

1

1-2

MM

The commercial environment
e-Business models
m-cloud computing

Select academic readings

2

3-4

MM

Strategic considerations
Two-sided Markets

 

3

5-6

MM

Innovative eCommerce
NFC technology

(Mobile) Cloud Computing

 

4

6- 7 & 8-9

MM

Artificial Intelligence and Robotics

4th Generation networks
Legal and ethical issues
 

 

5

10-12

MM

Internet of Things

 

 

 
",5
CS3BC2,E-Business Ii,Joeran Beel,"Learning Outcomes:
When students have successfully completed the module they will be able to:

 Analyse technical choices related to the design and platform selection for a basic e-business web application in relation to the business context and requirements

Design and program elements of web-based applications and web services to address an e-business problem.


 
Module Learning Aims:
This module provides an understanding of modern, web based approaches for developing software applications, services and data structures for e-business applications. It addresses the standards, practical tools and techniques of web-based, e-business application development, including 3-tier application server architectures, web services, workflow and service composition, web content and meta-data using HTML and XML.
Module Content:
Introduction to e-Commerce

The infrastructure of the Internet

Internet applications (WWW, FTP, Email, …)

Domain names and Internet protocols

Business models on the Web

Personalization and user tracking

HTML, CSS, XML, JSON, and encoding

Programming for the Web (e.g. HTML5; JavaScript; PHP; JSP)

Web Services
",5
CS3D1,3D1(372) Microprocessor Systems 1,staffJohn Waldron,"Learning Outcomes:
When students have successfully completed this module they should be able to:

 

Describe the basic characteristics, structure and operation of a microprocessor system;

Translate between simple high-level programming language constructs and their assembly language equivalents;

Design, construct, document and test small-scale assembly language programs to solve simple problems;

Reason about the cost of executing instructions and the efficiency of simple programs;

Make use of appropriate documentation and reference material.


 
Module Learning Aims:
Microprocessor Systems 1 is a one-semester module taken by third year Electronic, Electronic/Computer and Computer Engineering students. This module provides students with an introduction to the basic structure, properties and operation of microprocessor systems. By developing and executing simple assembly language programs, the module aims to give students an understanding of how programs execute on a microprocessor system. The module also encourages students to consider the relationship between high level programming language constructs and their execution as sequences of instructions. Students will also be given opportunities to develop their problem solving, programming and written communication skills by designing solutions to programming problems, implementing those solutions, first in the form of high level programming constructs and then as assembly language programs, which must be documented and tested.
The teaching strategy is a mixture of lectures, problem-solving tutorials and hands-on practical laboratory sessions. The format of lectures is conventional, however, a great deal of informal interaction is normal, and students can expect to participate in question-and-answer and problem solving sessions. For the first four weeks of the module, students are taught the general principles of low-level architecture and programming. Tutorials held during this time review basic skills such as binary and hexadecimal notation and algorithm design. Students are challenged to build programs based on a partial knowledge of the computer’s instruction set. Practical sessions, starting around the fourth week, require the students to design, write, evaluate and debug their programs on special-purpose development systems. More advanced topics introduced during lectures become the subject of practical sessions through the rest of the semester.

 
Module Content:
Specific topics addressed in this module include:

 
Number systems

Memory and data representation

Binary arithmetic and logical operations

Floating-point representations and arithmetic

Basic computer architecture

Assembly language and machine code

Flow control

Memory load/store operations and addressing modes

 
",5
CS3D2,3D2 Microprocessor Systems 2,staffMike Brady,"Learning Outcomes:
When students have successfully completed this module they will be able to

1.   Analyse design requirements to produce a combined hardware and software design for simple systems, selecting peripherals and software architectures most suited to implementing each project.

2.   Develop implementation strategies for commissioning simple hardware and software systems.

3.   Visualise complex exception and interrupt-handling sequences to recognise potential problem sources and to develop appropriate debugging strategies.

4.   Analyse the characteristics of various processor architectures and the standard memory hierarchy.

Work in small teams to design and implement the hardware and software aspects of their projects by dividing the tasks and responsibilities among the group members.

 
Module Learning Aims:
Students bring the knowledge and expertise of programming, digital logic and a small amount of digital electronics to the development of small system integration projects combining program design and implementation with simple interface interfacing and breadboarding.

Each team is provided with a small ARM-based computer, a PC-based integrated development system, some electronic components and breadboarding facilities.

Students have to design, build and test integrated hardware and software systems to provide a certain required functionality.
Students also study processor and memory architectural techniques such as pipelining, superscalar architectures and caches.

 
Module Content:
1.   Microprocessor system overview

2.   Microprocessor architecture overview

3.   Memory hierarchy

4.   Interfacing with peripheral devices

5.   Device programming


Interrupt and Exception Handling



 
",5
CS3D3,3D3 Computer Networks,Hitesh Tewari,"Learning Outcomes:
Upon completion of this module, students will be able to:

1.   Have a good understanding of the OSI Reference Model and in particular have a good knowledge of Layers 1-3.

2.   Analyze the requirements for a given organizational structure and select the most appropriate networking architecture and technologies;

3.   Have a basic knowledge of the use of cryptography and network security;

4.   Specify and identify deficiencies in existing protocols, and then go onto formulate new and better protocols;

5.   Have an understanding of the issues surrounding Mobile and Wireless Networks.
    6.   Have a working knowledge of datagram and internet socket programming

 
Module Learning Aims:
This module introduces students to computer networks and concentrates on building a firm foundation for understanding Data Communications and Computer Networks. It is based around the OSI Reference Model that deals with the major issues in the bottom three (Physical, Data Link and Network) layers of the model. Students are also introduced to the areas of Network Security and Mobile Communications. This module provides the student with fundamental knowledge of the various aspects of computer networking and enables students to appreciate recent developments in the area.
Module Content:
·     Introduction to computer networks;

·     Physical Layer Issues;

·     The Datalink Layer;

·     Local Area Networks;

·     TCP/IP Suite of Protocols;

·     Network Security;

·     Mobile Networking

 
",5
CS3D4,3D4 Operating Systems And Concurrent Systems,staffMike Brady,"Learning Outcomes:
When students have successfully completed this module they should be able to:

recognise standard concurrent programming problems;

solve concurrent programming problems using standard techniques;

design and implement concurrent programs using standard threading techniques;

develop models of concurrent programs using the Promela modelling language;

verify the correctness of simple concurrent programs using SPIN;

describe algorithms, data structures and policies used in modern operating systems for thread scheduling, memory management, disk I/O and file management;

 evaluate, compare and reason about the relative performance of algorithms used by operating systems (e.g. page replacement policies);        

apply a knowledge of operating system behaviour when developing user-level programs.


 
Module Learning Aims:
The first part of this module introduces students to concurrency and concurrent programming. The aim is to provide students with the ability to develop concurrent software systems using standard techniques and constructs.

To achieve this aim, students must have a thorough understanding of common problems that arise in concurrent systems and how those problems can be avoided. This module will teach the use of tools and techniques for modelling and verifying the correctness of concurrent systems, applying this through practical laboratory exercises in which small concurrent software systems are developed.
The second part of the module addresses various aspects of the design of modern operating systems. The main aim is to explore how programmers can apply a knowledge of operating system features to the design of efficient applications. This is achieved by examining common algorithms and policies used by modern operating systems, as well as the facilities provided to application programmers. This knowledge is then applied in laboratory exercises.

 
Module Content:
Concurrency

introduction to concurrency;

 simple multi-threaded programs in Java and C;

modelling concurrent systems;

interference;

mutual exclusion;

critical sections;

verification of concurrent programs;

semaphores;

 monitors.

Operating Systems

operating system architectures;

memory management;

 processor scheduling;

disk I/O, file systems.


 
",5
CS3D5A,3D5A Data Structures And Algorithms,Anton Gerdelan,"Learning Outcomes:
1. Understand a range of fundamental data structures and algorithms, being able to discuss their advantages, disadvantages, and curiosities.
2. Decide on and design data structures and algorithms that are efficient and practicable for a particular software project, being able to reason about their costs and complexities.

3. Program data structures and algorithms by hand.

4. Know several methods to reason about and evaluate the complexity and performance of candidate solutions to computing problems.
Module Learning Aims:
To study well-established computing theory, with special consideration for sorting and searching problems. To develop strong, practical computer programming skills with a sound understanding of available compute and memory hardware resources.
 
Module Content:
Study of:

Sorting algorithms, searching algorithms.

Arrays, lists, stacks, heaps, maps and hash tables, trees, graphs.

“Big Oh” approximation, performance analysis techniques.

C programming techniques. Memory allocation and management.
",5
CS3D5B,3D5B Software Design And Implementation,staffFergal Shevlin,"Learning Outcomes:
1. Undertake software design and construction as members of teams of various sizes.

2. Learn how to choose, learn, and use new languages, tools, and techniques.

2. Gather requirements and develop a problem specification.

3. Examine problem specification and devise an object-oriented solution.

4. Plan implementation of the program taking into account time and team management.

5. Implement a program of reasonable complexity in the Java language.

6. Document the project using standard techniques.

7. Test the solution using standard techniques.
Module Learning Aims:
To develop pactical skills in software engineering through small and large group programming projects. To learn how to work effectively with others throughout project lifecycles. 
Module Content:
Introductions to:

Android platform for mobile devices.

Java programming language.

Android Studio integrated development environment.

Git source code management system.

Testing techniques for quality assurance.

Agile development methodology.

 
For the larger assignments, the applications are proposed, discussed, and agreed by the groups themselves. 
",5
CS4001,Fuzzy Logic & Control Systems,Khurshid Ahmad,"Learning Outcomes:
At the successful completion of the module the student will have the knowledge of:

1.   The inherent imprecision and uncertainty in data and (scientific) concepts

2.   The existence of fuzzy heuristics used in the control of ‘real-world’ system

3.   The new paradigm of computing-with-words

The knowledge will help the students to design and build:

4.   Fuzzy-logic based systems

5.   Fuzzy-control systems

6.  Neuro-fuzzy learning systems
Module Learning Aims:
The understanding and processing of imprecise and uncertain data.
Module Content:
1.    Terminology: Uncertainty, Approximations and Vagueness (2 Lectures)

2.    Fuzzy Sets and Aggregation Operators (5 Lectures)

3.    Fuzzy Logic and Fuzzy Systems (7 Lectures, 3 tutorials, 3 labs)

4.    Fuzzy Control (6 Lectures, 3 tutorials)

5.    Neuro-fuzzy systems including introduction to neural computing (4 Lectures)
",5
CS4004,Formal Verification,Vasileios Koutavas,"Learning Outcomes:
Having successfully completed this module, students will:

1.   Have gained signidicant knowledge of mathematical logics (propositional and first order logic) and the Floyd/Hoare logic for program specification. These logics are the basis for software verification, and are the de facto standard in the verification industry.

2.   Understand the current state-of-the-art in software verification technology, its range of applicability and theoretical limitations, and the necessary programmer input required to overcome these limitations.

3.   Be able to use logic formulas to specify the correct behaviour of programs, including programs implementing well-known algorithms (e.g. binary search), new programs provided to them, and programs they write themselves to solve engineering problems.

4.   Learn to use the state-of-the-art in software verification tools (e.g. Microsoft Dafny) to mechanically verify program correctness in a team setting.

5.   Learn how to use pencil-and-paper mathematical proofs to manually verify program correctness.

6.   Understand the impact of software faults in different areas of engineering, such as aerospace and medical, and how this translates to financial, ethical, and human well-being.
Module Learning Aims:
Increasingly complex computer systems are becoming ever more important in all aspects of our lives. There are numerous examples where software bugs had extremely serious consequences, financially or to human well-being. This module will explore techniques to mathmatiically verify that computer systems satisfy their specifications; i.e., that they have no bugs and are thus safe to use. The focus will be mainly on software correctness.

These techniques rely on precise mathematical logics and proof systems appropriate for software verification. State-of-the-art tools will be used to verify the correctness of programs.
Module Content:
Specification languages and logics; axiomatic program semantics. Formal proof systems to verify software and system properties such as propositional, predicate and Hoare logic. Proofs by mathematical, structural, and rule induction. Correcness proofs of functional and imperative programs.
",5
CS4012,Topics In Functional Programming,Glenn Strong,"Learning Outcomes:
On successful completion of this module students will be able to:

Develop sophisticated programs in a high level functional language

Critique software designs in terms of functional concepts

Contrast the functional style as it is used in several languages


 
Module Learning Aims:
This course builds on CS3012 which introduced the fundamental concepts of functional programming. In CS4012 we will take an in-depth look at more advanced topics in functional programming and discuss some current research directions in the field.
Module Content:
Course content covers both techniques and technologies. Topics will include:

Designing programs with higher-order functions (functors and monad transformers)

Domain Specific Languages in functional programming

Monads and Arrows for programming

Type systems for functional languages; basics of type inference

Generalized Abstract Data Types; introduction to dependent types

I/O and State handling


Functional debugging

Efficiency considerations

Functional programming for web and concurrent systems


 
",5
CS4021,Advanced Computer Architecture,Jeremy Jones,"Learning Outcomes:
Students who successfully complete this module should be able to

use Spin to check the correctness of parallel algorithms

code and evaluate a selection of techniques and algorithms for implementing locks

code and evaluate a selection of lockless algorithms

 describe the operation of hardware transactional memory

code and evaluate a selection of lockless algorithms that make use of hardware transaction memory

write, evaluate and interpret the performance of a selection of lockless algorithms that make use of hardware transaction memory


 
Module Learning Aims:
To provide students with theoretical and practical experience of concurrent programming with and without locks.
Module Content:
•    simple locks

•    using Spin to check the correctness of parallel algorithms

•    IA32 and x64 atomic and serialising instructions

•    load locked / store conditional (LL/SC) instructions

•    the impact of cache coherency

•    the cost of sharing data between threads in a multiprocessor

•    lock implementations and their evaluation (eg. testAndSet, testAndTestAndSet, ticket, MCS, Peterson, …)

•    the compare and swap instruction

•    lockless algorithms [eg. a Trieber Stack, lockless ordered lists, …]

•    memory ordering and consistency

•    the ABA problem

•    memory management for lockless algorithms [eg. Hazard pointers] 

•    hardware transactional memory [eg Intel Haswell CPUs]

hardware lock elision


 
",5
CS4031,Next Generation Networks,Emanuele Di,"Learning Outcomes:
On successful completion of this module a student will be able to:

NS3LO1 Describe the basic characteristics, structure and operation of wired and wireless networks.

NS3LO2 Identify appropriate architectural models, systems strategies and use cases for a range of modern network concepts.

NS3LO3 Reason about the challenges and impediments that new, disruptive networking paradigms encounter, as well as their appropriate application.

NS3LO4 Implement solutions to key challenges in modern network architecture, e.g., scalability, cost effectiveness and energy efficiency.

NS3LO5 Implement solutions to key challenges in the wireless space e.g. mobility, interference, energy consumption.

NS3LO6 Assess the operation of medium access protocols in contemporary wireless standards for local and wide area networks, and Internet of Things, and discuss co-existence between different types of systems.

 
Module Learning Aims:
This module aims to provide both a theoretical and practical understanding of modern and next generation networking and systems concepts, principles, practices and technologies. Contemporary and emerging wired and wireless network systems are targeted.

Students will be exposed to a variety of system platforms, architectures, protocols, and algorithms, with a strong focus on key design principles and practices e.g. performance, scalability, mobility, virtualization.
The module also aims to highlight some of the relevant ongoing research and innovation in the space taking place within Ireland and internationally. 

 
Module Content:
Specific topics addressed in this module include:

1.    Contemporary and emerging fixed telecommunication network architecture and systems:

a.    Fixed telecom operator network architectures

b.    Optical networking and transmission technology

c.    Next generation fixed access network technologies (latest copper and fibre access technologies)

2.    Contemporary and emerging wireless network architecture and systems:

a.    Wireless channel impairments and mitigation techniques, overview of wireless networks

b.    Mobile architectures: LTE, LTE-A, LTE-A-PRO

c.    Wireless local area networks: IEEE 802.11, HetNet and small cell deployments, mmWave

3.    Convergence of mobile and fixed architectures: backhaul, fronthaul, midhaul and protocol convergence

4.    Multi-service networks and quality of service assurance

5.    Next generation software-defined network (SDN) controlled systems

6.    Recent trends in wireless networking

a.   Cognitive radio self-organising networks and spectrum sharing

5G and Internet of Things

 
",5
CS4051,Human Factors,Gavin Doherty,"Learning Outcomes:
When students have successfully completed this module they should:

Understand the concept of usability and the different facets of the problem.

Have an awareness of available techniques for interaction design and usability improvement

Know when it is appropriate to apply these techniques within the software development process.

Understand and be able to describe Norman's framework for interaction.

Understand the challenges faced in the design of groupware systems, and the aspects of human communciation which are relevant to these systems.

Have an awareness of the factors which influence human performance, and the major concepts relevant to human error.

Know how to construct a Hierarchical Task Model (HTM) with an associated scenario description

Be able to discuss and critique the interface of a specific interactive system with reference to a task model and its associated scenarios.

Know how to design a simple usability testing experiment

Understand the practical issues involved in conducting an experiment.
Module Learning Aims:
Students will understand the main issues underlying the usability of systems, and the main techniques and processes for interface design and evaluation. They will also gain a basic understanding of the theories which account for human performance.
Module Content:
Specific topics addressed in this module include:

Usability

User capabilities

Interaction models

User interface design process

Task analysis

Evaluation

User Interface Architectures

Co-operative work and groupware

Cognitive modelling

Human error

Interaction in context


 
",5
CS4052,Computer Graphics,staffAljosa Smolic,"Learning Outcomes:
When students have successfully completed this module they should be able to:

Write graphical programs, using OpenGL or a similar graphics API, of moderate complexity;

Select an object or scene representation, create a model using modelling software, and export this model for use in an interactive application;

Discriminate between the different rendering choices for displaying objects, such as global or local illumination algorithms, and select the correct solution for the application area;

Derive and solve the mathematical formulations that underpin the practical aspects of creating, animating and rendering objects and scenes.

Critically appraise current computer graphics topics.
Module Learning Aims:
Computer Graphics is a final year option which may be taken by students of Engineering, Computer Science and Mathematics.

The objective of this module is to equip the students with the fundamental understanding of the major elements of Computer Graphics and explore related areas including geometric modelling, rendering and animation. The main focus of the module is on the mathematics and algorithms used in the synthesis of computer graphics imagery and animation, and their practical application. Students are introduced to the standard architectures of modern graphical applications including details on the underlying hardware and low-level software components common to all such systems. The module is intended to enable students to bridge the gap between these low-level fundamental, components common to all computer applications, and the high-level abstract output in most interactive graphical applications.

Students are also introduced to OpenGL, a modern high-level graphics API which is widely used for 3D Design and Visualisation, along with the industry standard modelling software, 3D Studio Max, and this software is used throughout the course to demonstrate concepts and to allow the students to develop their own 3D models, scenes and applications.
Module Content:
Specific topics addressed in this module include:

An introduction to computer graphics; problem domain and applications;

Modelling - data sources and acquisition; modelling software; representation schemes;

Linear algebra - two and three dimensional transforms; geometric operations; hierarchical 3D transformations;

The computer graphics pipeline and the OpenGL API for 3D computer graphics;

Projection and viewing; window to viewport transformation;

Illumination models and rendering algorithms; colour, shading algorithms (Gouraud and Phong), local and global illumination; 
",5
CS4053,Computer Vision,Kenneth Dawson-Howe,"Learning Outcomes:
When students have successfully completed this module they should be able to:

design solutions to real-world problems using computer vision.

develop working computer vision systems using C++.

critically appraise computer vision techniques.

explain, compare and contrast computer vision techniques.


 
Module Learning Aims:
The aim of this module is to give students a firm understanding of the theory underlying the processing and interpretation of visual information and the ability to apply that understanding to ubiquitous computing and entertainment related problems. It provides them with an opportunity to apply their problem-solving skills to an area which, while it is firmly part of computer science/engineering, draws strongly from other disciplines (physics, optics, psychology). The module is based around problems so that the technology is always presented in context and during some tutorials students work in groups to design solutions to real world problems using the techniques that they have been taught. In addition, the module has a significant practical component so that students can appreciate how difficult it can be to apply the technology.

 
Module Content:
Specific topics addressed in this module include:

image digitisation and colour;

camera modelling;

binary image processing including mathematical morphology, connected components analysis;

video analysis;

geometric image transforms;

noise and smoothing;

edge based processing including edge detection, contour extraction and representation;

feature processing including basic corner detection techniques and SIFT/SURF;

recognition techniques including template matching, statistical pattern recognition, and the Hough transform;

Topics will change a little bit from year to year.

 
",5
CS4060,Knowledge Representation And Automata,Tim Fernando,"Learning Outcomes:
On successful completion of this module, students should be able to:

 • Use description logics to express simple ontological constraints

 • Apply finite-state methods to basic natural language processing tasks

 • Evaluate the effectiveness of different approaches to reasoning about change in simple domains

 • Understand the computational possibilities opened up by automata-theoretic approaches to reasoning
Module Learning Aims:
An in-depth initiation into some topics in Knowledge Representation and Automata
Module Content:
Knowledge Representation, Description Logics,

Finite-state methods, Reasoning about change
",5
CS4081,Entrepreneurship & High Tech Venture Creation,Donal O'Mahony,"Learning Outcomes:
On successful completion of this module, students will be able to:

Explain how high tech venture creation operates, with an emphasis on the processes developed by the Silicon Valley venture community over the past 20 years;

Understand and give examples of some of the basic skills needed to recognise and nurture commercial opportunities, marshall the human and financial resources needed to promote their ideas and execute a well formulated business plan;

Describe how high-tech industry in general and ICT in particular has evolved and continues to evolve.

Describe how a strong ethical culture can be fostered in an entrepreneurial venture, including the importance of leading by example and having a code of conduct.

Give oral presentations and engage in in-class discussion.

Describe a product or service to a non-technical audience


 
Module Learning Aims:
This module introduces the fundamentals of technology entrepreneurship. It will cover the process technology entrepreneurs use to start companies. This involves taking a technology idea and finding a high-potential commercial opportunity, gathering resources such as talent and capital, figuring out how to sell and market the idea and managing rapid growth
Module Content:
Entrepreneurship and its contribution to the Economy & Society

The Entrepreneurial Perspective

Opportunity Recognition & Evaluation

Building & Managing your Team

Initial Funding & Financing your Growth

Developing & Executing on a Business Plan

Protecting Intellectual Property
    Marketing & Promoting your Idea

 
",5
CS4091,Final Year Business &Computing (Cs & Business),An agreed,"Learning Outcomes:
On successful completion of this module students will be able to demonstrate a degree of specialization in a particular part of the subject area, including enhanced or new technical skills that build on theory

·     Demonstrate that they have engaged in research and critical understanding to an advanced level in their chosen area (examined in the project literature review and evaluation).

·     Demonstrate a practical understanding of how techniques of research and enquiry are used to create and interpret established knowledge.

·     Address a moderate sized problem and in so doing select and justify an appropriate approach, and follow the approach systematically (recognizing alternatives, selecting and justifying the approach taken at each          point in the project)

·     Demonstrate in the technical execution of the project the required level of analysis, design, and technical skill.


 
Module Learning Aims:
To integrate the theoretical and practical knowledge of the student across all of the years of their study and provide a practical demonstration of their capability in executing a challenging project.
Module Content:
At the beginning of each academic year, students will be notified of the deadlines for project milestones and deliverables.

·     Students must select a project and a supervisor

·     Student should submit a one page abstract of their project

·     Students shall present a demo of their project to their supervisor and second reader

·     Students shall submit a project report

·     Students shall submit a poster according to the School Poster Template format

Students may either select a project from the list of project proposals put forward by the lecturing staff, or alternatively propose their own projects (in consultation with the course director).

In either case students must get the agreement of a supervisor before they will be considered as having selected a project. Supervisors may require a meeting with the student to discuss the project before accepting a supervision request. Once a supervisor agrees to supervise a project, details of the project assignment will be recorded centrally by the supervisor.

Students may only select a single project, but they may change their minds and select an alternative project before the end of the 12th week of Semester 1. However, if a student selects a new project, they must notify both the old and new supervisors that their previously chosen project is to be cancelled.

Choosing a project supervisor

Students should note that each supervisor will only take a limited number of students. Once this limit has been reached a line will be put through their name on the list of potential supervisors. If you find the information is incorrect please send details to Final.Year.Project.Coordinator@cs.tcd.ie
Students should also note that there are only a limited number of supervisors in any area. Hence students are not guaranteed a project in their area of choice.


 
",15
CS4098,Group Design Project,"staffAndrew Butterfield,","Learning Outcomes:
On successful completion of this module, students should be able to:

Describe the complete process of working within a team in order to develop an interactive application, such as a computer game

Implement an Agile development methodology

Describe the challenges of working in an inter-disciplinary team, including developing good management and communication practices and how to schedule multiple concurrent tasks meeting interim delivery dates

Use software tools for managing the project, including source code control, issue tracking systems, implementation and testing

Deploy a complete end-to-end process for developing an application from concept, through design, development and implementation.

Class meetings will be devoted primarily to discussion of readings and issues that arise as the project progress; we will have some in-class exercises as well. As such, class participation is important and will be a part of the grade.

 
Module Learning Aims:
The goal of this project is to promote teamwork and also to allow students to use their individual skills and experiences within the context of developing defined projects from specification to delivery. A key aim is to develop student’s abilities in framing design problems and working iteratively to achieve a working solution

Instruction will be provided in Agile development methodologies and facilities will be provided in order to promote close collaboration between team members.

A project supervisor will meet with each team weekly and will advise on setting up the team structure including the assignment of roles and responsibilities within the team and on reporting systems both internally and externally.
Weekly ""peer"" code and design reviews are a core component of the delivery of the module. These are to encourage a team approach to leaning and introduce the practicalities of software quality control.

 
Module Content:
Instruction will be provided in Agile development methodologies and facilities will be provided in order to promote close collaboration between team members. The development of the project will be structured as two “releases”, each of four weeks in duration.

Each week, the current state of progress is assessed and discussed, both in the lectures and in the group meetings.

Main topics covered:

·     Principles of Agile Development

·     Practise of Agile Development

·     Ensuring correct “delivery” of software
Comparisons of related development styles: SCRUM, Lean.

 
",10
CS4099,Final Year Project,An agreed,"Learning Outcomes:
On successful completion of this module students will be able to demonstrate a degree of specialization in a particular part of the subject area, including enhanced or new technical skills that build on theory

Demonstrate that they have engaged in research and critical understanding to an advanced level in their chosen area (examined in the project literature review and evaluation).

Demonstrate a practical understanding of how techniques of research and enquiry are used to create and interpret established knowledge.

Address a moderate sized problem and in so doing select and justify an appropriate approach, and follow the approach systematically (recognizing alternatives, selecting and justifying the approach taken at each point in the project)

Demonstrate in the technical execution of the project the required level of analysis, design, and technical skill.

Communicate to both a technical audience in the written report and project demo and to a more general audience in the poster and 2 min poster presentation.


 
Module Learning Aims:
To integrate the theoretical and practical knowledge of the student across all of the years of their study and provide a practical demonstration of their capability in executing a challenging project.
Module Content:
At the beginning of each academic year, students will be notified of the deadlines for project milestones and deliverables.

Students must select a project and a supervisor

Student should submit a one page abstract of their project

Students shall present a demo of their project to their supervisor and second reader

Students shall submit a project report

Students shall submit a poster according to the School Poster Template format

All Final year project posters will be presented at a showcase event to which external companies, research agencies and individuals will be invited. At this event students shall give a 2 minute presentation of their Project. The quality of their presentation will be marked by the final year examination panel.

Students may either select a project from the list of project proposals put forward by the lecturing staff, or alternatively propose their own projects (in consultation with the course director).

In either case students must get the agreement of a supervisor before they will be considered as having selected a project. Supervisors may require a meeting with the student to discuss the project before accepting a supervision request. Once a supervisor agrees to supervise a project, details of the project assignment will be recorded centrally by the supervisor.

Students may only select a single project, but they may change their minds and select an alternative project before the end of the 12th week of Semester 1. However, if a student selects a new project, they must notify both the old and new supervisors that their previously chosen project is to be cancelled.

Choosing a project supervisor

Students should note that each supervisor will only take a limited number of students. Once this limit has been reached a line will be put through their name on the list of potential supervisors. If you find the information is incorrect please send details to Final.Year.Project.Coordinator@cs.tcd.ie
Students should also note that there are only a limited number of supervisors in any area. Hence students are not guaranteed a project in their area of choice.

 
",20
CS4101,Information Security,Elizabeth Daly,"Learning Outcomes:
After successfully completing this module, students will be able to:

Demonstrate a technical understanding of security controls
Identify security risks and vulnerabilities
Provide an appropriate security plan for any business
Evaluate new technologies to identify security risk and benefits
Module Learning Aims:
This module gives students a comprehensive appreciation of information systems security concepts and techniques including privacy and data protection. Lectures will include an introduction to basic encryption building blocks and algorithms. Additionally, students will learn how to evaluate new technologies, their potential security risks and recommended actions.
Module Content:
Overview

Information security
Introduction to terminology
Discussion of news-related examples
Encryption

Cryptosystems
Encryption algorithms
DES and AES
Program security

Program vulnerabilities; malicious code
Development controls
Operating system controls
Administrative controls
Operating system security

Memory and address protection
Access control
File protection
User authentication
Database and Data Mining security

Reliability
Integrity
Attacks on databases
Controls
Data Mining
Guest Lecture on Privacy
Network security

Wired network protocols
Benefits, trade-offs
Security concerns
Attacks and controls
Wireless networks
Administering security

Security planning
Risk analysis and company policies
",10
CS4102,Innovation,William Kingston,"Learning Outcomes:
After successfully completing this module, students will be able to:

Distinguish between invention and innovation, and be able to deal with the individual creativity that is involved in both. They will be better equipped to negotiate the fundamental incompatibility between bureaucracy and any kind of innovation.

Demonstrate an understanding of the central importance of economic innovation, how ideas are turned (or not) into concrete realities, and the role played by legal rights, especially the property righs that confer market power.

Administer the use of patents, trademarks and copyright effectively to protect the ideas of their businesses.

Use international intellectual property databases skilfully to find both the stimulus for new ideas and information about already discovered solutions to problems, from these unique resources.

Distinguish between seed and venture capital, so as to avoid wasting energy seeking either or both for new projects from sources which are not structured to provide what is needed. 
Module Learning Aims:
To enable students to handle economic innovation (“getting new things done” in business) effectively; with special emphasis on creativity, the use of intellectual property and the problems of raising seed and venture capital for innovative projects.
Module Content:
SYLLABUS - Michaelmas term  

1       WK     Creativity and innovation - Text, Chapter 1 and 5

2       WK     Case Study (the antibiotics revolution)-Text, Chapter 3

3       WK     Economic innovation - Text, Chapter 1

4       WK     Market Power-         Text, Chapters 1, 2, 4

5       WK     Specific Market Power: Patents, Trademarks and Copyright - Text, Chapters 1, 2, Refs. to “Beyond Intellectual Property”

6       WK     Innovation databases and Assignment 1 instruction.   

7       WK     Reading  week.        

8       WK     Assignment 1 Reports  

9       WK     Assignment 1 Reports  

10      WK     Capability Market Power -Text, Chapters 1, 2, 4

11      WK     Persuasive Market Power -“Trade Mark Registration is not a Right

12      WK     Internationalization of Market Power -“Removing Some Harm from the World Trade Organization”

 
SYLLABUS – Hilary term

1       WK     The damage done by financial innovations -“Schumpeter and the End of Western Capitalism  

2       WK     Legal changes needed -        “Restoring the Primacy of Technological Innovation”   

3       WK     The Irish case in particular -“Transforming the Conditions for Economic Innovation     

4       WK     Dealing with uncertainty and risk-“Financing innovation ; The US shows a Better Way”

5       WK     Seed and Venture Capital-The US Small Business Innovation Research Programs - The US shows a Better Way”

6       WK     Innovation databases and Assignment 2 instruction            

7       WK     Reading  week

8       WK     Assignment 2 Reports  

9       WK     Assignment 2 Reports  

10      WK     Practical applications 1  -Special paper for this Class    

11      WK     Practical applications 2 - Text, Chapter 5.

12      WK     Revision of Course - All relevant readings

                                

 
",10
CS4103,Information Systems Management,Maria Loomes,"Learning Outcomes:
After successfully completing this module, students will be able to:

Demonstrate a business-driven approach to leadership of the IS function that shows an understanding of how IS is strategically important to an organisation

Understand key IS capabilities particularly some of the key skills of business analysis and business engagement which are critical for successful business solution delivery.

Discuss the essential functions and capabilities of an IS Leadership Team and the challenges of IS leadership and IS functional management. Topics include IS governance and risk, portfolio investment, security management and business process management.

Stay abreast of new technologies and industry trends using information from a range of sources, including academic and professional research, to inform professional practice.
Module Learning Aims:
This module covers the leadership and management of the corporate IS function in order to understand the key concepts of Information Systems Management. While exploring topics including IS business leadership, engagement, business analysis, solution management and IS functional management, it will focus on current IS functional capabilities and future IS leadership challenges. Through participative course work, students gain experience & understanding of today’s critical IS management & leadership issues.
Module Content:
Topics Overview

 
IS Leadership

·    IS leadership and role across the total organization. Explore the role of Chief Information Officer (CIO) especially as advocate & technology enabler.  Models and frameworks for leadership and management

·    Technology, strategy and successful organizations - influences on the development of IS functions in organizations and the current and future role of IS functions particularly as agents of transformation and change

Managing an IS Function for an organization

·    Effective IS Management especially service management, operations and technology management, and managing in an outsourced environment

Governance, cost, security, risk and compliance management and assurance. Business transformation and the role of IS - process management, enterprise architecture and ERP impact


 Managing Solutions development for an organization

•   Managing strategic IS planning for an organisation

•   IS business analysis and business engagement – skills, tools, ways of working and importance including modelling, stakeholder management and formal business analysis processes and methods

•   IS portfolio management, programme and project management

•   Business analytics and knowledge management
 

Future challenges for IS leadership

·    Management and leadership in a modern fast-changing organization.  IS management challenges, process governance and business shared service implications

·    Forecasting the future as leader and manager

Technological, social and environmental pressures - the Internet of Things


 
",10
CS4104,Advanced Information Systems,Richard Southern,"Learning Outcomes:
After completing this module the students will be able to understand the fundamentals of how to apply analytics to solve problems and derive insight from data. The students will also learn how to implement common analytical techniques in R (leading data science language) and excel.
Module Learning Aims:
This course is designed to give the student an introduction to the area of analytics, while remaining closely aligned to the needs and requirements of industry. The course introduces the area of analytics, both through theory and case study, and proceeds to illustrate how machine learning techniques can be used to successfully derive value from data and solve business problems. 
Module Content:
·    Introduction to analytics

·    Basics of programming in R

·    Exploratory Data Analytics (EDA) techniques

·    Data visualisation and presentation

·    Machine Learning fundamentals; Supervised and Unsupervised learning methods

·    Analytics insight and communication

·    Case studies; Credit risk modelling (Retail Banking), Churn prediction (Telecoms), Weather data analysis (Open data), Fraud Analytics (Public Sector)
",10
CS4105,Final Year Project,Simon McGinnes,"Learning Outcomes:
After successfully completing this module, students will be able to:

Critically analyse current research

Carry out research

Present research results orally and in writing
Module Learning Aims:
Working individual or in a group, students carry out a project on a topic of relevance to the Information Systems discipline. Several types of project can be undertaken—investigative research, research and development, and organisational engagement. Over the course of the year, students analyse prior work, formulate an appropriate methodology for their project, conduct the project work in a reflective manner, critically analyse their findings, and draw conclusions from their analysis. The results of the project must be formally presented orally and in writing.
Module Content:
 
 



























Term

Week

Timetabled slot

Details

Michaelmas (1)

1

Introductory lecture

Teams allocated

2

 

Each team chooses project topic

3

 

Supervisors allocated

4-5

Lecture on research methods

Each team writes project proposal

10

 

Each team completes literature review and methodology chapters

Hilary (2)

1-9

Lecture on writing up

Teams work on projects

10

 

Each team submits report

10-12

Team presentations

Each student submits individual reflective diary and peer assessment form


 
",20
CS4106,Information Systems Development Iii,Stephen Brooks,"Learning Outcomes:
After successfully completing this module, students will be able to:

·     Produce appropriate software architectures for large-scale information systems in business and government;

·     Critique existing system architectures, software designs, and development processes, from multiple perspectives;

·     Design appropriate object-oriented software structures for use in enterprise systems;

·     Develop, test and refactor high-quality Java program code;

.     Apply advanced techniques in Java programming.
Module Learning Aims:
To help students build their expertise in advanced information systems development and software engineering using Java; to provide awareness of the current state of the art in software development and to introduce them to some software engineering research papers. 
Module Content:
Topic

Introduction/revision

·     Software development lifecycles; model-driven architecture

·     Agile methods; Scrum; XP; DSDM

·     Domain analysis; requirements and specification

Object oriented analysis and design

·     Principles

·     UML 2.x

·     Design patterns

READING WEEK

Software quality; refactoring; unit testing, test-first development; testing tools

Software architectures: n-tier architectures, model-view-controller, model-view-presenter

Advanced topics in Java programming

·     GUI development

·     Collections/generics

·     Error handling

·     Serialisation

·     Threads

·     Web server applications


 
",10
CS4400,Internet Applications,Stephen Farrell,"Learning Outcomes:
When students have successfully completed this module they should be able to:

 
•    Describe the basic characteristics, structure and operation of a distributed system, and the issues which a distributed system poses to a systems architect;

•    Identify and evaluate appropriate architectural models for distributed problem scenarios;

•    Design, construct, document, deploy and test scaled distributed system solutions to realistic real-world problems;

•    Reason about the performance trade-offs of decentralised architectures;

•    Make use of appropriate documentation and reference material.

•    Develop a strategy for parallel implementation of a complex algorithm

•    Utilise container and virtualisation infrastructure proficiently.

•    Describe and analyse social structures as employed in social web

•    applications, and develop behaviour measurement infrastructure.

Consider the ethical and engineering issues regarding data sovereignty. 
Module Learning Aims:
This module aims to provide a theoretical and practical understanding of the Internet as a high scale application platform that is becoming increasingly important economically and socially. It covers the fundamental content, social and meta-data structures that make up the web and how they can be represented, analysed and manipulated. It addresses the practical tools and techniques of internet application programming, ranging from introductory client/server programming techniques through to high scale user-facing service delivery and analytics focussed computation over large scale data, covering the key architectures and techniques relevant to today’s deployments.

 
Students will complete significant practical work building to an end-to-end cloud based individual project.
Module Content:
The module will be delivered in 4 phases, sequenced as described below. Each phase will be motivated by a lecture series, but will also require focus on and delivery of graded practical development work. Students are cautioned that this practical programme will build from week to week towards a final project output. Grade values for each phase are noted.

 
Phase 1: Introduction to Distributed Systems Programming (Weeks 1-3 – 20%)

 
This phase will equip students with a practical engineering method and capability to design, develop, test and deploy classic client/server distributed systems, operating on cloud infrastructure. A selection of distributed systems theory topics will be reviewed on a case study basis, covering such topics as data synchronisation and replication, fault tolerance, CAP, and so forth. A socket based development task will be set necessitating practical design derived from these studies.

 
Phase 2: Web Application and Service Development (Weeks 4-6 – 20%)

 
This phase will introduce core web programming theory, technologies and techniques, and review practical systems architectures. Topics will include an overview of the concept of web stacks (ie. LAMP) and relevant systems and technical architectures, Web service design and development, RESTful service design. A development task focussed on web service development will be set, combining individual distributed components to deliver a unified service.

 
Phase 3: Introduction to Computational Analytics (Weeks 7-9 – 10%)

 
Towards reading week, the topic of web analytics will be introduced via a set of readings and lectures that will invite the student to develop an understanding of the nature and potential of large scale computation over internet based data sources and end-user activity. Key topics include social network design and measurement, social network analysis, practical network computation and visualisation, and the ethics and practical implications regarding data sovereignty and privacy in the face of these trends. Under guidance, students will develop and submit a short written report for an individual data analytics case study, that they will implement in phase 4.

 
Phase 4: Scalable Service Delivery (Weeks 7-12 – 50%)

 
The final phase of this module will focus on methods for the design, implementation and execution of scaled social network analytics, delivered as data service, that students will be required to deliver. Topics in this practically focussed phase will include models for large scale data processing, relevant technologies, such as Object store, GFS, Map-Reduce, and BigTable, the emergence of dedicated analytics architectures, stream processing, and various application architectures for B2B, B2C and C2C scenarios. Topics will be introduced in terms of their relevancy as design patterns for students’ design and implementation 
",5
CS4404,Machine Learning,Joeran Beel,"Learning Outcomes:
Students who complete this module should be able to:

CS4LO1 Decide when machine learning is an appropriate method to solve a problem

CS4LO2 Understand how machine learning works.

CS4LO3 Apply machine-learning frameworks to solve real-world problems, and adjust and extend existing algorithms when necessary.
Module Learning Aims:
The principal aim of this module is to provide students with a working understanding of machine-learning techniques and their application to solve real-world problems.
Module Content:
Machine Learning Basics (Application Areas, Challenges, Alternatives to Machine Learning)

Machine Learning in Action (Datasets, Frameworks, Evaluation)

Cross-validation and confidence intervals

Overfitting/underfitting (bias-variance trade-off)

Machine Learning Algorithms

Linear Regression

Logistic Regression

Support Vector Machines

Kernel Methods

k-Means Clustering and Mixture Models for Unsupervised Learning

Neural Networks

Deep Learning Algorithms


Use of gradient descent, and extensions for improved scalability (stochastic gradient descent etc)

Probabilistic interpretations of ML algorithms. Maximum Likelihood and MAP estimators.

Recommender systems
",5
CS4405,Optimisation Algorithms For Data Analysis,Georgios Iosifidis,"Learning Outcomes:
Students who complete this module should be able to:

1. Understand the principles of convex and non-convex optimization;

2. Model and analyse problems that arise in data analytics;

3. Design algorithms for optimizing data analytic applications.
Module Learning Aims:
The aims of this module are to give the student skills to model, analyse and solve optimisation problems that arise in data analytics. 
Module Content:
1. Convex optimization, convexity, duality, sub-gradient methods. 

2. Co-ordinate descent methods, parallel and asynchronous optimization algorithms.

3. Integer programming and approximation algorithms.

4. Data analytics algorithms and applications.
",5
CS4406,Data Visualisation,John Dingliana,"Learning Outcomes:
Students who complete this module should be able to:

 
DS4LO1 Discuss the concepts behind the design and construction of data visualisations;

DS4LO2 Discuss how human perception and cognition impact on this design;

DS4L03 Describe the different types of visualisation and their uses;

DS4L04 Discuss the infrastructure, both hardware and software, for visualisations and make informed decisions about the best hardware and software for specific visualisation tasks;

DS4LO5 Choose and implement the visualisation techniques best suited to analyse data for a given question.
Module Learning Aims:
This module aims to equip the student with the knowledge and tools to visualise data in ways that give insight and understanding. The module looks at all of the elements, beginning with a study of how we perceive and understand visual scenes, that inform principles of good visualisation design, through to the hardware and software that allow these visualisations to be implemented. The student who completes the module should be able to decide on the best visualisation for the data and research question at hand, and then implement in the best way possible.
Module Content:
Specific topics addressed in this module include:

·     Fundamentals of a good data visualisation;

·     How humans perceive and understand visual information

·     Principles of visual design;

·     Two-dimensional and three-dimensional graph types and data animations;

·     Types of information visualization

·     Focus and context visualization

·     Spatial data visualization

·     Interactive Visulization

·     Specialist visualisation libraries (e.g. D3, Highcharts, mapping systems)

·     Hardware and high-performance techniques for computationally intensive visualisations;
",5
CS4407,Security And Privacy,Stephen Farrell,"Learning Outcomes:
On successful completion of this module a student will be able to:

NS5LO1 discuss information security and demonstrate an understanding of the context in which information security operates in terms of safety, environmental, social and economic aspects;

NS5LO2 analyse, assess and choose among techniques for mitigating important privacy threats through appropriate security controls, namely the application of cryptographic primitives;

NS5LO3 assess both the risks and threats associated with data security, and assess how the relevant legislative and regulatory frameworks apply;

NS5LO4 reason about issues of privacy with respect to data release.
Module Learning Aims:
The objectives of this module are: to develop an in-depth understanding of risk, data privacy, threats and risks of security breaches, an awareness of computer security (cryptographic) and protocol techniques, and an ability to make appropriate decisions about securing data.
Module Content:
Specific topics addressed in this module include

·     Cryptography

o  Symmetric Key Crypto - DES and AES

o  Asymmetric Key Crypto - RSA, DLP, ECC

·     Privacy

o  Privacy Laws Around the World

o  US and EU Data Protection Laws

o  Machine readable terms and conditions

o  User control over privacy settings

Internet Security and security standards

 
X.509 Certificates and Public Key Infrastructure

Transport Layer Security (TLS)


Authentication

Two-Factor Authentication

Biometric


System and Network Security

Social Networks and Privacy

Threats

Malware, SQL Injection and Cross-Side Scripting Attacks

Buffer Overflows

Botnets   
",5
CS4501,Fuzzy Logic & Control Systems,Khurshid Ahmad,"Learning Outcomes:
At the successful completion of the module the student will have the knowledge of:

1.   The inherent imprecision and uncertainty in data and (scientific) concepts

2.   The existence of fuzzy heuristics used in the control of ‘real-world’ system

3.   The new paradigm of computing-with-words

The knowledge will help the students to design and build:

4.   Fuzzy-logic based systems

5.   Fuzzy-control systems

        6.   Neuro-fuzzy learning systems
Module Learning Aims:
The understanding and processing of imprecise and uncertain data.
Module Content:
1.    Terminology: Uncertainty, Approximations and Vagueness (2 Lectures)

2.    Fuzzy Sets and Aggregation Operators (5 Lectures)

3.    Fuzzy Logic and Fuzzy Systems (7 Lectures, 3 tutorials, 3 labs)

4.    Fuzzy Control (6 Lectures, 3 tutorials)

5.    Neuro-fuzzy systems including introduction to neural computing (4 Lectures)
",5
CS4504,Formal Verification,Vasileios Koutavas,"Learning Outcomes:
Having successfully completed this module, students will:

1.   Have gained signidicant knowledge of mathematical logics (propositional and first order logic) and the Floyd/Hoare logic for program specification. These logics are the basis for software verification, and are the de facto standard in the verification industry.

2.   Understand the current state-of-the-art in software verification technology, its range of applicability and theoretical limitations, and the necessary programmer input required to overcome these limitations.

3.   Be able to use logic formulas to specify the correct behaviour of programs, including programs implementing well-known algorithms (e.g. binary search), new programs provided to them, and programs they write themselves to solve engineering problems.

4.   Learn to use the state-of-the-art in software verification tools (e.g. Microsoft Dafny) to mechanically verify program correctness in a team setting.

5.   Learn how to use pencil-and-paper mathematical proofs to manually verify program correctness.

6.   Understand the impact of software faults in different areas of engineering, such as aerospace and medical, and how this translates to financial, ethical, and human well-being.
Module Learning Aims:
Increasingly complex computer systems are becoming ever more important in all aspects of our lives. There are numerous examples where software bugs had extremely serious consequences, financially or to human well-being. This module will explore techniques to mathmatiically verify that computer systems satisfy their specifications; i.e., that they have no bugs and are thus safe to use. The focus will be mainly on software correctness.

 
These techniques rely on precise mathematical logics and proof systems appropriate for software verification. State-of-the-art tools will be used to verify the correctness of programs.
Module Content:
Specification languages and logics; axiomatic program semantics. Formal proof systems to verify software and system properties such as propositional, predicate and Hoare logic. Proofs by mathematical, structural, and rule induction. Correcness proofs of functional and imperative programs.
",5
CS4521,Advanced Computer Architecture,Jeremy Jones,"Learning Outcomes:
Students who successfully complete this module should be able to:

use Spin to check the correctness of parallel algorithms

code and evaluate a selection of techniques and algorithms for implementing locks

code and evaluate a selection of lockless algorithms

describe the operation of hardware transactional memory

code and evaluate a selection of lockless algorithms that make use of hardware transaction memory
Module Learning Aims:
To provide students with theoretical and practical experience of concurrent programming with and without locks.
Module Content:
•     spin locks vs blocking

•    IA32 and x64 atomic and serialising instructions

•    load locked / store conditional (LL/SC) instructions

•    cache coherency

•    the cost of sharing data between threads in a multiprocessor

•    lock implementations and their evaluation (eg. testAndSet, testAndTestAndSet, ticket, MCS, Peterson, …)

•    the compare and swap instruction

•    lockless algorithms and their evaluation [e.g. a lockless ordered list

•    memory ordering and consistency

•    the ABA problem

•    memory management for lockless algorithms [e.g. Hazard pointers] 

•    hardware transactional memory [eg Intel Haswell and Broadwell CPUs]

•    hardware lock elision

    •    IA32/x64 performance counters
",5
CS4D2A,4D2A Information Management Ii,Séamus Lawless,"Learning Outcomes:
Having completed the course the student will be able to:

·     Define and comprehend the theoretical and practical issues in the management, retrieval, organisation, indexing and storage of large quantities of data

·     Model data and analyse data relationships for exploitation within database management systems

·     Program a database management system for database creation, information retrieval and database management

·     Analyse and assess various database concurrency protocols and algorithms to assess their performance and relative appropriateness in differing operating environments.

·     Evaluate existing concurrency control algorithms and appropriate data structures for data management.

·     Understand data integrity and security and the approaches used to manage and maintain both.

·     Compare and contrast different Database management paradigms such as relational, NoSQL, in-memory and native web/linked data stores.

 
Module Learning Aims:
This course is focused on the modelling of information and database system technology. More specifically, it focuses on state-of-the-art database technology, from both the user and systems perspectives.

From a system engineering perspective, the course examines the concepts and algorithms for: transaction processing, concurrency control, metadata representation, database security policies, integration of databases on the web and emerging database technologies.

From an information designer’s perspective, the course examines the theoretical model underpinning relational databases, functional dependency theory and normalisation (for information modelling), functional dependency modelling, implementation of databases and database applications.

Thus the course is intended to enable the students to design information models and implement these models in state of the art databases (relational and native web databases), as well as be able to analyse and evaluate approaches to information organisation, storage, transaction support and management.

 
Module Content:
Specific topics addressed in this module include:

·     Overview of database systems and users

·     Database system concepts and architecture

·     Relational database management

·     Relational model

·     Functional dependency theory and normalisation

·     On-line module on SQL (relational database query language)

·     SQL/PL (SQL as a programming language)

·     Transaction processing

·     Query processing

·     Concurrency control

·     Database recovery

·     Security and authorisation

·     Software engineering for database applications and database development

·     Web databases

·     NoSQL and In-Memory Databases


 
",5
CS4D2B,4D2B Knowledge Engineering,staffOwen Conlan,"Learning Outcomes:
On completion of this module the student will be able to:

 
1.   Design and engineer a Database Management System (DBMS) with consideration given to hardware, information organization, hashing and indexing.

 
2.   Understand the structure of, and apply advanced manipulation techniques to, XML documents.

 
3.   Develop skills in managing knowledge using Ontological and Semantic Web technologies.

 
4.   Design and develop Ontologies

 
5.   Understand and Compare different Information Retrieval techniques, specifically those used on the web.

 
Module Learning Aims:
Knowledge Engineering is a one semester module taken by Senior Sophister CD and D Stream students. It builds on the outcomes of Data Engineering by introducing knowledge engineering techniques such as information organisation and storage, information retrieval, XML and ontological reasoning. It addresses techniques and technologies for organizing, structuring and storing data, with a view to applying knowledge engineering approaches. Specifically, this module focuses on the organization and sorting of files including topics such as hardware optimization, indexing and dynamic data structures. These topics are expanded to include advanced Knowledge Management approaches, such as Information Retrieval (IR) and Data Mining, and technologies, such as advanced XML and ontologies.

The objectives this module are to give students an understanding of the organization and manipulation of knowledge and data using a variety of techniques. 

 
Module Content:
·  1.   Record storage and primary file organization;

2.   Index structures for file;

3.   Fundamental Technologies and Techniques for DBMSs

o  Storage Hardware

o  File Basics, File Organisation, File Sorting

o  Hashing

o  Single-Level Indexes, Multi-Level Indexes, B Trees, B+ Trees

4.   Knowledge Management

o  Advanced XML

§ XSLT; XPath; XQuery; XUpdate

o  Ontologies

§ OWL; Reasoning

§ Application in Semantic Web

5.   Artificial Intelligence

o  Rule-based systems; Case-based reasoning; Bayesian Networks

6.   Retrieving textual information:

o  IR vs database retrieval;

o  Classic IR models (boolean, vector space, probabilistic);

o  Retrieval effectiveness - precision and recall.

7.   Information retrieval on the web:

o  First generation search engines;

o  The HITS algorithm;

o  Google; Scamming Google;

The next generation of search engines
",5
CS4E04,4E4 Trinity Industry Partnership Project,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",30
CS4E1,4E1 Management For Engineers,Marie Redmond,"Learning Outcomes:
Module Outline and introduction to project management concepts;

Project definition and organisation.

Project planning tools.

Project feasibility and evaluation .

Risk , resources and costs.

Team dynamics and organizational behaviour.

Alterative models of project management: IT, innovation, new product development.

Coursework

Team report on SimProject showing performance reports – submit via Turnitin;

Individual reflective diary on SimProject – submit via Turnitin.

Individual case study on project management – submit via Turnitin.
Module Learning Aims:
This module aims to introduce students to the concepts and tools of project management. We will use a project management simulation SimProject www.fissure.com to develop the practical skills of project management.
Module Content:
",0
CS4E2,4E2 Computer Engineering Project,An agreed,"Learning Outcomes:
On successful completion of the project, the students will be able to:

·     derive, apply and adapt solutions from the discipline specific knowledge gained in lectures and coursework, to a real world problem solving context;

·     experience independent enquiry and investigation of a practical engineering problem, application or topic;

·     assess and criticise information, methods and results for a defined engineering purpose;

·     identify and formulate technical problems in such a manner as to make them amenable to solution;

·     design a system, component or process to meet a specified goal;

·     analyse and interpret results from experiments conducted during the course of the design process in order to modify improve or explain the functionality of the system, component or process being created;

·     communicate effectively in technical and scientific writing, and to present scientific/technical concisely to a technical audience that may not be expert in the specific domain of the presentation;

·     formulate the design of systems in terms of a schedule of intermediate goals that manifest in subsystems;

·     manage workflow and task scheduling within the constraints of resources and time given specific design goals and deadlines;

·     use industry standard hardware and/or software tools and codes of practice for all aspects of design including analysis and presentation;
        ·     examine and discuss the impact of the project design or theme on people and the environment.

 
Module Learning Aims:
To integrate the theoretical and practical knowledge of the student across all of the years of their study and provide a practical demonstration of their capability in executing a challenging project.
Module Content:
At the beginning of each academic year, students will be notified of the deadlines for project milestones and deliverables.

·     Students must select a project and a supervisor

·     Student should submit a one page abstract of their project

·     Students shall present a demo of their project to their supervisor and second reader

·     Students shall submit a project report

 
Students may either select a project from the list of project proposals put forward by the lecturing staff, or alternatively propose their own projects (in consultation with the course director).

 
In either case students must get the agreement of a supervisor before they will be considered as having selected a project. Supervisors may require a meeting with the student to discuss the project before accepting a supervision request. Once a supervisor agrees to supervise a project, details of the project assignment and will be recorded centrally by the supervisor.

 
Students may only select a single project, but they may change their minds and select an alternative project before the end of the 12th week of Semester 1. However, if a student selects a new project, they must notify both the old and new supervisors that their previously chosen project is to be cancelled.

 
Choosing a project supervisor

Students should note that each supervisor will only take a limited number of students. Once this limit has been reached a line will be put through their name on the list of potential supervisors. If you find the information is incorrect please send details to Final.Year.Project.Coordinator@cs.tcd.ie

 
Students should also note that there are only a limited number of supervisors in any area. Hence students are not guaranteed a project in their area of choice

 
",15
CS4LL1,Cs4Ll1 Information Management,Séamus Lawless,"Learning Outcomes:
Having completed the course the student will be able to:

·     Define and comprehend the theoretical and practical issues in the management, retrieval, organisation, indexing and storage of large quantities of data

·     Model data and analyse data relationships for exploitation within database management systems

·     Program a database management system for database creation, information retrieval and database management

·     Analyse and assess various database concurrency protocols and algorithms to assess their performance and relative appropriateness in differing operating environments.

·     Evaluate existing concurrency control algorithms and appropriate data structures for data management.

·     Understand data integrity and security and the approaches used to manage and maintain both.

·     Compare and contrast different Database management paradigms such as relational, NoSQL, in-memory and native web/linked data stores.

 
Module Learning Aims:
This course is focused on the modelling of information and database system technology. More specifically, it focuses on state-of-the-art database technology, from both the user and systems perspectives.

From a system engineering perspective, the course examines the concepts and algorithms for: transaction processing, concurrency control, metadata representation, database security policies, integration of databases on the web and emerging database technologies.

From an information designer’s perspective, the course examines the theoretical model underpinning relational databases, functional dependency theory and normalisation (for information modelling), functional dependency modelling, implementation of databases and database applications.

Thus the course is intended to enable the students to design information models and implement these models in state of the art databases (relational and native web databases), as well as be able to analyse and evaluate approaches to information organisation, storage, transaction support and management.

 
Module Content:
Specific topics addressed in this module include:

·     Overview of database systems and users

·     Database system concepts and architecture

·     Relational database management

·     Relational model

·     Functional dependency theory and normalisation

·     On-line module on SQL (relational database query language)

·     SQL/PL (SQL as a programming language)

·     Transaction processing

·     Query processing

·     Concurrency control

·     Database recovery

·     Security and authorisation

·     Software engineering for database applications and database development

·     Web databases

·     NoSQL and In-Memory Databases

 
",5
CS4LL3,Csll Final Year Project,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",10
CS4LL5,4Csll5 Advanced Computational Linguistics,Martin Emms,"Learning Outcomes:
 
-     understand in general what a probabilistic model is, the distinction between so-called visible and hidden variables

-     the general idea of unsupervised training as way to set model parameters concerning hidden variables from evidence only on visible variables

-     understand Expectation Maximisation (EM) as a general unsupervised technique, including proofs of its convergence and property of increasing data likelihood

-     understand specific instances of this in Machine Translation and Speech Recognition and further details of how seemingly infeasibly costly calculations can in fact be feasibly done

-     consider the further case of models for the hidden 'topics' in a document collection and the further modifications to EM to solve this

  
  
Module Learning Aims:
The aim is to give a grounding in so-called unsupervised machine learning techniques which are vital to many language-processing technologies including Machine Translation, Speech Recognition and Topic Modelling. Whilst studied in these contexts, the techniques themselves are used much more widely in data mining and machine vision for example. 
Module Content:
-     Probability basics on collections of variables with discrete outcomes (what word, what topic etc) in particular joint, marginal, and conditional probabilities; the chain rule; relative frequences as maximum likelihood estimators

-     Statistical Machine Transation: general (source|target) x target formulation and learning from corpus of sentence pairs; idea of 'hidden' alignment variables between sentence pairs; the so-called IBM alignment models; brute-force EM for learning alignment models; efficient exact algorithms avoiding the exponential cost of brute-force EM

-     Speech Recognition: general Hidden Markov Model (O|S) x S formulation where O is observable speech, and S is hidden state sequence. Brute-force EM for learning HMM parameters from corpus of observed speech; the efficient Baum-Welch algorithm avoiding the exponential cost of brute-force EM

-     Topic Modelling: a technique for assisting the navigation of huge document collections by seeing them as involving hidden or latent 'topic' variables; how this can be used to recover hidden relationships between documents; techniques to learn parameters of these models

in each case, alongside the explanation of the algorithms, there will be practical work, either developing instances of them, or deploying existing implementations and running them on data sets to concretely see their properties  
",5
CS5E1,5E1: Computer Engineering Research Project,Individual supervisor,"Learning Outcomes:
On successfully completion of this module students should be able to:

1. Engage in a sustained piece of individual, academic research on a chosen topic within the field of computer science

2.Read widely (inside and outside the specific technical area) and critically reflect on a number of pieces of written research

3.Explore varying methodological approaches and adopt the relevant approaches suitable to the topic being researched;

4.Produce a written report dissertation of publishable standard that evaluates and synthesises written materials, and displays evidence of independent research skills.
Module Learning Aims:
Students will select and carry out an in‐depth research project which is expected to yield publishable results. Students must select the project, carry out required investigations and submit their dissertation within the academic year.
Module Content:
N/A
",25
CS5E2,5E2: Research Methods,Lectures delivered,"Learning Outcomes:
On successful completion of this module, students will be able to:

1. Plan and manage a postgraduate research project

2. Critically appraise of existing research tools, methods and publications

3. Identify scope of future research and design a research proposal

4. Summarise, communicate (in written and oral form) research within and outside their own field

5. Recognise issues of plagiarism, confidentiality, data protection and other ethical issues

6. Design engineering experiments and analyse and interpret quantitative information collected

7. Identify and apply appropriate statistical software tool for experimental problem solving 
Module Learning Aims:
This course will provide an introduction to students the key aspects of research in engineering, research methods & designs, data collection and analysis, ethical and legal perspectives.

The course aims to:

• Develop a critical outlook in students regarding published research

• Support students in the development of their research project

• Expose students to the organisation, conduct & implementation of research in universities & institutes

• Enable students to utilise the available research resources and develop a supportive research environment 
Module Content:
Research Philosophies in Engineering, Research in Academia, Research scopes & problems, Research process and design, Characteristics of good research and choice of research topic,

Components of research proposal, Literature review, Research strategies, Sampling analysis,

Data collection, Research ethics, Research access, Data analysis, Software training, Report writing and Presentation 
",5
CS7021,Strategic Is Planning,Chief Examiner,"Learning Outcomes:
On successful completion of this course, students will be able to:

understand the role of IS leadership

discuss the various business skills that are required of IS/IT managers and chief information officers and the future challenges of these roles

engage with the business to prepare, agree and implement IS strategies and policies

prepare and present initiatives with a company board and senior management;

discuss the principal theories and models of IS strategic management;

detect and avoid the engagement and communications problems that often occur in IS management;


 
Module Learning Aims:
The purpose of this module is to introduce students to the theories, models and professional practise associated with establishing, developing and implementing information systems (IS) policies, strategies and plans
Module Content:
Overview of the IS field with an emphasis on technology leadership.  IS strategy and policy development. Barriers and IT function communications issues and problems. The adoption of solutions/tools to improve IT capability and value contribution by a CIO and the IS function.
",15
CS7022,Social And Organisational Impact Of Information Systems,Diana Wilson,"Learning Outcomes:
After completing this module, students will be able to:

 
Recognise and analyse predominant theories and philosophies of Information Systems.

 
Critically evaluate existing implementations of IS

 
Begin to generate research questions, evaluate and organise information and data in accordance with an evidential need and with the protocols of the discipline.

 

 
Module Learning Aims:
The objective of this module is to introduce students to Information Systems as an academic discipline, its associated philosophies and theories. Behind the very concrete manifestations of IS in the workplace and society, is a wealth of important and critical questions that all of us must ask with regard to the purposes and consequences of computers in the world.

 
This module balances the wider societal impacts of technology considering economic, sociological, psychological and political impacts with pragmatic exploration of these impacts through case study analysis.

 
The general approach of this module is seminar-based and will involve group reflection and discussion as we look to the grounding of theory in evolving practice. The perspective adopted and encouraged is avowedly critical; giving students the freedom and time to pursue topics outside mainstream and orthodox IS thinking and application.


 
Module Content:
Specific topics addressed in this module include:

Philosophies of Science and Technology: Technical Rationalism, Autonomous Technology, Technological Determinism, Anti-technology, Ethics and Technology, Critical Social Theory, History of the Organisation, Sociological, Psychological, Political and Economic Impacts of technological change.

 
",15
CS7025,Programming For Digital Media,Kathryn Cassidy,"Learning Outcomes:
Students with no programming background will be given the knowledge and confidence to tackle small-scale programming projects using the JavaScript and Python languages. The emphasis on browser-based programming examples means that students will also be familiar with many typical techniques for producing interactive effects in web-based applications. Students will also be aware that the core programming techniques can be applied to other programming languages, and are therefore prepared for technologies introduced on later courses on the degree programme.

On completion of this module, students will be able to:

·     Understand different software and hardware platforms

·     Be familiar with basic programming techniques

·     Understand object oriented programming, Python, and JavaScript

·     Know the network model for the Internet

·     Understand client/server programming

·     Program applications for mobile platforms

 

 
Module Learning Aims:
Give a good grounding in the design and structure of the modern Internet

Illustrate suitable techniques for standalone and Client Server programming


 
Module Content:
Semester One:

 

Programming concepts

Variables and data storage


Statements and flow of control

Functions and modularity

Input and Output

Animation and reactive programming

Introduction to Object based programming

 
Semester Two:

The design and structure of networking.

The five-layer network model of the Internet.

Technology for Client/Server programming in a networked environment.

Introduction to server-side scripting.

Introduction to database technology.

Software design issues in network applications.

Development for mobile platforms

 


 
",10
CS7026,Authoring For Digital Media,· ·,"Learning Outcomes:
Learning Outcomes:

 

On completion of this module, students will be able to:

·     Design and build valid, accessible websites for delivery on all digital platforms

·     Have a thorough understanding of HTML5 and CSS3

·     Have a good understanding of Web Accessbility issues

·     Build websites using HTML5 and CSS3 for delivery across multiple devices
Understand how to design an information architecture for designing websites

 
Module Learning Aims:
·     This module teaches the basic skills required for designing and implementing websites.

·     It will introduce the standard mark-up languages used on www along with CSS.

·     In the First Semester, students will learn how to develop basic websites using HTML5 and CSS3.

·     In the Second Semester, more advanced web authoring skills will be taught and strategies for designing and implementing interactive applications for delivery on all digital platforms including mobile phones and tablets and desktops
Students will learn the fundamentals of developing Information Architectures and designing intuitive navigation systems.


 
Module Content:
Semester 1: Introduction to Web Authoring

·     Introduction to Markup Languages

·     HTML5

·     CSS3

·     Web Standards and Accessibility

 
Semester 2: Web design & development


 
·     Comprises a combination of short lectures, discussions and tutorials.

·     The lectures will cover the designing for different browsers and devices, audio and video Integration, social media integration, implementation on CMS platforms.

·     They will also introduce a design methodology, which will be adopted (or adapted) by groups during the project implementation phase of the semester.
A project is set for completion during the semester. (Exact dates are contingent on Academic Calendar) This will be a group project (group membership: minimum 3, maximum 5). The remainder of the semester will comprise tutorial meetings with each group with required deliverables each week.

 

 
",10
CS7027,Contextual Media,Semester 1Vivienne,"Learning Outcomes:
Cultural and Critical Theory

On successful completion of the module students will have gained:

·     Essay writing and discursive skills

·     Critical skills with regard to technology, culture and society

·     A broad overview of the state of the art in new media art, critical design and media theory

 
Legal Issues for Digital Media

On completing this module, the students will be able to:

Identify assets that may be protected as intellectual property, and distinguish between intellectual property in its different forms.

Identify and address legal considerations arising from establishing an online presence.

 
Semester 2

Interactive Narratives

 On completion of the module, students will be able to:

Recognise the variety of “interactivities” encountered in digital media

Understand how interactivity affects narrative design and communication

Analyse interactive narratives and assess trends over time

Create interactive narratives for a range of digital media


Game Studies and Design

On completing this module, the students will be able to:

·     Analyse games as texts in a structured and methodical manner in terms of story, aesthetics, gameplay and technology

·     Understand games from a historical and cultural perspective

·     Understand how platform considerations (e.g., controllers, hardware and social context) affects genre and gameplay
Design games using user-centric game design methodology and produce industry-standard game design documents

 
Module Learning Aims:
Semester 1

Cultural and Critical Theory

This module will provide a cultural and critical context for interactive digital media practices. The relationship between culture, society and technology are explored, both at the level of theory and praxis. This module component is cross-disciplinary, using a range of theories from sociology, critical theory, anthropology, science and technology studies, software studies and media theory.

Legal Issues for Digital Media

Legal issues relating to establishing a presence online are explored together with how to identify and go about securing intangible assets (intellectual property) in digital media

This course is designed to give students an overview of the legal considerations that arise when working in the online environment. While not designed to put students in a position that they could advise on the subjects discussed, the course should enable students to identify and address possible commercial opportunities and potential pitfalls before they actually arise. Students should be aware of the variety of commercial opportunities that may arise through the deliberate or incidental creation of assets that may be protected via one or more forms of intellectual property. Students should also be able to identify potential problems associated with the use of third party intellectual property, and should also be aware of the various legal requirements relating to retaining information and doing business in the online world.
Semester 2

Interactive Narratives

This course focuses on the concept of interactivity itself - how it is recognised and understood in both theory and in practice - and how this impacts on developing narrative structures for digital media. Students will be introduced to a variety of theories of interactivity, the challenges and potential in creating narratives with interactivity and the broad array of styles and contexts of interactive narrative.

Topics include:

·  Introduction to interactive narratives

·  Defining interactivity - in technology, users and communication

·  The history of narrative

·  Forms of Narrative - linear, non-linear, map

·  Creating narrative - tools, stories, characters, flow

·  The role of control and feedback

·  Properties of digital interactive narratives

 
Game Studies and Design
Games constitute perhaps the most interactive of the interactive media. They also constitute a booming section of the entertainment industry and in addition have a range of serious applications, for example in learning and training. The course gives the student a solid grounding in the theory of games as a medium and in the practice of game design. 


 
Module Content:
Semester 1

Cultural and Critical Theory

·     What is Technology? What is Culture?

·     Epistemologies and technology (constructivism, post-positivism, pragmatism etc)

·     The ‘big’ debates (extropianism, neo-ludditism, anarcho-primitivism)

·     Technological determinism & Actor Network Theory (Technology Studies I)

·     The body & technology (from Foucault’s biopower to Haraway’s cyborg)

·     Feminism & technology (Layne, Butler etc)

·     Technology & postindustrialism (labour, autonomy, temporal dissolution)

·     When media becomes ‘new’ (Frankfurt School, McLuhan, Manovich)

·     Post-structuralism, (semiotics, simulacra & simulation)

·     Ontology of the techno-self

·     Review, essay discussion

·     What is New Media Art

·     Technology studies II: STS & Actor Network Theory,

·     Media Archaeology

·     Convergence Culture

·     Software studies: Code, Protocol and everyday life

·     Overview: The Network Society

·     Locative Media & Ubiquitous Computing

·     Networked Publics & Smart Mobs: The role of social and networked media in political activism, sociality and play

·     Political Economy of Communications 1: The Audience Commodity, Immaterial Labour, Produsage, Web 2.0

·     Political Economy of Communications 2: FLOSS & Free Culture

Tactical Media, Hactivism & Critical Design

 

Legal Issues for Digital Media

The Data Protection Act and its requirements

The E-commerce Act, the Distance Selling Regulations & other consumer-related law relevant to running an online business.

Privacy issues in the online environment

The variety of Intellectual Property rights available (trademarks, copyright, patents, database rights, registered & unregistered designs), and what they can be used to protect.

Domain name registrations and the diffuse boundary between them and intellectual property (trademarks in particular)


 

Semester 2

Interactive Narratives

This course covers theory, historical assessment and practical elements of creating interactive narratives. Course materials include lecture notes, links to online materials and suggested a reading.



Game Studies and Design


The course consists of two 11-week modules. The first part is an introduction to the emerging field of game studies and deals with the analysis of computer and video games as cultural artefacts on a par with film, literature and drama.

The following topics are covered:

The history of electronic games

Interface, genre and gameplay

Game analysis: Story, aesthetics, mechanics and technology

Archetypes and emotional engagement

Emerging interfaces, such as bio and brain interfaces

In the second half of the course, the students learn about formal and applied approaches to game design and produce a detailed design document as part of the course work. This part of the course is heavily project-driven.

Topics include:

·     Player-centric game design

·     Core mechanics and gameplay modes

·     Games’ internal economy


Level Design


 


 
",10
CS7028,"Audio, Video And Sensor Technologies",Semester 1Vivienne,"Learning Outcomes:
Semester 1

Audio Technologies (Jack Cawley)

On successful completion of the module, students will be able to:

Understand the nature of sound

Use a mixing control and Digital Audio Workstations (DAWs)

Use Virtual Studio Technology (VST plug-ins)

Set up microphones for recording voice and acoustic instruments

Conduct an audio recording session in a sound recording studio

Control the audio in a live performance

Create audio software using the Pure Data visual programming environment.


 
Moving Image for Digital Applications (Vivienne O’Kelly)

This module aims to familiarize students with key concepts and debates surrounding the moving image. Theories of representation are explored alongside the development and expansion of the moving image in society. Questions of realism will be discussed; the conventions of commercial narrative cinema will be considered, along with strategies of representation that interrogate notions of transparency. Works that offer alternative approaches to form, that seek to expand the possibilities of the moving image and re-imagine the role of the spectator shall be the focus of weekly discussion. A diverse range of influential theoretical, critical and cultural perspectives related to the study of the moving image will be illustrated via screenings of relevant material.

 
Semester 2

Moving Image for Digital Applications (Aidan Maguire)

On successful completion of the module, students will be able to:

 

Assess the technical requirements for producing a video.

Operate professional camera and apply shooting techniques.

Produce professional quality video projects•Recognise common terms and practices in the creation of a video
Shoot / light an interview with with edited cutaway sequences

Introduction to Sensor Technologies (Niall O’Hara)
This module affords an overview of the fundamentals of physical computing, providing the tools for basic circuit building and electronics, programming with Arduino, sensor and actuator construction, and communication between Arduino and the processing IDE.

 
 
 
 

 
Module Learning Aims:
Semester 1

Audio Technologies (Jack Cawley)

·     Provide a practical introduction to digital audio technology for beginners

·     Illustrate suitable techniques for the development of systems for interactive sound manipulation

Moving Image for Digital Media Applications (Vivienne O’Kelly)

Lectures in the first semester aim to familiarize students with key concepts and debates surrounding the moving image. Contact hours are comprised of both teaching & viewing time slots.

Attendance at all lectures and workshops over the two semesters is compulsory.

Semester 2

Moving Image for Digital Media Applications (Aidan Maguire)

Students will be given a practical introduction to video production including camera controls, composition, lighting and editing. This will give the students the opportunity to effectively / confidently use video production as part of a multimedia project.

 
Introduction to Sensor Technologies (Niall O’Hara)

TBC ( Niall O’Hara)

 
Module Content:
 Semester 1

Audio Technologies (Jack Cawley)

Introduction to Sound and Acoustics: Acoustic waves; Time and Frequency; Decibels and loudness; Inverse Square Law; Transducer systems

Room Acoustics and Psychoacoustics: Pitch, Loudness and Timbre; Impulse responses; Room acoustics: Early Reflections, diffuse field; Psychoacoustic parameters: IACC, LE, LF; Absorbers, diffusers and room treatment

Digital and Analog Audio: Sampling Rate; Bit depth; AD/DA conversion; Sampling theorem; Dynamic Range

Mixing Console Workflow: Gain control; Equalizers; Panning, summing and master faders; Auxiliary channels; Phantom power; Pre-amplification; Pre- and Post-fader control; Cabling and standards

Microphones: Dynamic microphones ; Condenser microphones; Microphone Directivity; Proximity effect 

Multitrack Recording – Digital Audio Workstations (DAWs): Introduction to audio sequencing; Sequencer basics; Monitoring; Click track recording; Editing; Stereo Mixdown

Audio Signal Processing: Equalizers; Reverberation; Dynamic Range Processing; Modulation Effects; Distortion; Pitch Correction

Mixing in DAWs: Panning; Equalization; Automation; Inserts; Sends; Mixing for video and games

Recording Techniques: Monophonic microphone placement; Stereophonic Recording Techniques: Intensity stereo recording, Coincident stereo recording, ORTF, Binaural Audio 

Stereophonic Mastering: Master bus signal processing; Mastering for CD/DVD; The loudness wars; Dithering; Compression & Codecs

MIDI: How MIDI works; Basic MIDI commands; General MIDI; MIDI Interfaces; MIDI in sequencers; Quantization; Virtual Instruments (VST plug-ins)

Introduction to Surround Sound: Overview of Multi-Channel Audio Technology; 5.1 Surround sound basics; Setting Up for Surround Sound on commercial loudspeaker layouts; Surround Audio calibration    

Mixing and mastering for 5.1 surround sound: Surround Panning; Surround Sound signal processing; Reverberation control; LFE Channel considerations; Stereo Compatibility; Discrete Vs. Matrixed Surround Sound; Dolby Digital Encoding

Interactive Sound Control with Pure Data (PD): Introduction to Real-time Audio Signal Processing; Audio I/O control with PD; Multichannel Audio in PD; Audio Filtering and DSP with PD; MIDI in PD

Semester 1

Moving Image for Digital Applications (Vivienne O’Kelly)

Specific topics addressed in this module include:

Narrative and narration

Editing

Mise-en-scène

Screen Media and the Politics of Representation

Documentary

Virtual Reality

Animation

Moving Image and Interactive Installation

Semester 2

Moving Image for Digital Applications (Aidan Maguire)

Specific topics addressed in this module include:

Digital Video Technologies
 
Introduction to Digital Video

        
        Introductions

        Course Outline

 
Digital Video Specifications
 
        Sensors: CMOS, CCD

        Video formats
        Pixel Aspect ratio

        Frame rates

        Resolution
        Scan Method
 
Exposure & Colour Balance

        Aperture

        Shutter Speed

        ISO / Gain

White Balance

 
Introduction to Camera Systems

        Controls

        Functions

        Operation
        Tripod vs Handheld
        
Audio techniques for video production
 
        Diegetic, Non Diegetic Sound
        Types of microphones

        Microphone placement

        Room tone & Ambient Sound

 
Framing & Shot Types

        Shot Size

        Composition theory

        Head room & Looking room
        Depth of Field
        Cutaways
 
Lighting
 
        Safety
        Hard & Soft Light

        Colour Temperature

        Gels & reflectors

        3 Point lighting

        Lighting Ratios

Editing with Final Cut Pro
 
        Creating a new Final Cut Pro project

        File formats

·         Capturing Footage
    Editing
    Exporting Movies

Introduction to Sensor Technologies (Niall O’Hara)

·     Introduction to Sensor Technology: Providing on overview of Physical Computing / Introduction to the fundamentals of Electronics / Introduction to the components and tools used in the course.

·     Introduction to Physical computing

·     Basic Electricity and Electronics: Introduction to Electricity; Ohm’s Law; What is a circuit; Reading a Resistor Chart; Reading a Schematic; Principles of Electromagnetic transduction; Using a solder-less breadboard to build a prototype circuit.

·     Sensors and Actuators: Digital and Analogue sensors and actuators

·     Introduction to the Arduino: Introduction to fundamentals of programming with Arduino/ Simple I/O using DigitalWrite() and DigitalRead() / Building a simple circuit using a sensor and an actuator.

Introduction to the Arduino Board: Elements of the Microcontroller board; Introduction to the Software IDE; Setting up Arduino: port and board specifications
",10
CS7029,Visual Computing And Design In 1415,"Robin Fuller,","Learning Outcomes:
On successful completion of the module, students will be able to:

Graphic Design (Robin Fuller)

·     Identify key formal elements in graphic design processes and practices

·     Analyse graphic design and visual cultural products in an informed and structured manner

·     Evaluate these products in terms of formal (i.e. functional) success and socio-cultural & technological relevance

Visual Computing (Kerstin Ruhland, John Dingliana)

·     Identify some of the key theoretical principles, standard algorithms and data structures underlying modern graphical applications.

·     Discuss how fundamental components common to all computer applications are used to produce high-level computer imagery in digital media and interactive graphical programs.

·     Employ industry-standard computer-aided design software to create 3D objects and models, modify a virtual camera, animate and render images and videos of complex virtual scene.

·     Write computer programs for modifying computer images and generating graphical objects in 2D and 3D

·     Implement an interactive computer application, that handles input events form the user (such as mouse, keyboard input) to affect graphical output

·     Implement a basic virtual reality application.

 
 
 


 
Module Learning Aims:
Semester 1

Graphic Design (Robin Fuller)

·     Introduce students to some of the key formal elements of graphic design practices

·     Introduce students to some of the major historical and critical debates concerned with graphic design and visual cultural products

·     To encourage students towards a critical engagement with visual cultural / technological intersections

Semester 1 & 2: Visiual Computing (John Dingliana, Kerstin Ruhland)

·     The objective of this course is to equip students with a fundamental understanding of the technology underlying the field of computer images and how this is applied to advanced areas such as geometric modelling, rendering and animation. The module will explore modes of input and output and the limitations and potentials of (graphical) digital media.

·     Through discussion and practical assignments, the module should provide an understanding of the production processes, complexity, tools and challenges involved in production of digital images, animations and interactive graphical experiences, including games, virtual reality and augmented reality.

 


 
Module Content:
Semester 1

Graphic Design (Robin Fuller)

·     Information Design

·     Typography

·     Non-linguistic visual communication

·     Text and image interaction

 
Visual Computing 1 - 3D Graphics and Modelling (John Dingliana, Kerstin Ruhland)

·     Introduction to computer graphics and applications

·     Representation and display of digital images

·     Basic mathematical principles used in computer graphics

·     2D and 3D modelling data structures

·     Creating 3D models and scenes

·     Illumination and Lighting

·     Camera modelling, viewing and projection

·     Texture mapping

·     Animation 

·     Practical components involving labs will use graphical modelling applications such as 3D Studio Max or Maya

Semester 2

Visual Computing 2 – Image Processing and Interactive Graphics (Kerstin Ruhland)

·     Introduction to visual computing

·     Basic mathematical principles used in visual computing

·     Perception and representation of Colour

·     Programming interactive 3D Graphics

·     Image Manipulation, Enhancement, Filtering

·     Video processing

·     Procedural graphics

·     Interaction with graphical programs,

·     Virtual and Augmented Reality

Practical components involving labs will use visual computing tools such as Processing

 
 


 
",10
CS7039,Research Methods (Msc / Phd By Research),Khurshid Ahmad,"Learning Outcomes:
 
 When students have successfully completed this module they should have a deeper awareness of research methodologies in general and those applicable to Ph.D. research in CS & Statistics in particular. They should have improved and developed their written and oral communication skills
Module Learning Aims:
When students have successfully completed this module they should have a deeper awareness of research methodologies in general and those applicable to Ph.D. research in CS & Statistics in particular. They should have improved and developed their written and oral communication skills.
Module Content:
Scientific communities of practice; Ph.D. examination criteria; ACM taxonomy of research skills; Productivity tools for research; the scientific method; formulating a research question; creating a publishing plan and how to get published; quantitative research; qualitative research; data collection techniques; triangulation; ethics; academic writing; presenting your research; introduction to the philosophy of science.
",5
CS7043,Research Project (Interactive Digital Media),Mads Haahr,"Learning Outcomes:
On completion of this project, a student will be able to:

 

Demonstrate the skills and technologies learned during the academic year

Provide an opportunity for each student to demonstrate and showcase their individual skills

Provide an opportunity to build teamwork skills

Learn how to develop an initial creative concept into a fully realised interactive installation

Implement the web programming languages and tools learned in the course

Develop visual styles and designs suited to interactive narratives

Understand use of moving image in interactive narrative

Investigate new and innovative ways of interacting with web content

Understand how to deliver non-linear narratives for local and remote access

Create and edit audio content suited to online interaction and delivery


 
Module Learning Aims:
The aim of the project is to provide a framework for students to work together as a single team and also as sub-groups (smaller teams) within an overall team structure. The creative brief will be defined by the project lecturers and the final web-based application will be launched in early September.

This project will involve all students in the class - the final website will ‘tell the story’ of the project using all types of digital media – it will include words, images, moving images, audio and possibly innovative web interfaces. The story of the building can be told in many different ways, for example, history, residents, architecture, artefacts, design.

The goal of this project is to promote teamwork and also to allow students to show their individual skills and experiences within the context of defined sub-projects. All coursework and assignments throughout the academic year will be directed towards acquiring and developing the skills required to complete the final project.

Each student will write a paper (4-6 pages in length) which will be considered for publication in a reputable academic publication/journal – for example, ACM, IEEE. This paper must be submitted in electronic format to the Course Director.
Sub-projects will be established with the overall project . 

 

 

 

 
Module Content:
",30
CS7044,Research Paper (Interactive Digital Media),Mads Haahr,"Learning Outcomes:
On completion of this project, a student will be able to:

Identify a relevant and feasible area of research

Formulate and clarify a focused research question

Demonstrate clarity of problem definition and scope

Successfully plan and manage an extended research and writing process

Locate and assess potential research sources

Evaluate sources for their relevance to the topic at hand and the existing field of knowledge

Critically analyse and integrate appropriate secondary literature

Demonstrate apposite close reading skills (for example, reading for key concepts, assessing the logic of arguments put forward, finding the contexts of claims made, establishing the addressee of the text or arguments, summarizing and re-presenting arguments, etc.) and a working knowledge of what constitutes an explanation, of how to substantiate claims, and provide sufficient evidence in support of assertions

Make an informed choice about appropriate research methods and/or approaches for specific research questions

Demonstrate proficiency in the analysis and interpretation of qualitative and/or quantitative data, where appropriate

Show an awareness of, and ability to, articulate the ground from which the analysis proceeds and from which arguments, evidence, explanations, and logic are assessed

Make logical connections between premises and conclusions, assertions and evidence, case studies and arguments, analyses and exemplifications, cause (s) and effect(s), statements of intent and motivations, and statement of fact and interpretation

Sustain a coherent line of extended argument that engages with existing knowledge in the chosen area of study and exercise critical judgement on the information and/or explanations they offer

Use analytic skills in writing (rather than extensive description in lieu of analysis)

Write in a clear style and adhere to conventional academic practice with regards citations, footnotes, and referencing

Demonstrate the independent learning ability required to advance his or her knowledge and understanding as part of their on-going professional development


 
Module Learning Aims:
The aim of the research Paper is to develop students’ research and writing abilities via a substantial piece of independent work. Further, it aims for learners to demonstrate proficiency in the design of a research paper, application of appropriate research methods or approaches, collection and analysis of data and/or relevant literature, and application of area-specific theories and concepts. Students are expected to formulate their own research question (with the guidance of their supervisors and seminar leader), to gather and select material to answer their question, and set out their findings in an appropriate academic style
Module Content:
The submission of a Research Paper proposal to the Module Coordinator, and attendance at a series of Research and Methodology seminars. Attendance at the Research Methods seminars is mandatory and attendance will be recorded.

 
",10
CS7045,Research Dissertation (Interactive Entertainment Technology),Michael Manzke,"Learning Outcomes:
On successful completion of this module students should be able to:

engage in a sustained piece of individual, academic research on a chosen topic within the field of interactive entertainment technology

critically reflect on a number of pieces of written research

explore varying methodological approaches and adopt the relevant approaches suitable to the topic being researched;

produce a written report dissertation of publishable standard that evaluates and synthesises written materials, and displays evidence of independent research skills,

 
Module Learning Aims:
Students will select and carry out an in-depth research project which is expected to yield publishable results. Students must select the project, carry out required investigations and submit their dissertation within the academic year.
Module Content:
The dissertation represents the most significant component of the IET Programme, and students will select and carry out an in-depth research project which is expected to yield publishable results. The dissertation is a substantial piece of work worth 30 ECTS and students are expected to work part- time during teaching term and full-time over the summer on the dissertation project. The workload of a 30 ECTS module is estimated to be about 750-900 hours. Students must select the project, carry out required investigations and submit their dissertation within the academic year. Project selection will take place prior to the end of the first term and projects may either be proposed by students, in consultation with the Course Director, or may be selected from a pool of project suggestions contributed by members of the staff (this will be posted on the course webpage). Full time work on the dissertation will take place in the period from May to August, but students are expected to be actively considering their dissertation subject as early as possible in the academic year and have completed a State of the Art Review before the middle of Hillary term. An individual supervisor will be assigned to the student who will help to guide the student through the dissertation process.
In addition, time will be taken to prepare / organise / deliver the following:
? Minimum of three presentations on their work and associated progress
? Meetings with Project Supervisors
? Attendance at Research Seminars
? Attendance at Project Management / Research Methodology Workshops.
",30
CS7062,Web Technologies,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",10
CS7063,From Metadata To Linked Data,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",10
CS7071,Strategic Is Sourcing,Chief Examiner,"Learning Outcomes:
On successful completion of this module, students will understand best practice in delivering into the customer environment including managing the ICT portfolio, ICT sourcing strategies, vendor relationship management and procurement. In addition students will have conducted research into the key emerging technologies that will form part of the ICT portfolio.


 
Module Learning Aims:
The purpose of this module is to introduce students to the processes and practices associated with the IS/IT portfolio management environment including procurement, supplier sourcing, change management and security. Students will acquire/demonstrate competencies including strategic perspective, leadership, research, critical analysis, communication, systematic methodology and implementation focus.
Module Content:
Board/top management communication techniques; the procurement cycle; essentials of cost/benefit analysis for IT projects; strategic sourcing; sourcing strategies; open source; portfolio management techniques; security and contingency planning; change management and emerging technologies. 
",15
CS7072,Innovation And Entrepreneurship,Brian O’Kane,"Learning Outcomes:
When students have successfully completed this module, they should be able to:

·     generate innovative business ideas, critically assess them and plan for their practical implementation

·     identify the appropriate intellectual property protection for a business idea

·     understand key accounting and finance concepts

·     apply important finance, accounting, marketing and management skills when designing a business proposition

·     research and develop a business plan, including financial projections

·     understand how investors review a business plan

·     deliver a professional business presentation to specialist and non-specialist audiences

 

 
Module Learning Aims:
·    To develop a student’s understanding of innovation and enterprise – and an appreciation of their place in business

·    To develop a student’s creative, idea generation and innovation skills

·    To develop a student’s understanding of the critical importance of intellectual property

·    To provide non-business graduate students with a solid background to important business concepts

·    To develop a student’s business research, planning, critical thinking, and decision-making abilities

·    To develop a student’s business presentation skills

 
The course uses classroom discussion, student participation, guest speakers, case analysis, and the creation of a summary business plan and presentation, to achieve these aims.

 
Module Content:
Specific topics addressed in this module include:

·    Creativity and Innovation

·    Intellectual Property

·    Entrepreneurship and Intrapreneurship

·    Market Analysis, Strategy and Planning

·    Business Accounting and Forecasting

·    Producing a Business Plan

·    Making a Business Presentation

 

 
",15
CS7091,Industrial Or Research Lab Internship,Individual supervisor,"Learning Outcomes:
On successful completion of this module students should be able to:

A. Contribute to the design and development of systems at the forefront of computer science research and critically evaluate their performance

B. Apply theoretical knowledge in an industrial or research laboratory setting to solve real world problems

C. Practice and further develop skills in communication, management and teamwork

D. Practice and further develop skills in time management and reporting within an industrial or research laboratory setting
E. Contribute to an ethical and professional work culture

 
Module Learning Aims:
The aim of this module is to further develop the students understanding of how the design and theoretical aspects of computer science are applied to practical problems within a real world context.
Module Content:
Host Companies and Research University laboratories play an important role in ensuring the success of the internship programme. They are expected to provide the following support:

• In partnership with TCD staff plan and schedule the overall internship to provide maximum opportunity for students to achieve the learning outcomes.

• Provide students with a stipend for the period of the internship.

• Provide students with real practical experience of system level design

• Provide students with an opportunity to demonstrate ability to tackle a challenging technical problem
• Mentor and guide students on a day to day basis during the internship

 
",30
CS7092,Msc In Cs Dissertation,Individual supervisor,"Learning Outcomes:
On successfully completion of this module students should be able to:

* Engage in a sustained piece of individual, academic research on a chosen topic within the field of computer science

* Read widely and critically reflect on a number of pieces of written research

* Explore varying methodological approaches and adopt the relevant approaches suitable to the topic being researched;
* Produce a written report dissertation of publishable standard that evaluates and synthesises written materials, and displays evidence of independent research skills.

 
Module Learning Aims:
Students will select and carry out an in‐depth research project which is expected to yield publishable results. Students must select the project, carry out required investigations and submit their dissertation within the academic year.
Module Content:
N/A
",30
CS7434,Augmented Reality,Aljosa Smolic,"Learning Outcomes:
When students have successfully completed this module they should be able to:

Develop interactive augmented reality applications for both PC based mobile devices using a variety of novel input devices

Demonstrate a knowledge of the research literature in Augmented Reality for both compositing and interactive applications
Module Learning Aims:
To provide students with a solid background in alternative 3D compositing techniques using computer vision with applications in interactive interfaces – most notably augmented reality interfaces on mobile devices.

Provide students with a comprehensive knowledge in 3D vision

Develop skills in the design and development of interactive augmented reality games 
Module Content:
Specific themes addressed within the module include:

3D Vision.

Approaches to Augmented Reality

Lighting and Illumination Issues in AR
",5
CS7CS1,Research Methods,"Gaye Stephens,","Learning Outcomes:
Students who complete this module should be able to:

 
CS1LO1 locate and obtain relevant research;  (LO5, L06)

CS1LO2 shape research questions and methods for answering them.; (LO6)

CS1LO3 formulate, defend and communicate arguments; (LO5, LO6)

CS1LO4 write articles on novel research and position papers; (LO5, LO6)

CS1LO5 constructively critique articles (LO5, LO6)

CS1LO6 Evaluate ethical challenges and ramifications of research.
Module Learning Aims:
The module is designed to foster constructive reflection on methods of scientific research in computer science
Module Content:
Specific topics addressed in this module include:

·     Literature search and reviews

·     Academic writing

·     Presenting

·     Research methods, research design

Research ethics
",5
CS7CS2,Innovation,Dave Lewis,"Learning Outcomes:
On successful completion of this module students should be able to:

CS2LO1 ideate and analyse levels of technology innovation into business ideas

CS2LO2 create and validate business models emerging from innovation processes;

CS2LO3 use different analytical models to develop and validate a business idea;

CS2LO4 develop a financial model for an innovation-led business including the analysis of cost structure and revenue streams, the justification for investment and exit options for shareholders.

CS2LO5 write and present a viable business model with a view to securing investment
Module Learning Aims:
The objective of this module is to ensure that students:

·     are familiar with the commercialisation options that are available to them from their research and as a future career path;

·     understand the process of ideation and innovation;

·     understand the process of innovation valuation along diverse dimensions, such as financial, social or other;

·     understand the opportunities and challenges facing the entrepreneur;

appreciate the skills required to prepare a start-up business and to effectively present it to potential investors and customers.
Module Content:
Specific topics addressed in this module include:

·     Types of businesses and differing business and/or social drivers (case studies)

·     The Lean Startup model

·     Applying Business Model canvas for strategic assessment of business ideas

·     Customer development and validation

·     Funding: the need for funding; sources of funding; the funding process; company valuation and shareholding

·     The business plan: objectives; contents; analysis of sample plans

·     Market analysis: why and how

·     Product strategy and pricing

·     Intellectual Property: how to protect your idea

·     Legal, ethical and social impacts of innovation activities
",5
CS7CS3,Advanced Software Engineering,Siobhán Clarke,"Learning Outcomes:
Students who complete this module should be able to:

 
CS3LO2 assess the theory of classic architecture principles and apply an appropriate architectural model in a team-based application under development;

CS3LO3 evaluate the quality of object-oriented code against standard OO principles;

CS3LO4 refactor object-oriented code to conform to standard OO principles;

CS3LO5 apply test-driven design principles;

CS3LO6 assess the theory of team-based software development, and of agile processes, and apply in a group project;

CS3LO7 analyse, specify, design, write and test a large-scale, team-based application solving a complex problem;

CS3LO8 select and apply appropriate structuring mechanisms, data placement strategies and code quality techniques for large-scale applications;

CS3LO9 document and demonstrate a large-scale, team-based application to assessors.

CS3LO10 evaluate the current state of the art in any software engineering topic. 
Module Learning Aims:
The purpose of this course is to expose students to the advanced theory and practice of contemporary software engineering techniques and team-based software development; and to the current state of the art in software engineering research. A core aim of this course is to provide students with experience of developing a large-scale application.

Upon completion of the course students will have gained experience of analysing, specifying, designing and implementing a large-scale application, as part of a team. The projects will be strand specific. In addition to addressing debugging and testing challenges, they will also have been exposed to the challenges posed by communicating with team members and other stakeholders (e.g., potential funders), project management, code integration and demonstrating such an application.
Module Content:
Specific topics addressed in this module include:

Software development lifecycles;

Domain analysis;

Requirements and specification;

Software architecture;

Object-oriented design principles;

Agile process, in particular eXtreme Programming (XP);

Test-driven development;

Refactoring.
",10
CS7CS4,Machine Learning,,"Learning Outcomes:
Students who complete this module should be able to:

CS4LO1 Decide when machine learning is an appropriate method to solve a problem

CS4LO2 Understand how machine learning works.

CS4LO3 Apply machine-learning frameworks to solve real-world problems, and adjust and extend existing algorithms when necessary.
Module Learning Aims:
The principal aim of this module is to provide students with a working understanding of machine-learning techniques and their application to solve real-world problems.
Module Content:
Machine Learning Basics (Application Areas, Challenges, Alternatives to Machine Learning)

Machine Learning in Action (Datasets, Frameworks, Evaluation)

Cross-validation and confidence intervals

Overfitting/underfitting (bias-variance trade-off)

Machine Learning Algorithms

Linear Regression

Logistic Regression

Support Vector Machines

Kernel Methods

k-Means Clustering and Mixture Models for Unsupervised Learning

Neural Networks

Deep Learning Algorithms


Use of gradient descent, and extensions for improved scalability (stochastic gradient descent etc)

Probabilistic interpretations of ML algorithms. Maximum Likelihood and MAP estimators.

Recommender systems
",5
CS7CS5,Dissertation,Coordinated by,"Learning Outcomes:
Students who complete this module should be able to:

CS5LO1 Engage in a sustained piece of individual, academic research on a chosen topic within the field of computer science

CS5LO2 Read widely and critically reflect on a number of pieces of written research

CS5LO3 Explore varying methodological approaches and adopt the relevant approaches suitable to the topic being researched

CS5LO4 Produce a written dissertation of publishable standard that evaluates and synthesises written materials, and displays evidence of independent research skills.

CS5LO5 Present research orally and in the form of a poster.
Module Learning Aims:
Module Content:
The aim of this module is to develop research skills.
",30
CS7DS1,Data Analytics,Myra O’,"Learning Outcomes:
To understand the theory and be able to apply the following techniques to a set of data

Classification and Regression Trees

Ensemble methods

   Bagging

   Boosting

   Random forests

   RuleFit Procedute

Evaluation of models
Module Learning Aims:
The aim of the course is to introduce the students to a set of techniques including classification and regression trees, and ensemble methods. Methods to evaluate models will also be discussed.
Module Content:
Overview of Field

Handling data

Missing data

Detailed discussion of Classification and Regression trees

General Overview of Ensemble methods

Detailed Discussion of Bagging

                   Boosting

                   Random Forests

                  RuleFit Procedure

Detailed discussion of Model evaluation

Handling unbalanced datasets.
Other methods of growing trees

Stacking
",10
CS7DS2,Optimisation Algorithms For Data Analysis,Georgios Iosifidis,"Learning Outcomes:
Students who complete this module should be able to:

1. Understand the principles of convex and non-convex optimization;

2. Model and analyse problems that arise in data analytics;

3. Design algorithms for optimizing data analytic applications.
Module Learning Aims:
The aims of this module are to give the student skills to model, analyse and solve optimisation problems that arise in data analytics. 
Module Content:
1. Convex optimization, convexity, duality, sub-gradient methods. 

2. Co-ordinate descent methods, parallel and asynchronous optimization algorithms.

3. Integer programming and approximation algorithms.

4. Data analytics algorithms and applications.
",5
CS7DS3,Applied Statistical Modelling,Arthur White,"Learning Outcomes:
Students who complete this module should be able to:

 
DS3LO1 Define a Markov chain and describe its theory

DS3LO2 Identify an appropriate Monte Carlo simulation method for a given probability distribution and implement it.

DS3LO3 Describe and implement the state of the art methodology in several topical applications in data science.

   DS3LO4 Complete a data science project that applies the methods of this and other modules to a real data set.
Module Learning Aims:
This module continues on from CS7CS4 (Machine Learning) with a focus on sampling methods and topical applications. It also gives an opportunity for students to apply, through a large project, the methods that they have explored in CS7DS1 (Data Mining & Analytics) and that they are currently exploring in CS7DS2 (Optimisation Algorithms for Data Analysis).
Module Content:
Markov chains;

Monte Carlo sampling methods;

Hierarchical graphical models;

Introduction to databases: MySQL, and tidyr.

Project: application of statistical and machine learning methods to real data example.
",5
CS7DS4,Data Visualisation,John Dingliana,"Learning Outcomes:
Students who complete this module should be able to:

 
DS4LO1 Discuss the concepts behind the design and construction of data visualisations;

DS4LO2 Discuss how human perception and cognition impact on this design;

DS4L03 Describe the different types of visualisation and their uses;

DS4L04 Discuss the infrastructure, both hardware and software, for visualisations and make informed decisions about the best hardware and software for specific visualisation tasks;

DS4LO5 Choose and implement the visualisation techniques best suited to analyse data for a given question.
Module Learning Aims:
This module aims to equip the student with the knowledge and tools to visualise data in ways that give insight and understanding. The module looks at all of the elements, beginning with a study of how we perceive and understand visual scenes, that inform principles of good visualisation design, through to the hardware and software that allow these visualisations to be implemented. The student who completes the module should be able to decide on the best visualisation for the data and research question at hand, and then implement in the best way possible.
Module Content:
Specific topics addressed in this module include:

Graphics fundamentals for visualization

How data is visually encoded for human perception and understanding

Recurring visualization tasks

Types of visualizations

Mapping visualization techniques to specific categories datasets

Interactive visualization

Two-dimensional and three-dimensional graph types and data animations;

Fundamentals of good data visualisation;

Visualisation tools and libraries

 
",5
CS7GV1,Computer Vision,Rozenn Dahyot,"Learning Outcomes:
On successful completion of this module, students will be able to:

Review and assess advanced computer vision technologies

Present and discuss state-of-the-art computer vision algorithms

Implement, test, evaluate and report exemplary computer vision solutions
Module Learning Aims:
This course is an advanced master class in computer vision. Emphasis is given to recent mathematical approaches used in this field so that students can understand and implement recent computer vision research papers.
Module Content:
Specific topics addressed in this module may include:

Visual perception, visual saliency, sensors and image formation

Pattern detection, registration, recognition and segmentation

Motion flow and object tracking in video

Mathematics for computer vision: regression, classification, robust objective functions, optimisation, convolution, information theory, optimal transport, tensors, deep learning, functional data analysis

Examples of algorithms: Meanshift, RANSAC, Kalman/Particle Filtering, HMMs

Examples of applications: post processing & visual effects, robotics, multimedia data indexing and retrieval, medical imaging, remote sensing, virtual world
",5
CS7GV2,Mathematics Of Light And Sound,Fergal Shevlin,"Learning Outcomes:
GV2LO1 Understand, analyse, and simulate signals resulting from wave phenomena.

GV2LO2 Understand, analyse, and simulate rigid body motion.

GV2LO3 Understand, analyse, and simulate mechanical structures and systems.
Module Learning Aims:
To help students to become proficient learners and users of the mathematics relevant to the analysis and synthesis of audio and video signals and vibrations and the numerical methods required for system implementation. Through concentrating on a relatively small number of topics in reasonable depth, this module aims to develop in students sufficient mathematical competence and confidence so that further topics can be self-taught. 
Module Content:
Wave equation and its solution; reflection, refraction, and diffraction; Fourier transform and analysis; rigid body motion; vibration; mass-spring-damper systems. 
",5
CS7GV3,Real-Time Rendering,Michael Manzke,"Learning Outcomes:
On successful completion of this module, students will be able to:

GV3LO1 explain the graphics pipelines and shader architectures, including pixel, vertex and geometry shaders.

GV3LO2 architect a shader pipeline.

GV3LO3 develop specific shaders to implement lighting models, shadowing, geometry processing and post-processing effects.

GV3LO4 analyse and compare different approaches to real-time rendering

           GV3LO5 discuss state-of-the-art issues in real-time rendering
Module Learning Aims:
This module deals with programming for GPU pipeline architectures e.g. geometry, rasterisation, texturing, fragment / pixel and vertex shaders. Students will be introduced to shader systems and shader coding and will learn about modern game graphics engine architectures and developing real-time graphics applications for desktop PC. The module will explore advanced rendering concepts presented at leading international conferences such as SIGGRAPH and GDC.
Module Content:
1.       Overview of graphics pipeline

2.       Introduction to GPUs

3.       Introduction to shader / stream programming using GLSL

4.       Illumination/ Surface models (Phong, Blinn, normal maps etc.)

5.       Shadowing Techniques (shadow maps, volumes etc.)

6.       Global Illumination (reflection, refraction etc.)

7.       Stylised and Non-photorealistic Rendering

8.       Voxel rendering
",5
CS7GV4,Augmented Reality,Aljosa Smolic,"Learning Outcomes:
On successful completion of this module, students will be able to:

    Review and asses the state-of-the-art in augmented reality technologies

    Develop an augmented reality solution (project) including implementation, testing, evaluation, demonstration, and documentation

    Come up with own ideas for an augmented reality project
Module Learning Aims:
This course will cover fundamentals and state-of-the-art in augmented reality, as well as related areas of 3D computer vision and graphics. Theoretical background as well as practical solutions and applications will be presented in the lectures. Students will get direct exposure to latest research results of Prof. Smolic’s research team V-SENSE. In their own work, students will be asked to design an own project (individual or groups) from idea, via implementation, testing, evaluation, demonstration, to documentation. In this way they will experience the full lifecycle of a practical project, as they will face it once they leave the university in either industry or research. A default project will be suggested as fallback, still covering the full lifecycle except the idea.
Module Content:
Specific topics addressed in this module will include:

·     Camera model and calibration

·     Fundamentals of 3D computer vision and multiview geometry (fundamental and essential matrix)

·     Structure-from-motion

·     SLAM

·     Shape-from-silhouette, visual hulls

·     Depth and disparity estimation

·     Homographies, warping, panoramas, 360/VR video

·     Free viewpoint video

·     Hardware devices and tools

Software packages
",5
CS7GV5,Real-Time Animation,Rachel McDonnell,"Learning Outcomes:
On successful completion of this module, students will be able to:




GV5LO1 demonstrate a fundamental understanding of real-time animation algorithms and techniques that would be employed in a typical game.

GV5LO2 develop and explain code that performs different methods of rotation interpolations.

GV5LO3 develop and explain plug-ins for behavioural animation routines using Boids steering.

GV5LO4 demonstrate, both orally and in written form, the ability to gather, analyse, and propose a project based on relevant literature in real-time animation and physics.

 
Module Learning Aims:
The aim of this module is to provide students with a deep understanding of the theory and techniques behind real time animation. We will explore computer animation and advanced issues such as behavioural animation and motion capture and also look at specific fundamental concepts such as interpolation.
Module Content:
ific topics addressed in this module include:




·     Splines and curves

·     Key-frame techniques

·     Quaternions for rotations / orientations

·     Blending and interpolation

·     Kinematics

·     Motion capture systems

·     Motion graphs and character control

·     Animation data representations

·     Behavioural Animation

·     Facial Animation

·     Perception in animation

 
",5
CS7GV6,Computer Graphics,Michael Manzke,"Learning Outcomes:
On successful completion of this module, students will be able to:




GV6LO1 write graphical programs, using OpenGL or a similar graphics API, of moderate complexity;

GV6LO2 select an object or scene representation, create a model using modelling software, and export this model for use in an interactive application;

GV6LO3 discriminate between the different rendering choices for displaying objects, such as global or local illumination algorithms, and select the correct solution for the application area;

GV6LO4 derive and solve the mathematical formulations that underpin the practical aspects of creating, animating and rendering objects and scenes;

GV6LO5 critically appraise current computer graphics topics.

 
Module Learning Aims:
The objective of this module is to equip students with the fundamental understanding of the major elements of Computer Graphics and explore related areas including geometric modelling, rendering and animation.
Module Content:
Specific topics addressed in this module include:




 
·     An introduction to computer graphics; problem domain and applications;

·     Modelling - data sources and acquisition; modelling software; representation schemes;

·     Linear algebra - two and three dimensional transforms; geometric operations; hierarchical 3D transformations;

·     The computer graphics pipeline and the OpenGL API for 3D computer graphics;

·     Projection and viewing; window to viewport transformation;

·     Illumination models and rendering algorithms; colour, shading algorithms (Gouraud and Phong), local and global illumination;

 
",5
CS7IS1,Knowledge And Data Engineering,Declan O'Sullivan,"Learning Outcomes:
On successful completion of this module a student should be able to:

IS1LO1 Compare and contrast different approaches to modelling information and knowledge (ISLO2)

IS1LO2 Model information and produce rich semantic models and ontologies (ISLO1, ISLO4)

IS1LO3 Describe how the formal models that underlie semantic meta-data enabled inference and reasoning

IS1LO4 Survey the state of the art in semantic technologies and applications

IS1LO5 Demonstrate a clear understanding of the principles underlying information interoperability and transformation.

IS1LO6 Apply semantic modelling and transformation techniques to a range of applied problems.

IS1LO7 Use sophisticated querying approaches to facilitate distributed information retrieval and aggregation
Module Learning Aims:
The module is designed to explore the management, delivery and inter-operability of knowledge, information and data through knowledge and data engineering. The module is not a typical encourages students to perceive the challenges, technologies and solutions, in handling distributed, multi modal, heterogeneous information and knowledge models and using those models to drive adaptation within applications and systems.

 
The module focuses on advanced technologies (in particular semantic web technologies), to provide adaptive, agile handling of heterogeneous, ubiquitous information. The module includes such areas as integration of heterogeneous information repositories, schema (RDF) and semantic (e.g. ontology) representation and querying.

 
The main themes of the module are:

Standards-based approaches to publishing, sharing and reusing structured data or knowledge on the web

Managing, integrating and transforming disparate information from heterogeneous

sources

Representing, managing, and reasoning about semantics of information (and

services)

 
Module Content:
Specific topics addressed in this module include:

·     Semantic Web

·     Linked Data

·     Semantic Model Design

·     Representing Semantics in metadata

·     Semantic based querying in a distributed environment (SPARQL)

·     Semantic based reasoning

·     Semantic Interoperability/Mapping

Representing Data Provenance
",5
CS7IS2,Artifical Intelligence,Annalina Caputo,"Learning Outcomes:
On successful completion of this module a student should be able to:

IS2LO1 Appreciate the scope, applications and limitations of artificial intelligence;

IS2LO2 Choose and use appropriate representations for various kinds of knowledge;

IS2LO3 Comprehend and apply search, reasoning and planning strategies;

IS2LO4 Develop intelligent systems that handle uncertainty;

IS2LO5 Apply knowledge representation, reasoning, and machine learning techniques to real-world problems in natural language processing, perception or robotics.
Module Learning Aims:
This module aims to provide students with a thorough overview of the techniques that underlie intelligent systems and an ability to apply these techniques to real-world problems.
Module Content:
Specific topics addressed in this module include:

·     Search;

·     Problem solving;

·     Knowledge and reasoning – representations, logic, reasoning;

·     Classical automated planning;

·     Representing and reasoning with uncertainty;

·     Learning;

Introductions to topics in Natural Language Processing, Perception, Robotics
",5
CS7IS3,Information Retrieval And Web Search,Séamus Lawless,"Learning Outcomes:
Having completed the module the student will be able to:

IS3LO1. Explain the process of content indexing in information retrieval including stop word removal, conflation (stemming, string-comparison), and the language dependency of these methods.

IS3LO2. Demonstrate an understanding of the importance and application of data structures in efficient information retrieval, in particular inverted file structures.

IS3LO3. Have knowledge of the theoretical basis and operation of standard algorithms for ranked information retrieval, including the term weighting and ranking models e.g. tf-idf weighting, vector-space model, probabilistic model, language modelling.

IS3LO4. Describe the process of relevance feedback for improved ranking in information retrieval, and apply standard relevance feedback algorithms.

IS3LO5. Understand the importance of evaluation in development of search engines, and the application of standard evaluation metrics such as precision and recall and test collections in measuring effectiveness of information retrieval systems, both in terms of the system's performance and user satisfaction with the system.

IS3LO6. Appreciate the application and operation of search engines in diverse environments e.g. web search, audio-visual search, context-aware and mobile search, patent search, search in microblogs etc.

IS3LO7. Be able to begin to combine technologies relevant to search systems in novel ways to synthesise new information retrieval applications.
Module Learning Aims:
Module Content:
Specific topics addressed in this module include:

·     Introduction to Web Search

·     Boolean Retrieval

·     Text Processing

o  Stopword Removal, Stemming, Spelling Correction…

·     Index Construction and Compression

·     Probabilistic Information Retrieval

·     Computing Scores for Ranking

o  BM25, Vector Space Model, PageRank…

·     Classification

o  Naïve Bayes, kNN, decision boundaries

·     Evaluation

o  Precision, Recall, F-score, NDCG…

·     Link Analysis

·     Web Crawling

·     Question Answering

·     Personalisation
",5
CS7IS4,Text Analysis,Carl Vogel,"Learning Outcomes:
On successful completion of this module, students should be able to::

IS4LO1 Grasp the scope and limitations of finite state methods;

IS4LO2 Apply concepts from model theory within content analytics;

IS4LO3 Analyze, using qualitative and quantitative methods, entailments in natural language texts, distinguishing entailments from suggestions and associations;

IS4LO4 Comprehend and apply methods of sentiment analysis and metaphor understanding;

IS4LO5 Demonstrate ability to collaborate within a designated team;

IS4LO6 Provide constructive criticism within a scholarly peer review exercise;

IS4LO7 Collaboratively compose a scholarly research article informed by the literature, novel exercises in text analytics and responding to peer review.
Module Learning Aims:
This module aims to provide students with a deep appreciation of the theory and practice of text analysis techniques.
Module Content:
Specific topics addressed in this module include:

Finite state methods for representation and reasoning, model theoretic semantics

Meaning preserving syntactic alternations, text-entailment, text-associations

Formal language theory

Statistical Language Processing

Sentiment and metaphor analysis
",5
CS7IS5,Adaptive Applications,Owen Conlan,"Learning Outcomes:
On successful completion of this module a student will be able to:

IS5LO1  Compare and contrast different approaches to designing and delivering adaptive applications

IS5LO2 Understand users of complex applications and model their behaviours, preferences and tasks

IS5LO3 As part of a team, design and develop powerful adaptive applications by identifying an appropriate use case and associated evaluation criteria, surveying the state of the art in existing adaptive applications and identifying their applicability to the use case, designing the models and adaptive intelligence required to fulfil the use case, building a fully functional adaptive application based on the identified use case, evaluating the appropriateness of the implemented system, collaboratively writing a group report detailing the application produced and how the team functioned.

IS5LO4 Write a research paper outlining the research carried out during the design, development and evaluation of the adaptive application.
Module Learning Aims:
The module is designed to explore the theoretical principles and practical challenges in designing and developing Adaptive Applications, including personalised content and service delivery, personalised information retrieval and personalised visualisations. This hands-on module encourages students to work as part of a team in order to research, design and develop cutting edge Adaptive Applications. A key element of these applications will be clearly understanding the user (their preferences, abilities, tasks) and the type of adaptive behaviours that are being employed to support that user. The module focuses on developing knowledge and skills to apply advanced technologies to provide adaptive applications to end users.

 
The main themes of the module are:

User modelling, including visual scrutability to support users in engaging with potentially complex adaptive applications

Domain, content and service modelling to ensure adequate modelled data for the adaptive applications

Personalisation approaches and Adaptive techniques to deliver personalised experiences across content and services


Team work to develop complex engineering systems

Individual research skills, particularly in the production of a research paper.
Module Content:
Specific topics addressed in this module include:

·     User modelling, including

o  Task modelling

o  User preferences

o  User characteristics

o  User behaviour

·     Domain modelling

·     Content and service modelling

·     Personalisation approaches

·     Personalised visualisations

·     Adaptive techniques

·     Case studies in adaptive applications, including

o  Intelligent agents

o  Recommender systems

o  Advanced AI techniques.

·     Semantic model design

·     Metadata representations

Heuristic models
",5
CS7NS1,Scalable Computing,Ciaran McGoldrick,"Learning Outcomes:
When students have successfully completed this module they should be able to:

 
•    Describe the basic characteristics, structure and operation of a distributed system, and the issues which a distributed system poses to a systems architect;

•    Identify and evaluate appropriate architectural models for distributed problem scenarios;

•    Design, construct, document, deploy and test scaled distributed system solutions to realistic real-world problems;

•    Reason about the performance trade-offs of decentralised architectures;

•    Make use of appropriate documentation and reference material.

•    Develop a strategy for parallel implementation of a complex algorithm

•    Utilise container and virtualisation infrastructure proficiently.

•    Describe and analyse social structures as employed in social web

•    applications, and develop behaviour measurement infrastructure.

Consider the ethical and engineering issues regarding data sovereignty. 
Module Learning Aims:
This module aims to provide a theoretical and practical understanding of the Internet as a high scale application platform that is becoming increasingly important economically and socially. It covers the fundamental content, social and meta-data structures that make up the web and how they can be represented, analysed and manipulated. It addresses the practical tools and techniques of internet application programming, ranging from introductory client/server programming techniques through to high scale user-facing service delivery and analytics focussed computation over large scale data, covering the key architectures and techniques relevant to today’s deployments.

 
Students will complete significant practical work building to an end-to-end cloud based individual project.
Module Content:
The module will be delivered in 4 phases, sequenced as described below. Each phase will be motivated by a lecture series, but will also require focus on and delivery of graded practical development work. Students are cautioned that this practical programme will build from week to week towards a final project output. Grade values for each phase are noted.

 
Phase 1: Introduction to Distributed Systems Programming (Weeks 1-3 – 20%)

 
This phase will equip students with a practical engineering method and capability to design, develop, test and deploy classic client/server distributed systems, operating on cloud infrastructure. A selection of distributed systems theory topics will be reviewed on a case study basis, covering such topics as data synchronisation and replication, fault tolerance, CAP, and so forth. A socket based development task will be set necessitating practical design derived from these studies.

 
Phase 2: Web Application and Service Development (Weeks 4-6 – 20%)

 
This phase will introduce core web programming theory, technologies and techniques, and review practical systems architectures. Topics will include an overview of the concept of web stacks (ie. LAMP) and relevant systems and technical architectures, Web service design and development, RESTful service design. A development task focussed on web service development will be set, combining individual distributed components to deliver a unified service.

 
Phase 3: Introduction to Computational Analytics (Weeks 7-9 – 10%)

 
Towards reading week, the topic of web analytics will be introduced via a set of readings and lectures that will invite the student to develop an understanding of the nature and potential of large scale computation over internet based data sources and end-user activity. Key topics include social network design and measurement, social network analysis, practical network computation and visualisation, and the ethics and practical implications regarding data sovereignty and privacy in the face of these trends. Under guidance, students will develop and submit a short written report for an individual data analytics case study, that they will implement in phase 4.

 
Phase 4: Scalable Service Delivery (Weeks 7-12 – 50%)

 
The final phase of this module will focus on methods for the design, implementation and execution of scaled social network analytics, delivered as data service, that students will be required to deliver. Topics in this practically focussed phase will include models for large scale data processing, relevant technologies, such as Object store, GFS, Map-Reduce, and BigTable, the emergence of dedicated analytics architectures, stream processing, and various application architectures for B2B, B2C and C2C scenarios. Topics will be introduced in terms of their relevancy as design patterns for students’ design and implementation work. 
",5
CS7NS2,Internet Of Things,Jonathan Dukes,"Learning Outcomes:
On successful completion of this module a student will be able to:

NS2LO1 Design, implement and debug application firmware for a low power hardware platform using standard and emerging frameworks, operating systems and tools, while demonstrating awareness of resource limitations, real-time constraints and performance.

NS2LO2 Design, implement and evaluate appropriate wireless communication strategies, using existing technologies and standards, for an Internet-connected multi-sensor/actuator system with a limited energy budget.

NS2LO3 Employ existing middleware solutions, architectural principles and platforms to construct a small-scale prototype Internet of Things application exhibiting multi-node sensing, actuation and device management.

NS2LO4 Critically assess hardware, software and communication technologies and architectures relating to Internet of Things applications with respect to performance, applicability, compatibility, reliability and security.

NS2LO5 Critically assess the value and appropriateness of existing and proposed Internet of Things applications, with an appreciation of the potential for “hype
Module Learning Aims:
In this module, students will explore the prevailing vision for an Internet of Things in a practical, pragmatic manner. The foundation of the module will be the end-to-end implementation of a prototype Internet of Things application, from the development of firmware for a low-power, constrained platform, to the integration of multiple “things” in a practical application.

 
Reflecting this end-to-end approach, the module will explore relevant hardware platforms and firmware development techniques, tools and frameworks to support the implementation of embedded “things”. Following on from this, the module will consider relevant wireless communication technologies, as well as strategies and standard protocols for connecting “things” to the Internet. Lastly, relevant platforms and middleware for discovering and managing things and combining their functionality in practical applications will be explored.

 
Underlying themes will include the need to consider the constraints of low-power devices and communication technologies in particular, as well as issues such as scalability, reliability and security. Finally, while exploring the prevailing vision for an Internet of Things, students will be encouraged to recognise that predictions relating to new technologies often follow a “hype cycle”. Furthermore, the module will seek to emphasise that the “Internet of Things” is not a new technology but rather a vision built on the application of concepts and technologies in areas such as wireless sensor networks and embedded systems, among others.
Module Content:
Specific topics addressed in this module include:

·     Introduction to the Internet of Things: definition, origins and scope

·     Low-power, embedded architectures and platforms

·     Programming for low energy consumption

·     Embedded operating systems and SDKs (e.g. Contiki, MyNewt, mbed)

·     Low-power, wireless communication technologies (e.g. Bluetooth Low Energy, LoRaWAN)

·     Architectural models and protocols for Internet connectivity (e.g. 6Lo*)

·     Application protocols and data representation (e.g. CoAP, MQTT, CBOR)

·     Resource discovery

·     Management and maintenance (e.g. LWM2M)

·     Trust, security and privacy
",5
CS7NS3,Next Generation Networks,Emanuele Di,"Learning Outcomes:
On successful completion of this module a student will be able to:

NS3LO1 Describe the basic characteristics, structure and operation of wired and wireless networks.

NS3LO2 Identify appropriate architectural models, systems strategies and use cases for a range of modern network concepts.

NS3LO3 Reason about the challenges and impediments that new, disruptive networking paradigms encounter, as well as their appropriate application.

NS3LO4 Implement solutions to key challenges in modern network architecture, e.g., scalability, cost effectiveness and energy efficiency.

NS3LO5 Implement solutions to key challenges in the wireless space e.g. mobility, interference, energy consumption.

NS3LO6 Assess the operation of medium access protocols in contemporary wireless standards for local and wide area networks, and Internet of Things, and discuss co-existence between different types of systems.
Module Learning Aims:
This module aims to provide both a theoretical and practical understanding of modern and next generation networking and systems concepts, principles, practices and technologies. Contemporary and emerging wired and wireless network systems are targeted.

Students will be exposed to a variety of system platforms, architectures, protocols, and algorithms, with a strong focus on key design principles and practices e.g. performance, scalability, mobility, virtualization.

The module also aims to highlight some of the relevant ongoing research and innovation in the space taking place within Ireland and internationally.
Module Content:
Specific topics addressed in this module include:

1.    Contemporary and emerging fixed telecommunication network architecture and systems:

a.    Fixed telecom operator network architectures

b.    Optical networking and transmission technology

c.    Next generation fixed access network technologies (latest copper and fibre access technologies)

2.    Contemporary and emerging wireless network architecture and systems:

a.    Wireless channel impairments and mitigation techniques, overview of wireless networks

b.    Mobile architectures: LTE, LTE-A, LTE-A-PRO

c.    Wireless local area networks: IEEE 802.11, HetNet and small cell deployments, mmWave

3.    Convergence of mobile and fixed architectures: backhaul, fronthaul, midhaul and protocol convergence

4.    Multi-service networks and quality of service assurance

5.    Next generation software-defined network (SDN) controlled systems

6.    Recent trends in wireless networking

a.   Cognitive radio self-organising networks and spectrum sharing

5G and Internet of Things
",5
CS7NS4,Urban Computing,Mélanie Bouroche,"Learning Outcomes:
On successful completion of this module a student will be able to:

NS4LO1 Describe the purpose, scope, and challenges associated with urban computing

NS4LO2 Describe and reason about cyber-physical systems, including closing the feedback loop

NS4LO3 Describe, compare and contrast existing approaches and associated challenges to data collection and management, including participatory and opportunistic sensing

NS4LO4 Contrast, select and apply state of the art city-scale intelligent optimization techniques

NS4LO5 Analyse, specify, design, implement and test a complete smart city application
Module Learning Aims:
This module aims to provide both a theoretical and practical understanding of urban computing and associated cyber-physical concepts, principles, challenges and solutions. Urban computing is a process of acquisition, integration, analysis of and actuation upon, big and heterogeneous data generated by a diversity of sources in urban spaces, to improve the management of constrained urban resources, thereby enhancing the urban environment, human life quality, and city operation.

Students will be exposed to the wide range of principles and challenges associated with urban computing, and how ubiquitous sensing, advanced data management and analytic models, and autonomic computing need to come together to address those.

The module also aims to highlight some of the relevant ongoing research and innovation in the space taking place within Ireland and internationally.
Module Content:
Specific topics addressed in this module include:

·     Gathering urban data, resources (environment/pollution/energy, human mobility and vehicular traffic, water) monitoring and data mining

·     Urban big data management and heterogeneous data management, knowledge fusion across heterogeneous data,

·     Closing the feedback loop, model/analyse/plan/execute loop and associated requirements and challenges

·     Citizen engagement, including participatory and opportunistic sensing

·     Urban data visualization and decision support systems

·     Anomaly detection and event discovery in urban areas

·     Urban-scale ubiquitous/pervasive intelligent systems
",5
CS7NS5,Security And Privacy,Stephen Farrell,"Learning Outcomes:
On successful completion of this module a student will be able to:

NS5LO1 discuss information security and demonstrate an understanding of the context in which information security operates in terms of safety, environmental, social and economic aspects;

NS5LO2 analyse, assess and choose among techniques for mitigating important privacy threats through appropriate security controls, namely the application of cryptographic primitives;

NS5LO3 assess both the risks and threats associated with data security, and assess how the relevant legislative and regulatory frameworks apply;

NS5LO4 reason about issues of privacy with respect to data release.
Module Learning Aims:
The objectives of this module are: to develop an in-depth understanding of risk, data privacy, threats and risks of security breaches, an awareness of computer security (cryptographic) and protocol techniques, and an ability to make appropriate decisions about securing data.
Module Content:
Specific topics addressed in this module include

·     Cryptography

o  Symmetric Key Crypto - DES and AES

o  Asymmetric Key Crypto - RSA, DLP, ECC

·     Privacy

o  Privacy Laws Around the World

o  US and EU Data Protection Laws

o  Machine readable terms and conditions

o  User control over privacy settings

Internet Security and security standards

X.509 Certificates and Public Key Infrastructure

Transport Layer Security (TLS)


Authentication

Two-Factor Authentication

Biometrics

System and Network Security

Social Networks and Privacy

Threats

Malware, SQL Injection and Cross-Side Scripting Attacks

Buffer Overflows
",5
CS7NS6,Distributed Systems,Vinny Cahill,"Learning Outcomes:
When students have successfully completed this module they should be able to:

NS7LO1 Describe the basic characteristics, structure and operation of a distributed system, and the issues that a distributed system poses for a system architect;

NS7LO2 Identify and evaluate appropriate architectural models and paradigms for building large-scale distributed systems;

NS7LO3 Design, construct, document and test distributed systems;

NS7LO4 Reason about the trade-offs between scalability, performance, consistency, reliability and availability in distributed systems;

NS7LO5 Make use of appropriate documentation and reference material.
Module Learning Aims:
Building distributed applications is still a difficult task due to the concurrency, communication latency, and possibility of partial failure that are inherent in computer networks. As in other areas of computer science, the trend in providing support for building distributed applications has been towards presenting application developers with high level abstractions on which to base the designs of their software.

 
This course tasks a critical look at some of the architectural issues involved in, and paradigms available for, the construction of large-scale distributed systems such as the infrastructures supporting Google’s search engine or Amazon’s online sales platform. In particular, the course considers how to develop systems that must make trade-offs between performance, consistency, reliability, and availability.

 
Students will be given opportunities to develop their problem solving, programming and communication skills by designing solutions to distributed systems programming problems as well as implementing such solutions as distributed systems.
Module Content:
Specific topics addressed in this module include:

·     Distributed algorithm design

o  Mutual exclusion, leader election

·     Characterisation of failure and failure models

·     Atomic transactions

·     Consistency models

o  Serializability

·     Coordination, consensus, agreement

o  Distributed commit protocols

·     Recovery

o  Logging, checkpointing

·     Replication

o  Sequential consistency

·     Process Groups

·     Group communication

o  Reliable and ordered multicast
",5
CS8001,Innovation And Entrepreneurship,Brian O'Kane,"Learning Outcomes:
When students have successfully completed this module, they should be able to:

generate innovative business ideas, critically assess them and plan for their practical implementation

identify the appropriate intellectual property protection for a business idea

apply important finance, accounting, marketing and management skills when designing a business proposition

research and develop a business plan

deliver a professional business presentation to specialist and non-specialist audiences

 
Module Learning Aims:
To develop a student’s understanding of enterprise – and, in particular, entrepreneurship – and an appreciation of its place in business

To develop a student’s creative, idea generation and innovation skills

To develop a student’s understanding of the critical importance of intellectual property

To provide non-business graduate students with a solid background to important business concepts

To develop a student’s business research, planning, critical thinking, and decision-making abilities

To develop a student’s business presentation skills

The course uses classroom discussion, student participation, guest speakers, case analysis, and the creation of a summary business plan and presentation, to achieve these aims.

 
Module Content:
Specific topics addressed in this module include:

Creativity and Innovation

Intellectual Property

Entrepreneurship and Intrapreneurship

Market Analysis, Strategy and Planning

Business Accounting and Forecasting

Producing a Business Plan

Making a Business Presentation

 

 
",10
CS8002,Research Methods (Management Of Information Systems),Nina Bresnihan/Diana,"Learning Outcomes:
On successful completion of this module students will be able to:

·     articulate how to find a good research question;

·     discuss a suitable research question for their dissertation;

·     execute the necessary skills to undertake the research for their dissertation;

·     discuss the principal research methods used in IS and management research;

·     undertake a critical literature review;
write in a clear and consistent academic style.

 
Module Learning Aims:
To:

·     develop students’ basic skills in academic research;

·     give students an awareness of various IS research methods and their strengths and weaknesses;

·     contribute to students’ critical thinking abilities;
         develop students’ ability to critique other work and research.

 
Module Content:
Specific topics addressed in this module include:

·     Basics concepts in the philosophy of research;

·     Critical thinking;

·     Critique;

·     Qualitative research methods;

·     Quantitative research methods;

·     Defining a research question;

Writing a research proposal.
",0
CS8003,Research Methods (Health Informatics),Lucy Hederman,"Learning Outcomes:
Upon successful completion of the module students should be able to:

Identify a research question, and propose an appropriate research methodology to address it

Prepare a review of literature

Design and develop effective research instruments

Use a variety of approaches to data collection and analysis

Write in an academic style.


 
Module Learning Aims:
The main objective of this module is to provide an overview of research perspectives, traditions, methods and strategies. The module also aims to support students to gain understanding of the process of data collection and analysis, to facilitate the development of a research proposal and dissertation, and to develop generic research skills.
Module Content:
The research process & key principles

Literature review and library skills

Research methods : quantitative & qualitative

Data Collection Instruments & data analysis
Academic writing.

 
",0
CS8004,Research Dissertation (Health Informatics),"Lucy Hederman,","Learning Outcomes:
When students have successfully completed this module they should be able to:

Identify a relevant and feasible area of research

Formulate and clarify a focused research question

Demonstrate clarity of problem definition and scope

Successfully plan and manage an extended research and writing process

Locate and assess potential research sources

Evaluate sources for their relevance to the topic at hand and the existing field of knowledge

Critically analyse and integrate appropriate secondary literature

Demonstrate apposite close reading skills (for example, reading for key concepts, assessing the logic of arguments put forward, finding the contexts of claims made, establishing the addressee of the text or arguments, summarizing and re-presenting arguments, etc.) and a working knowledge of what constitutes an explanation, of how to substantiate claims, and provide sufficient evidence in support of assertions

Make an informed choice about appropriate research methods and/or approaches for specific research questions

Demonstrate proficiency in the analysis and interpretation of qualitative and/or quantitative data, where appropriate

Show an awareness of, and ability to, articulate the ground from which the analysis proceeds and from which arguments, evidence, explanations, and logic are assessed

Make logical connections between premises and conclusions, assertions and evidence, case studies and arguments, analyses and exemplifications, cause (s) and effect(s), statements of intent and motivations, and statement of fact and interpretation

Sustain a coherent line of extended argument that engages with existing knowledge in the chosen area of study and exercise critical judgement on the information and/or explanations they offer

Use analytic skills in writing (rather than extensive description in lieu of analysis)

Write in a clear style and adhere to conventional academic practice with regards

citations, footnotes, and referencing

Demonstrate the independent learning ability required to advance his or her knowledge and understanding as part of their ongoing professional development



 
Module Learning Aims:
The aim of the dissertation is to develop students’ research and writing abilities via a substantial piece of independent work. Further, it aims for learners to demonstrate proficiency in the design of a research paper, application of appropriate research methods or approaches, collection and analysis of data and/or relevant literature, and application of area-specific theories and concepts. Students are expected to formulate their own research question (with the guidance of their supervisors), to gather and select material to answer their question, and set out their findings in an appropriate academic style.

 
Module Content:
None
",30
CS8005,Research Dissertation (Management Of Information Systems),Assigned Supervisors,"Learning Outcomes:
Upon successful completion of the module, students should be able to :

·     Apply the research process to investigate a topic in the area of IT management;

·     Be aware of and apply a range of research methodologies, data collection and analysis techniques applicable to IT research;

·     Produce a dissertation of approximately 20,000 words;

 
Demonstrate the higher order thinking skills of analysis, synthesis and evaluation.

 
Module Learning Aims:
Each student will undertake a substantial individual research project leading to submission of a dissertation. The topic of the research project will be chosen in consultation with the Course Director and Assistant Prof Nina Bresnihan as part of the module CS8002.

 
It is expected that the dissertation will be of a publishable standard.

 
Module Content:
The research process & its key principles

i.    Research methods

ii.    Data collection Instruments

iii.    Data analysis

iv.     Report Writing

 

 
",30
CS8006,Research Dissertation (Technology And Learning),"Richard Millwood,","Learning Outcomes:
Upon successful completion of the module students should be able to :

Apply the research process to investigate an instance of technology enhanced teaching and learning

Identify a relevant and feasible area of research

Formulate and clarify a focused research question

Demonstrate clarity of problem definition and scope

Successfully plan and manage an extended research and writing process

Locate and assess potential research sources

Evaluate sources for their relevance to the topic at hand and the existing field of knowledge

Critically analyse and integrate appropriate secondary literature

Demonstrate apposite close reading skills (for example, reading for key concepts, assessing the logic of arguments put forward, finding the contexts of claims made, establishing the addressee of the text or arguments, summarizing and re-presenting arguments, etc.) and a working knowledge of what constitutes an explanation, of how to substantiate claims, and provide sufficient evidence in support of assertions

Make an informed choice about appropriate research methods and/or approaches for specific research questions

Demonstrate proficiency in the analysis and interpretation of qualitative and/or quantitative data, where appropriate

Show an awareness of, and ability to, articulate the ground from which the analysis proceeds and from which arguments, evidence, explanations, and logic are assessed

Make logical connections between premises and conclusions, assertions and evidence, case studies and arguments, analyses and exemplifications, cause (s) and effect(s), statements of intent and motivations, and statement of fact and interpretation

Sustain a coherent line of extended argument that engages with existing knowledge in the chosen area of study and exercise critical judgement on the information and/or explanations they offer

Use analytic skills in writing (rather than extensive description in lieu of analysis)

Write in a clear style and adhere to conventional academic practice with regards citations, footnotes, and referencing

Demonstrate the independent learning ability required to advance his or her knowledge and understanding as part of their ongoing professional development


 
Module Learning Aims:
The aim of the dissertation is to develop students’ research and writing abilities via a substantial piece of independent work. Further, it aims for learners to demonstrate proficiency in the design of a research paper, application of appropriate research methods or approaches, collection and analysis of data and/or relevant literature, and application of area-specific theories and concepts. Students are expected to formulate their own research question (with the guidance of their supervisors), to gather and select material to answer their question, and set out their findings in an appropriate academic style.

The educational research project has to involve the design, development and evaluation of a technologically mediated teaching & learning experience.
It is expected that the dissertation will be of a publishable standard.

 
Module Content:
n/a
",30
CS8007,Research Methods (Technology And Learning),"Inmaculada Arnedillo-Sánchez,","Learning Outcomes:
Upon successful completion of the module students should be able to:

Identify a research question, and propose an appropriate research methodology to address it

Prepare a review of literature

Design and develop effective research instruments

Use a variety of approaches to data collection and analysis

Write in an academic style.


 
Module Learning Aims:
The main objective of this module is to provide an overview of research perspectives, traditions, methods and strategies. The module also aims to support students to gain understanding of the process of data collection and analysis, to facilitate the development of a research proposal and dissertation, and to develop generic research skills.
Module Content:
The research process & key principles

Literature review and library skills

Research methods : quantitative & qualitative

Data Collection Instruments & data analysis
Academic writing.

 
",0
CSDS05,Computer Science Directed Study Module,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",5
CSDS10,Computer Science Directed Study Module,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",10
CSLL01,Dclrs Preparation,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",5
CSLL02,Dclrs Preparation,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",0
CSLL03,Dclrs Preparation,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",0
CSLL04,Dclrs Preparation,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",0
ST1001,St1001 Software Applications I,Mimi Zhang,"Learning Outcomes:
On successful completion of this course, students will be able to:

·     Produce professional reports and documents in Word.

·     Produce professional presentations using PowerPoint.

·     Develop spreadsheet models in Excel.

·     Design and develop web sites.

·     Work independently and also as part of a team to develop software solutions.

     .     Source relevant reference material to help in solving software issues.
Module Learning Aims:
The purpose of this module is to provide an introduction to the practical uses of computer applications particularly in the area of word processing, spreadsheets, presentation packages and web page design and development. This module is a computer laboratory based module. Students are given notes that encourage self paced learning. Interaction with the module instructor and peers is encouraged

 
Module Content:
Word Processing using Microsoft Word 2016

Spreadsheets using Microsoft Excel 2016

Presentation software using Microsoft PowerPoint 2016

Designing and Publishing WWW pages using Microsoft Expression, including CSS and JavaScript.



 

 
",5
ST1002,St1002 Statistical Analysis I,Myra O’,"Learning Outcomes:
To explain basic statistical theory and apply the techniques to data. Students should be able to describe and interpret the results in a detailed fashion. More precisely students should be able to

 
Explain the nature of data

   Generate appropriate descriptive statistics

Illustrate data with appropriate graphical techniques

Use normal distribution tables

Select a random sample

Create estimates and confidence intervals of population parameters from samples

Carry out and interpret the results of statistical tests including

   Independent t-tests

   Chi-square test

Explain the ideas behind simple linear regression

Calculate simple probabilities

Understand how various statistical distributions are used


 
Module Learning Aims:
The aim of the course is to introduce the students to basic statistical concepts. There will be considerable emphasis on the use of a statistical package to analyse data.

 
Module Content:
• Nature of data

 

• Descriptive statistics

 

• Displaying data using graphs

 
Laws of probability

 
Bayes Rule

 
Binomial Distribution

 
Poisson Distribution

 
Exponential Distribution

 

• Normal Distribution

 

• Select random sample

 

• Confidence intervals for means and proportions

 

• Hypothesis testing

 

• Independent t-tests

 

• Chi-Square tests

 

• Simple linear regression
",5
ST1004,St1004 Introduction To Management Science,Arthur Hughes,"Learning Outcomes:
Learning Outcomes - Semester 1:

When students have successfully completed this module they should:
 
·     Set up a two-variable linear programming problem, solve it using the graphical method, and recognise if there is no solution, it is unbounded or if there are multiple solutions.

·     Solve probability based problems using the laws of probability including thepartition law and Bayes law law and the Expected Value of a random variable.

·     Identify the three components --- actions, states of nature and consequences --- of a decision problem and use them to construct a decision table and tree.

·     Solve a decision problem using the ideas of maximim, Hurwicz, regret and Laplace's indifference.

·     Solve a decision problem under uncertainty using the principle of maximising expected value or expected utility, and be able to compute the value of perfect and imperfect information in that problem.

·     Be able to construct and solve a decision tree for decision problems involving a sequence of actions and states of nature.

·     Explain why money has decreasing marginal worth and why a concave utility function models it.

·     Explain risk averse and risk prone behaviour, give examples of each and demonstrate that decreasing marginal worth leads to risk averse behaviour.

·     Calculate properties of a queue from information about number of servers, arrival rates and service rates.

·     Identify and solve problems using dynamic programming.

Learning Outcomes - Semester 2:

When students have successfully completed this module they should:

·     Explain why the value of money decreases as a function of how far in the future it will be available.

·     Explain how partial compounding can lead to confusion over the real amount of interest being charged on a loan.

·     Compute: the simple and compound interest of any amount of money, the value of an annuity and the payment of an amortised loan.

·     Compute the shortest spanning tree of a network and the shortest path between two points in a network.

·     Construct the network representation of a project and compute its critical path.

·     Derive the maximal flow through a network.

·     Compute the optimal inventory policy for the classic formulation, and also with constant receipt and shortages.

·     Identify the four feature of a time series.

.     Make a prediction for the next value of a time series using moving average and exponential smoothing.

 
Module Learning Aims:
This module covers a range of subjects in management science at an introductory level. The objectives of the module are to give students an overview of the subject, to teach important basic techniques and introduce systematic thinking about problems. The first semester starts with an introduction to problem solving and models and moves on to cover the time value of money, classic network problems, inventory control and time series forecasting and graphical linear programming. The second semester develops ideas in linear programming and introduces the simplex method. It will cover the basic transportation and allocation algorithms and introduce the basic ideas of game theory and decision analysis. The module will combine lectures and tutorials.The module will combine lectures and demonstrations of mathematical solutions to management science problems.

 
Module Content:
Syllabus - Semester 1:

·     Linear programming: problem, graphical solution.

·     Laws of Probability including Partition Law & Bayes Law, Bayes Law & Expected Value of a Random Variable.

·     Decision analysis: components of a decision, decision tables and trees, decision criteria, decision making under uncertainty, value of information, the utility of money (risk adverseness and decreasing marginal worth).

·     Queues: M/M/1 and M/M/n queues.

·     Dynamic Programming: the knapsack problem, the allocation problem, general principle of dynamic programming.

 
Syllabus - Semester 2:

 
·     Time value of money: interest, net present value, annuities, amortised loans, futures.

·     Networks: spanning tree, shortest path, critical path analysis, maximum flow algorithm.

·     Inventory control: the classic model, constant receipt, shortages.

·     Time series: properties of time series, moving averages, exponential smoothing.

·     Transportation problem: definition, balanced problems, algorithm, initial solutions.

 

 
",10
ST1251,Introduction To Statistics I,staffArthur White,"Learning Outcomes:
At the end of this module students should be able to:

explain the elementary ideas underlying probability models

distinguish between discrete and continuous random variables

apply a number of simple probability models to practical problems in a range of disciplines

demonstrate an understanding of the elementary properties of random variables (expectation, variance and covariance)


 
Module Learning Aims:
To introduce students to the elementary ideas of probability and the use of simple probability models
Module Content:
Elementary probability ideas;

discrete probability models, including binomial, hypergeometric, geometric, Poisson;

continuous distributions including Normal, uniform and exponential;

expectations and variances of random variables;

combining random variables;

sampling distributions.


 
",5
ST1252,Introduction To Statistics Ii,Arthur White,"Learning Outcomes:
On successful completion of this module students should:

have a strong grasp of the fundamental statistical ideas of significance tests and confidence intervals, which underpin statistical analysis

be able to apply simple statistical methods to practical problems

be able to explain why statistical methods are so widely applied in both the natural and social sciences, engineering and business

have a sound basis for developing their knowledge of more advanced statistical ideas and methods.


 
Module Learning Aims:
To introduce students to the elementary ideas of statistical inference and the use of simple statistical methods in practical situations
Module Content:
Statistical variation;

parameter estimation;

statistical tests and their properties;

design and analysis of simple comparative studies for both binary and continuous variables;

introductions to Analysis of Variance (ANOVA), regression and contingency tables.


The theory will be illustrated by examples from biology, engineering, industry, medicine and the social sciences. 
",5
ST2001,St2001 Software Applications Ii,Chief Examiner,"Learning Outcomes:
On successful completion of this course, students will be able to:

·     Develop software solutions with the following tools:

        o  Microsoft Excel

        o  Microsoft Access

        o  Visual Basic for Applications.

·     Work independently and also as part of a team to develop software solutions.

·     Work with written and oral descriptions of software application problems and apply suitable tools to build solutions.

·     Source relevant reference material to help in solving software issues.

·     Participate effectively in group discussions on technical issues and problems.

          Produce, test and implement suitable software solutions.

 
Module Learning Aims:
The purpose of this course is to give students experience in advanced computer applications. This will include the advanced applications of Excel. The course will introduce students to database technology using Microsoft Access. Students will use Visual Basic for Applications (MS Office 2010). This course is a computer laboratory based course. Students are given notes that encourage self paced learning. Interaction with the course instructor and peers is encouraged.
Module Content:
Advanced spreadsheets using Microsoft Excel 2010

Databases using Microsoft Access 2010

Programming with Visual Basic for Applications (MS Office 2010)


 
",10
ST2004,St2004 Applied Probability I,Bernardo Nipoti,"Learning Outcomes:
Students will have ability

 

to build a model in a spreadsheet or similar using random numbers

to analyse problems via summaries of many replications

in some circumstances to bypass these steps by using probability

to use the formal language of random variables, their expected values and their probability distributions to use conditional distributions


 
Module Learning Aims:
In this course we take a problem-based approach that replaces mathematics with the use of random numbers in a spreadsheet, by following what is known as the Monte Carlo method. Students will rapidly acquire the facility to model complex random (or stochastic) systems. They will subsequently learn the language of probability which can sometimes by-pass the algorithms, or render them more efficient.
Module Content:
Specific topics addressed in this module include:

 

Random number generation in EXCEL

Random games and random passwords

Random Systems

Transformations of random numbers

Conditional and rejection algorithms

Properties and summaries of random systems

The long run properties of random numbers (law of large numbers)

Univariate random variables and the cumulative probability distribution function

Properties of Monte Carlo algorithms

The concepts underlying probability, including

The basic rules

Discrete and continuous univariate random variables

cumulative distribution functions

Probability mass functions, density functions, expected values, variances and standard deviations

Frequently used univariate probability distributions

Bivariate and multivariate probability distributions

Covariance and correlation
",5
ST2005,St2005 Applied Probability Ii,Jason Wyse,"Learning Outcomes:
At the end of this module, students should be able to:

Derive confidence intervals and hypothesis tests for means and variances

Derive prediction intervals for simple statistical models and explain how they differ from confidence intervals

Define maximum likelihood estimates and how compute them

Implement a bootstrap to construct confidence intervals

Construct a q-q plot and use simple transformations of data that can make it more normally distributed

Construct a probability plot for any given distribution where its distribution function is known

Calculate the properties of multivariate distributions

Derive marginal and conditional probabilities of the bivariate normal distribution

 

 
Module Learning Aims:
This module will develop several important ideas in statistical analysis making use of some of the ideas introduced in ST2004. It acts as a bridge to the sophister years by introducing the fundamental ideas that are used in the more advanced statistics modules that will take place then.
Module Content:
Recap: derivation of the confidence interval and tests of hypothesis for normal data; the difference between a confidence interval and a prediction interval

The Central Limit Theorem and what it says about confidence intervals and tests of hypothesis

The bootstrap approach to confidence intervals and tests of
hypothesis

Introduction to maximum likelihood estimation and computation

The q-q plot and transforming data to make it more Gaussian

Introduction to multivariate distributions
",5
ST2006,St2006 Management Science Methods,Mary Sharp,"Learning Outcomes:
By the end of Semester 1 students should be able to:

• Identify an infeasible problem, a problem with multiple solutions or the presence of degeneracy

• Describe how to find an initial basic feasible solution to a linear program

• Conduct a parametric analysis on a coefficient in the objective function

• Define and formulate a balanced transportation problem and solve

• Describe how to solve integer programs with a branch and bound algorithm

• Formulate a 0–1 integer program, put into standard form and solve with a branch and bound algorithm

 
By the end of Semester 2 students should be able to:

 
• the concepts and terminology involved in Simulation;

• different kinds of simulation techniques;

• how and when it is used and be familiar with a range of application examples;

• how to apply a simulation using appropriate software;

• its limitations

 

 

 
Module Learning Aims:
Semester 1

This course is based on developing and solving mathematical models of real life problems. 

The students receive a theoretical introduction to the fundamental elements of a mathematical model. Modelling techniques are taught to solve problems in many domains.

 
Semester 2: Introduction to Simulation

To introduce the concepts, ideas and techniques involved in Simulation.

 
Module Content:
Semester 1

• Formulate and solve Linear and Goal Programming problems using the Simplex Method

• Perform Sensitivity Analysis on the output from a Linear and Goal Programming problem

• Formulate and solve Transportation, Transhipment and Assignment problems

• Formulate a 0 – 1 Linear Programming problem and solve using the Cutting Plane and Branch and Bound Methods

• Analyse networks for the Chinese Postman and Travelling Salesman Problems

• Other relevant mathematical models

 
Semester 2

Specific topics addressed in this module include:

 
• Entities, attributes and variables;

• Events;

• Resources;

• Queues;

• Steady-state models and transients;

• Software for simulation;

• Statistical analysis of output;

 
",10
ST2351,Probability And Theoretical Statistics I,Simon Wilson,"Learning Outcomes:
At the end of this module, students should be able to:

Derive the probability space for simple experiments, and prove simple properties of probabilities from its definition;

Identify when random variables are independent, and derive conditional distributions and expectations;

Define the most common discrete and continuous random variables, and compute their moments and probabilities, moment and characteristic generating functions where appropriate;

Define a multivariate distribution and calculate marginal and conditional distributions from it;

State and prove the laws of averages and of central limit;

 
Module Learning Aims:
This module will describe the fundamentals of probability theory, from the basic axioms of probability to the most commonly used aspects and theorems of the theory.


 
Module Content:
Events and probabilities

The laws of probability

Independence and conditional probability

Discrete random variables

Continuous random variables

Multivariate distributions & independence

Moment and characteristic generating functions

The law of averages and the central limit theorem
Examples and past exam questions

 
",5
ST3001,St3001 Software Applications Iii,Aideen Keaney,"Learning Outcomes:
On successful completion of this module, students will be able to:

 

Develop software applications with the following tools:
o Microsoft Access
o MySQL
o Microsoft Expression
o PHP

Build dashboards using Excel Power BI and other tools.

Work independently and also as part of a team to develop software solutions.

Work with written and oral descriptions of software application problems and apply suitable tools to build solutions.

Source relevant reference material to help in solving software issues.

Participate effectively in group discussions on technical issues and problems.

Produce, test and implement suitable software solutions.
Module Learning Aims:
This course will introduce students to Visual Basic programming and students will use Visual Basic 2012 to learn how to build small software applications. The course will also give students experience in client server database technologies. This course will be based on various databases such as MySQL and Microsoft Access. The course will introduce students to writing database queries using SQL. HTML and PHP will be used to develop user front ends to these databases. This course is a computer laboratory based course. Students are given notes that encourage self paced learning. Interaction with the course instructor and peers is encouraged.
Module Content:
Building databases with Microsoft Access.

Generating SQL queries

Creating online databases

Using PHP to access online databases

Using MongoDB and NoSQL

Building dashboards.
",10
ST3002,St3002 Statistical Analysis Iii,Jason Wyse,"Learning Outcomes:
After this course, students will have a toolbox of skills for data analysis. In particular, students should be able to apply their statistical knowledge to a given real scenario, do analysis and make recommendations.
Module Learning Aims:
This module aims to provide an opportunity for students to develop their hands on skills in data analysis. Specific methods will be explored to illustrate these approaches. Students will become very familiar with the R statistical computing language.
Module Content:
Statistical computing in R

Merging and cleaning datasets

Functions

Graphics

Optimisation

Generalized linear models

Special topic: Classification / Bootstrapping
",5
ST3004,St3004 Research Methods,Ms. Susan,"Learning Outcomes:
On successful completion of this module students will be able to:

• Define, distinguish and identify secondary and primary data sources;

• Access data on-line/off-line and in published forms;

• Undertake computational analysis of sample data sets;

• Define the objectives of a research project;

• Select an appropriate research design;

• Compare data sources, collection methods and methods of analysis;

• Carry out data collection;

• Analyse the data appropriately;

• Write up the findings;

• Summarise, interpret and, where appropriate, make recommendations on the results;

• Present concise reports.
Module Learning Aims:
Upon completing this course, students should have an understanding of the nature of the research process, drawing upon primary and secondary data sources; be able to locate, analyse and interpret quantitative and qualitative data; and to present the findings.
Module Content:
",5
ST3005,St3005 Information Systems,– Maria,"Learning Outcomes:
When students have successfully completed this module they should be able to:
Understand and describe how organisations survive in today’s business environment through the use of Information Systems.
Evaluate emerging information systems in business and in society
Understand the need for computerised support of managerial decision making.
Describe the use of information systems for business intelligence (BI) and decision support within business.
Identify the ethical, social, and political issues that are raised by information systems.
Understand information systems security and data protection and be able to assess the business value of these.
Module Learning Aims:
The objective of this course is to introduce students to information systems in business and examines how existing management information systems as well as emerging, disruptive information systems can support improved organisational performance. Additionally, discussion in class will focus on the increasing need for industry and society to develop information security and data protection skills and awareness regarding the design of these systems in order to ensure business continuity. Discussions will also include how we are seeing Information Systems permeating multiple industries today. Aspects of ethical use of IT are also covered. 
Module Content:
Specific topics addressed in this module include:


Introduction to the Information Systems perspective on technology.

Digital Markets/Digital Goods/Digital Commerce

Digital Business Models

Review of Emerging Technology

Mobile Cloud Computing
Introduction to Information Systems Security and Data Protection

Information Technology and Ethics
",5
ST3008,St3008 Management Science Case Studies,Aideen Keaney,"Learning Outcomes:
When students have successfully completed this module they should:

 
• know how to work in a team;

• be able to participate effectively in a team interview;

• be able to deal with difficult and messy problems;

• specifically, know how to analyse a complex situation with several problems and to apply analytical tools to solve those problems;

• be able to make presentations to senior executives;

• be able to write and present a high quality business report;
Module Learning Aims:
To develop students’ interpersonal, teamworking and analytical skills
Module Content:
Specific topics addressed in this module include:

 
• This is a problem based learning module. It requires students to apply what they have learned in other modules in MSISS in a simulated real life problem. 

• Specific topics addressed include team working, interviewing, problem solving, conflict resolution, reporting writing and self organising skills.
",10
ST3009,Statistical Methods For Computer Science,Doug Leith,"Learning Outcomes:
When students have completed this module they should be able to:

1.   Describe the basic properties of random variables and calculation of probabilities.

2.   Explain Bayes theorem and its use in Bayesian inference.

3.   Explain the law of large numbers and understand the importance of the normal distribution

4.   Use linear and logistic regression and apply it to noisy data.
Module Learning Aims:
The module provides an introduction to statistics and probability for computer scientists. The aim is to provide the basic grounding needed for machine learning and algorithm performamce analysis.
Module Content:
Topics covered in this module include:

1.   Experiments, events, probability of an outcome.

2.   Conditional probability and Bayes Theorem.

3.   Independence.

4.   Mean, variance, covariance, Law of Large Numbers and Normal distribution. 

5.   Maximum likelhood and MAP estimates.

6.   Linear regression, logistic regression.  
",5
ST3010,Forecasting,Rozenn Dahyot,"Learning Outcomes:
When students have successfully completed this module they should be able to:

Define and describe the different patterns that can be found in times series and propose algorithms and statistical models that are suitable for their analysis.

Program, analyse and select the best model for forecasting.

Interpret output of data analysis performed by a computer statistics package.

Compute predictions with their confidence intervals using the selected model.


 
Module Learning Aims:
The aim of this module is to learn several mathematical techniques to analyse past observations for the purpose of predicting future outcomes and their associated uncertainty. The module will be practical, and will involve every student in extensive analysis of case study materials for a variety of time series data.
Module Content:
Introduction to forecasting; ARIMA models, GARCH models, Kalman Filters,data transformations, seasonality, exponential smoothing and Holt Winters algorithms, performance measures. Use of transformations and differences.

 
",5
ST3011,Mla,Brett Houlding,"Learning Outcomes:
Multivariate Analysis:

 
 

When students have successfully completed Multivariate Analysis they should be able to:

 

Define and describe various classical dimension reduction techniques for multivariate data.

Implement clustering and/or classification algorithms and assess and compare the results.

Interpret output of data analysis performed by a computer statistics package. 


 
Module Learning Aims:
Multivariate Analysis:

 

Classical multivariate techniques of discriminant analysis, principal component analysis, clustering and logistic regression are examined. There is a strong emphasis on the use and interpretation of these techniques. More modern techniques, some of which address the same issues, are covered in the SS module Data Mining. 

 
Module Content:
Multivariate Analaysis

 
 
 

Principal Components Analysis

Multidimensional Scaling

Factor Analysis

Hierarchical and Iterative Clustering

K-Nearest Neighbours

Discriminant Analysis

Logistic Regression


 
",5
ST3451,Applied Linear Statistical Methods I,Rozenn Dahyot,"Learning Outcomes:
When students have successfully completed this module they should be able to:

1.   Define and apply GLMs for the analysis of data.

2.   Program, analyse and select the best model.

3.   Interpret output of data analysis performed by a computer statistics package .  

 
Module Learning Aims:
Generalised Linear models (GLMs) are an extension to Standard Linear Regression. This extension is two folds. First, the distribution of the differences between the responses and their fitted values by the model is a member of the Exponential family (e.g. Normal, Poisson, Binomial etc.). Second, the relationship between the (expectation of the) responses and the exploratory variables is not anymore linear, and is chosen amongst several possible link (mathematical) functions. The course will focus on applying GLMs in several case studies using R. 
Module Content:
1.    Generalized Linear Models

2.    Exponential family

3.    AIC for model selection

4.    Deviance

5.    Multinomial distribution

6.    Survival Analysis 
        With case studies in R 

 
",5
ST3452,Applied Linear Statistical Methods Ii,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",5
ST3453,Stochastic Models In Space And Time I,Jason Wyse,"Learning Outcomes:
Students will have ability to discuss and model simple versions of the following processes in time:

Everyday examples of stochastic processes

Understand and apply the Markov property

Describe long run properties of Markov processes

Deal with simple Markov processes in discrete time, continuous time and space
Module Learning Aims:
Identify and use various stochastic processes for statistical modelling. Use application of stochastic processes to deal with a large selection of problems. Appreciate the importance of stochastic processes, and their mathematics.


 
Module Content:
Specific topics addressed in this module include:

Examples of Stochastic processes.

The Markov property and Markov chains.

Stationarity

Poisson processes and their properties

Continuous time processes

Introduction to Spatial processes (time permitting)
",5
ST3454,Stochastic Models In Space And Time Ii,"Rozenn Dahyot,","Learning Outcomes:
When students have successfully completed this module they should be able to:

 

Define and describe the different methods introduced in the course

Program, analyse and select the best model.

Interpret output of data analysis performed by a computer statistics package. 


 
Module Learning Aims:
This course introduces different statistical modelling used for inference on Space and/or Time processes that have applications in engineering, geostatistics, finance etc
Module Content:
Kalman Filter, State Space Models, Brownian motion, Orntein-Uhlenbeck Process, Dirac function, Kriging, Spectral analysis, Radon transform, functional data analysis (Kernel density estimates, Nadaraya-Watson estimator)
",5
ST3455,Modern Statistical Methods I,staffSimon Wilson,"Learning Outcomes:
At the end of this module, students should be able to:

  Derive the structure function from the structure diagram of a system;

prove results on system reliability in terms of the reliability of their components;

Define and interpret the failure rate and derive the survival function from it;

Fit lifetime distributions to data, including censored data;

Calculate non-parametric estimates of the survival function;

Calculate various exceedances and the distribution of the maxima and minima of a sequence of random variables;

State the extreme value theorem and apply it to derive approximate distributions of extremes;

Use the bootstrap (both parametric and non-parameteric) and jacknife to derive approximate confidence intervals and bias of estimates;

State the advantages and disadvantages of the bootstrap and jacknife.

 
Module Learning Aims:
This module will describe several topics of a more advanced nature in probabilty modelling and statistics.

 
Module Content:
Survival Analysis: systems of components, reliability of systems, failure rate, lifetime distributions, inference, censoring;

Extreme Value Theory: modelling extrema, extreme value theorem, inference, extrema under non- random and random censoring;
The Bootstrap: review of Monte Carlo simulation, the jacknife, the simple bootstrap, extensions

 
",5
ST3456,Modern Statistical Methods Ii,Simon Wilson,"Learning Outcomes:
At the end of this module, students should be able to:

  Derive the structure function from the structure diagram of a system;

prove results on system reliability in terms of the reliability of their components;

Define and interpret the failure rate and derive the survival function from it;

Fit lifetime distributions to data, including censored data;

Calculate non-parametric estimates of the survival function;

Calculate various exceedances and the distribution of the maxima and minima of a sequence of random variables;

State the extreme value theorem and apply it to derive approximate distributions of extremes;

Use the bootstrap (both parametric and non-parameteric) and jacknife to derive approximate confidence intervals and bias of estimates;

State the advantages and disadvantages of the bootstrap and jacknife.

 
Module Learning Aims:
This module will describe several topics of a more advanced nature in probabilty modelling and statistics

 
Module Content:
Survival Analysis: systems of components, relia- bility of systems, failure rate, lifetime distributions, inference, censoring;

Extreme Value Theory: modelling extrema, extreme value theorem, inference, extrema under non- random and random censoring;
The Bootstrap: review of Monte Carlo simulation, the jacknife, the simple bootstrap, extensions

 
",5
ST3457,Statistical Inference I,Simon Wilson,"Learning Outcomes:
At the end of this module, students should be able to Explain what subjective probability is and how it can be motivated; Explain how Bayesian statistical inference is the result of adopting the subjective approach to probability; Contrast the Bayesian and frequentist approaches to statistical inference; Explain the meaning of a likelihood, parameter and probability model; Apply Bayes’ Law to a given model and prior distribution to form a posterior distribution, and recognise the functional form of the common probability distributions; Identify a point estimate to take from knowledge of a loss function; Select an interval estimate from a posterior distribution; Summarise the different numerical analysis approaches to calculating the integrals involved in multi-dimensional posterior distributions or the calculation of marginal distributions from them; Describe the Monte Carlo approaches of rejection or importance sampling to approximate a given posterior distribution; Show how Monte Carlo methods can be used to estimate the normalising constant of a posterior distribution; Demonstrate methods of elicitation of prior distributions.

 
Module Learning Aims:
This module will describe the theoretical and practical aspects of Bayesian statistics inference.
Module Content:
Quantifying Uncertainty, Some Laws of Probability, Probability Models and Prior Distributions, Statistical Inference, Simple Examples: Conjugate Priors, A More Complex Example, Point and Interval Estimates, Numerical Methods of Computing Posterior Distributions, Basic Simulation Methods, Markov chain simulation, Prior Elicitation, Some Real Applications.
",5
ST3458,Statistical Inference Ii,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",5
ST4001,St4001 Msiss Final Year Project,Aideen Keaney,"Learning Outcomes:
On successful completion of this module students will be able to:

 

Demonstrate a degree of research expertise in a particular subject area;

Show that they have engaged in a critical understanding of their subject including a project literature review and evaluation;

Understand and apply appropriate quantitative techniques in research and enquiry;

Address a moderate sized problem on behalf of a client, select and justify an appropriate approach, and follow that approach systematically;

Undertake the execution of the project at the required level of analysis, design, and technical skill;

Recognise ethical issues that may arise when conducting research;

Present the findings, conclusions and recommendations in a project report.
Module Learning Aims:
The aims of the project are to integrate the theoretical and practical knowledge of the student across all of the years of their study and to provide a practical demonstration of their capability in executing a challenging and large-scale research project in line with the number of ECTS being awarded.
Module Content:
Students may select a project from the list of project proposals issued to them, or alternatively they can propose their own projects. Students and their supervisors will be allocated by the Module Coordinator. Students are not always guaranteed a project in their preferred area of choice.
",20
ST4003,Data Analytics,Myra O’,"Learning Outcomes:
To understand the theory and be able to apply the following techniques to a set of data


Classification trees
Neural Networks

Mutivariate Adaptive Regression Splines
Ensemble methods
Random Forests

Bagging

Boosting

RuleFit procedure (Jerome Friedman)
Evaluation of models
Module Learning Aims:
The aim of the course is to introduce the students to a set of techniques including classification trees, neural networks, ensemble methods and support vector machines. Some techniques will be discussed in detail whilst a brief overview will be given for others.  Methods to evaluate models will also be discussed.
Module Content:
Introduction

  Overview

  Handling Missing data

Detailed discussion of Classification Trees

Detailed discussion of Evaluation of Models

Overview of Association Rules

Overview of Neural Nets

Overview of Support vector machines

Ensemble methods

  General Overview of Ensemble methods

  Detailed discussion of Random Forests

  Detailed discussion of RuleFit procedure
",10
ST4005,Decision Analysis,Brett Houlding,"Learning Outcomes:
After this course, students will be able to

Introduction to decision analysis: utility.

Uncertainty.

Solve novel and/or complex problems in Decision Theory.

Have a systematic and coherent understanding of theoretical mathematics in the field of Decision Theory.

Formulate decision problems and solving decision trees.

Utility, value of money, multi-attribute utility.

Use of data in decision making, statistical decision theory.

Sequential decision making.

Game theory, including two-person zero-sum games.

Bargaining, including Nash' theory.

Group decisions and social choice.

Identify when an optimisation problem can be solved using dynamic programming and implement the dynamic programming solution;

Demonstrate that decreasing marginal worth leads to risk averse behaviour;

Calculate the risk premium for a given insurance contract and utility of money;

Options and limitations of social welfare functions.
Module Learning Aims:
To describe the basic ingredients of decision theory, for individuals and for groups, and to apply the theory to a variety of interesting and important problems.
Module Content:
Multi-objective, Multi-Criteria decision making;

Decision theory;

Dynamic programming;

Utility of money;

Bargaining theory and game theory.
",5
ST4500,Strategic Information Systems,Frank Bannister,"Learning Outcomes:
On completion of this module students should be able to discuss and write critically about the impact of current and emerging developments in ICT on business and government as well as on individuals and society.
Module Learning Aims:
To present students with an overview of the business and social impacts of current developments in information systems (IS) and ICT. To equip students to think critically about these impacts and their implications for business and society today and in the future.
Module Content:
Specific topics addressed in this module will be drawn from a range of topics including, but not limited to,:

 

Enterprise resource planning systems;

Customer relationship management systems;

Knowledge management systems;

IS/ICT management and governance;

Outsourcing;

IS evaluation;

Strategic IS planning;

IS project management;

e-Government;

e-Democracy;

The information society;

e-Business infrastructures;

Mobile business and location awareness;

Privacy and trust;

Enterprise architectures;

Service oriented architectures;

Open systems;

Artificial Intelligence

Robotics

Social networks

Emerging technologies;

Technology forecasting.
",10
ST4501,St4501 Strategic Information Systems,"Frank Bannister,","Learning Outcomes:
On completion of this module students should be able to discuss and write critically about the impact of current and emerging developments in ICT on business and government as well as on individuals and society.

 
Module Learning Aims:
To present students with an overview of the business and social impacts of current developments in information systems (IS) and ICT. To equip students to think critically about these impacts and their implications for business and society today and in the future.
Module Content:
Specific topics addressed in this module will be drawn from a range of topics including, but not limited to,:

 

Enterprise resource planning systems;

Customer relationship management systems;

Knowledge management systems;

IS/ICT management and governance;

Outsourcing;

IS evaluation;

Strategic IS planning;

IS project management;

e-Government;

e-Democracy;

The information society;

e-Business infrastructures;

Mobile business and location awareness;

Privacy and trust;

Enterprise architectures;

Service oriented architectures;

Open systems;

Artificial Intelligence

Robotics

Social networks

Emerging technologies;

Technology forecasting.


 
",15
ST7001,Base Module,staffMimi Zhang,"Learning Outcomes:
On successful completion of the Base Module, students should be able to:

 
·     demonstrate a systematic understanding of the fundamental inferential ideas which underpin statistical methods,

·     demonstrate a broad understanding of the role of statistical ideas and methods covering both data collection and data analysis,

·     demonstrate a competence in the use of basic statistical tools.

 
They will have a sound basis on which to develop further their statistical skills
Module Learning Aims:
The base module is introductory and will lay down the foundations on which other modules will build. The fundamental statistical inferential ideas of significance tests and confidence intervals are the central topics. The various inferential methods will be unified through the concept of a statistical model, which is an abstract representation of the quantity we wish to describe. For example, we may choose to represent the weights of filled containers by a Normal distribution with a particular centre (mean) and measure of spread (standard deviation). This would allow us to introduce formal tests to determine when the process average weight changes.

 
Of course, the value of any formal procedure will depend on how well the underlying model represents the characteristics of the practical problem. When models are fitted, good statistical practice requires the assessment of the models used; this is done mainly by use of graphical procedures. These may be simple scatterplots of two characteristics of a number of individuals (e.g., heights and weights of a sample of people) to determine whether or not the assumption of a linear relationship between the two characteristics is reasonable. Alternatively, the graph might be a Normal probability plot (quantile-quantile plot) of residuals (differences between observed and predicted values) after a complex multiple regression model has been fitted to the data. Many questions can be answered by simple plots, so the course will emphasis practical methods that can be applied across many empirical disciplines.


 
Module Content:
Specific topics addressed in this module include:

 
•     Data summaries and graphs

•     Random variables and distributions

•     Sampling distributions: confidence intervals and tests

•     Comparative experiments: t-tests, confidence intervals, design issues

•     Counted data: confidence intervals and tests for proportions, design issues

•     Cross-classified frequency data: chi-square tests

•     Introduction to Analysis of Variance

•     Introduction to Regression Analysis

Statistical computing laboratory
",15
ST7002,Introduction To Regression,Chief Examiner,"Learning Outcomes:
Students will have the ability

·        to carry out an initial examination of the data

·        to use a regression package (MINITAB) to apply multiple regression to simple data sets

·        to interpret the results of the model

·        to construct and exploit derived variables, such as logs, products and indicator variables

·        to see such modelling as the basis for more advanced statistical analysis
Module Learning Aims:
Multiple linear regression – and its many variants – is the most widely used tool in applied statistics. This course will build on simple linear regression, introduced in the Base Module. The aim is to become familiar with its use, to further develop experience and confidence in use and role of statistical modelling. As the class is diverse in terms of research area and quantitative skills, students are encouraged to conduct small analyses of data in their own research fields.
Module Content:
Specific topics addressed in this module include:

·     Review of simple linear regression model: assumptions, model fitting, estimation of coefficients and their standard errors

·     The multiple linear regression model and its analysis including:

o  Confidence intervals and statistical significance tests on model parameters

o  Issues in the interpretation of the multiple parameters

o  Analysis of variance in regression: F-tests, r-squared

o  Indicator variables and interaction terms

·     Model validation: residuals, residual plots, normal plots, diagnostics
Introduction to logistic regression

 
",10
ST7003,Design And Analysis Of Experiments,staff:Michael Stuart,"Learning Outcomes:
On successful completion of this module, students should be able to

compare and contrast observational and experimental studies,

describe and explain the roles of control, blocking, randomisation and replication in experimentation,

explain the advantages of statistical designs for multifactor experiments,

describe and explain the genesis of a range of basic experimental design structures,

implement and interpret the analysis of variance for a range of experimental designs,

describe the models underlying the analysis of variance for a range of basic experimental designs,

produce and interpret graphs for data summary and model diagnostics,

provide outline descriptions of more elaborate designs and data analyses,

outline strategic issues involved in the design and implementation of experiments.
Module Learning Aims:
This module is concerned with the design of data collection exercises for the assessment of the effects of changes in factors associated with a process or system and the analysis of the data subsequently produced.

In order to assure that the experimental changes caused the observed effects, strict conditions of control of the process must be adhered to. Specifically, the conditions under which the experimentation is conducted must be as homogeneous as possible with regard to all extraneous factors that might affect the process, other than the experimental factors that are deliberately varied. Design principles intended to assure such control of experimental conditions are advocated.

The simplest experiments involve comparison of process results when a single factor is varied over two possible conditions. When more than two factors are involved, issues regarding the most efficient choice of combinations of factor conditions and ability to detect interactions between factors become important. With many factors and many possible experimental conditions for each factor, the scale of a comprehensive experimental design becomes impractical and suitable strategies for choosing informative subsets of the full design are needed.

The analysis of data resulting from well designed experiments is often very simple and graphical analysis can be very effective. Standard statistical significance tests may be used to assure that apparent effects are real and not due simply to chance process variation. In cases with more complicated experimental structure, a more advanced technique of statistical inference, Analysis of Variance, may be used. Confidence intervals are used in estimating the magnitude of effects.

Minitab may be used to assist both with design set up and with analysis of subsequent data, both graphical and formal. There will be two laboratory sessions involving the use of Minitab.

Case studies and illustrations from a range of substantive areas will be discussed.

 
Module Content:
The need for experiments

experimental and observational studies

cause and effect

control

Basic design principles for experiments

Control

Blocking (pairing)

Randomisation

Replication

Factorial structure

Standard designs

Randomised blocks

Two-level factors

Multi-level factors

Split units

Analysis of experimental data

Exploratory data analysis

Effect estimation and significance testing

Analysis of variance

Statistical models, fixed and random effects

Model validation, diagnostics

Review topics

Block structure and treatment structure

Repeated measures

Analysis of Covariance

Clinical trials

Response surface designs

Robust designs

Non-Normal errors

Strategies for Experimentation
",10
ST7016,Introduction To Statistics For Research Students (Apr),Chief Examiner,"Learning Outcomes:
On successful completion of this module students should be able to:

solve simple problems using distributions

Provide & interpret estimates of unknown parameters in populations

identifythe benefits of using confidence interval and hypothesis tests to make statistical decisions.

 
Module Learning Aims:
Provide the student with an introduction to statistical concepts.

Introduce the student to some distributional theory to solve problems.

Introduce the learner to some topics in interferential statistics and apply some interval based and hypothesis testing techniques using the standard normal and the student-t distributions.

 
Module Content:
' Introduction to Statistical concepts, notation, sampling methods
' Introduction to random variables, linear combinations random variables
' Summary statistical measures + some graphical displays
' Statistical variation, Standard Normal distribution and applications
' Statistical inference, interval and hypothesis testing techniques for means, proportions
",5
STDS05,Statistics Directed Study Module,,"Learning Outcomes:
Module Learning Aims:
Module Content:
",5
